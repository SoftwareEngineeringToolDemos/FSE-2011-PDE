// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tum.PDE.ToolFramework.Templates.Shell.ViewModel.WPFApplication
{
    using Tum.PDE.LanguageDSL;
    using System;
    
    
    #line 1 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\ViewModel\WPFApplication\LayoutManagerDVGenerator.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class LayoutManagerDVGenerator : BaseTemplate
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public override string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write(" \r\n");
            
            #line 4 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\ViewModel\WPFApplication\LayoutManagerDVGenerator.tt"
 
	GenerateLayoutManagerDV(this.MetaModel);

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 7 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\ViewModel\WPFApplication\LayoutManagerDVGenerator.tt"
 
public void GenerateLayoutManagerDV(MetaModel dm)
{
	foreach(BaseModelContext modelContext in this.MetaModel.ModelContexts)	
		if( modelContext is ModelContext)
		{	
			string diagramDesignerClassName = "DesignerDiagramSurfaceDockWindowPane";
			foreach( DiagramClass diagramClass in (modelContext as ModelContext).DiagramClasses)
				if( diagramClass is DesignerDiagramClass )
					diagramDesignerClassName = diagramClass.Name + "SurfaceDockWindowPane";
	
/*string strAdd = "";
for(int i = 1; i < this.MetaModel.AllDiagramClasses.Count; i++)
{
	DiagramClass diagramClass = this.MetaModel.AllDiagramClasses[i];
	strAdd +="," + diagramClass.Name + "SurfaceDockWindowPane";
}*/

			string strDef = "";

			if( this.MetaModel.View.CreateModelTree )
				strDef +="ModelTreeViewDockWindow";
			if( this.MetaModel.View.CreateErrorList )
				strDef +=",ErrorListDockWindow";
			if( this.MetaModel.View.CreatePropertyGrid )
				strDef +=",PropertiesDockWindowPane";
			//if( this.MetaModel.View.CreateDependenciesView )
			//	strDef +=",DependenciesDockWindowPane";

			strDef +="," + diagramDesignerClassName; // + ",SearchResultViewModel,SearchViewModel";
		


        
        #line default
        #line hidden
        
        #line 40 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\ViewModel\WPFApplication\LayoutManagerDVGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(modelContext.Name));

        
        #line default
        #line hidden
        
        #line 40 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\ViewModel\WPFApplication\LayoutManagerDVGenerator.tt"
this.Write(":::");

        
        #line default
        #line hidden
        
        #line 40 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\ViewModel\WPFApplication\LayoutManagerDVGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(strDef));

        
        #line default
        #line hidden
        
        #line 40 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\ViewModel\WPFApplication\LayoutManagerDVGenerator.tt"
this.Write("\r\n");

        
        #line default
        #line hidden
        
        #line 41 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\ViewModel\WPFApplication\LayoutManagerDVGenerator.tt"

		}
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
