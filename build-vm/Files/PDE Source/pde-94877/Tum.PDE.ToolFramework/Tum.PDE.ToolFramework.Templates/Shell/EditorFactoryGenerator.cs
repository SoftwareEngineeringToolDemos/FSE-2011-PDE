// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tum.PDE.ToolFramework.Templates.Shell
{
    using Tum.PDE.LanguageDSL;
    using Microsoft.VisualStudio.Modeling;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System;
    
    
    #line 1 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class EditorFactoryGenerator : BaseTemplate
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public override string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write(" \r\n");
            
            #line 9 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"

	string dslName = this.MetaModel.Name;

            
            #line default
            #line hidden
            this.Write("using VSShellInterop = global::Microsoft.VisualStudio.Shell.Interop;\r\nusing DslSh" +
                    "ell = global::Microsoft.VisualStudio.Modeling.Shell;\r\n\r\nusing DslEditorShell = g" +
                    "lobal::Tum.PDE.ToolFramework.Modeling.Shell;\r\n\r\nnamespace ");
            
            #line 17 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\t/// <summary>\r\n\t/// Double-derived class to allow easier code customization" +
                    ".\r\n\t/// </summary>\r\n\t[global::System.Runtime.InteropServices.Guid(Constants.");
            
            #line 22 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("EditorFactoryId)]\r\n\tinternal partial class ");
            
            #line 23 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("EditorFactory : ");
            
            #line 23 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("EditorFactoryBase\r\n\t{\r\n\t\t/// <summary>\r\n\t\t/// Constructs a new ");
            
            #line 26 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("EditorFactory.\r\n\t\t/// </summary>\r\n\t\tpublic ");
            
            #line 28 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("EditorFactory(global::System.IServiceProvider serviceProvider)\r\n\t\t\t: base(service" +
                    "Provider)\r\n\t\t{\r\n\t\t}\r\n\t}\r\n\r\n\t/// <summary>\r\n\t/// Factory for creating our editors" +
                    "\r\n\t/// </summary>\r\n\tinternal abstract class ");
            
            #line 37 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("EditorFactoryBase : DslEditorShell::ModelEditorFactory\r\n\t{\r\n\t\t/// <summary>\r\n\t\t//" +
                    "/ Constructor.\r\n\t\t/// </summary>\r\n\t\t/// <param name=\"serviceProvider\">Service pr" +
                    "ovider used to access VS services.</param>\r\n\t\tprotected ");
            
            #line 43 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"EditorFactoryBase(global::System.IServiceProvider serviceProvider) : base(serviceProvider)
		{
		}

        /// <summary>
        /// Called by the shell to ask the editor to create a new document object.
        /// </summary>
        /// <param name=""fileName""></param>
        /// <param name=""hierarchy""></param>
        /// <param name=""itemId""></param>
		public override DslShell::ModelingDocData CreateDocData(string fileName, VSShellInterop::IVsHierarchy hierarchy, uint itemId)
		{
			// Create the document type supported by this editor.
			
			// Create model data
			");
            
            #line 58 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.GetFullName(true)));
            
            #line default
            #line hidden
            this.Write("DocumentData modelData = new ");
            
            #line 58 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.GetFullName(true)));
            
            #line default
            #line hidden
            this.Write("DocumentData();\r\n\t\t\t\r\n\t\t\t// Create shell model data\r\n\t\t\t");
            
            #line 61 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocData shellModelData = new ");
            
            #line 61 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocData(modelData, this.ServiceProvider, typeof(");
            
            #line 61 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"EditorFactory).GUID);
			this.ModelData = shellModelData;
			
			// Set file name properties
			System.IO.FileInfo info = new System.IO.FileInfo(fileName);
			shellModelData.FullFileName = fileName;
			shellModelData.FileName = info.Name;
			
			return shellModelData;
		}

		/// <summary>
		/// Called by the shell to ask the editor to create a new view object.
		/// </summary>
		protected override DslShell::ModelingDocView CreateDocView(DslShell::ModelingDocData docData, string physicalView, out string editorCaption)
		{
			// Create the view type supported by this editor.
			editorCaption = string.Empty;
			return new ");
            
            #line 79 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\EditorFactoryGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocView(docData as DslEditorShell::ModelShellData, this.ServiceProvider);\r\n\t\t}\r\n\t" +
                    "}\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
