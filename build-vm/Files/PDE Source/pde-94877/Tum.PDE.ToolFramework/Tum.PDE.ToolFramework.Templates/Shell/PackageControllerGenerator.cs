// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tum.PDE.ToolFramework.Templates.Shell
{
    using Tum.PDE.LanguageDSL;
    using Microsoft.VisualStudio.Modeling;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System;
    
    
    #line 1 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class PackageControllerGenerator : BaseTemplate
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public override string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write(" \r\n");
            
            #line 9 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"

	string dslName = this.MetaModel.Name;
	string directiveName = this.MetaModel.Name;
	string dslFullName = this.MetaModel.GetFullName(true);
	
	MetaModel dm = this.MetaModel;

            
            #line default
            #line hidden
            this.Write("using DslEditorShell = global::Tum.PDE.ToolFramework.Modeling.Shell;\r\nusing DslEd" +
                    "itorViewShell = global::Tum.PDE.ToolFramework.Modeling.Visualization.Shell;\r\n\r\nn" +
                    "amespace ");
            
            #line 19 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\t/// <summary>\r\n\t/// This class represents the shell package main view model" +
                    " of the ");
            
            #line 22 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.ApplicationName));
            
            #line default
            #line hidden
            this.Write(".\r\n\t/// \r\n\t/// Double-derived class to allow easier code customization.\r\n\t/// </s" +
                    "ummary>\r\n\tpublic partial class ");
            
            #line 26 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ShellPackageController : ");
            
            #line 26 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ShellPackageControllerBase\r\n\t{\r\n\t\t#region Constructor\r\n\t\t/// <summary>\r\n        /" +
                    "// Constuctor.\r\n        /// </summary>\r\n\t\t/// <param name=\"package\">Package.</pa" +
                    "ram>\r\n        public ");
            
            #line 33 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ShellPackageController(DslEditorShell::ModelPackage package)\r\n            : base(" +
                    "package)\r\n        {\r\n        }\r\n\t\t#endregion\r\n\t}\r\n\t\r\n\t/// <summary>\r\n\t/// This c" +
                    "lass represents the shell package controller of the ");
            
            #line 41 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.ApplicationName));
            
            #line default
            #line hidden
            this.Write(".\r\n\t/// \r\n\t/// This is the abstract base class.\r\n\t/// </summary>\r\n\tpublic abstrac" +
                    "t class ");
            
            #line 45 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ShellPackageControllerBase : DslEditorViewShell::ShellPackageController\r\n\t{\r\n\t\t#r" +
                    "egion Constructor\r\n\t\t/// <summary>\r\n        /// Constuctor.\r\n        /// </summa" +
                    "ry>\r\n\t\t/// <param name=\"package\">Package.</param>\r\n        protected ");
            
            #line 52 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ShellPackageControllerBase(DslEditorShell::ModelPackage package)
            : base(package)
        {

        }
		#endregion
		
		#region Initialization
        /// <summary>
        /// This method is used to initialize the view model and can be overriden for customization.
        /// </summary>
        protected override void Initialize()
        {
			base.Initialize();

			this.LayoutManager = new ");
            
            #line 67 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 67 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageControllerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DockingLayoutManager(this.ModelPackage, this);\r\n\t\t}\t\t\t\r\n\t\t#endregion\r\n\t}\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
