<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tum.PDE.ToolFramework.Modeling</name>
    </assembly>
    <members>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SerializationResult">
            <summary>
            Collection of messages notifying of information gathered during serialization.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ValidationResult">
            <summary>
            Class to store error, warning and information messages.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IValidationResult">
            <summary>
            This interface describes a validation result, which is a collection of gathered validation messages.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ValidationResult.messages">
            <summary>
            List of messages.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ValidationResult.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ValidationResult.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that enumerates all stored messages.
            </summary>
            <returns>An enumerator that enumerates all stored messages.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ValidationResult.GetEnumerator">
            <summary>
            Gets an enumerator that enumerates all stored messages.
            </summary>
            <returns>An enumerator that enumerates all stored messages.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ValidationResult.AddMessage(Tum.PDE.ToolFramework.Modeling.IValidationMessage)">
            <summary>
            Add a message.
            </summary>
            <param name="message">Message to add.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationResult.AddMessage(Tum.PDE.ToolFramework.Modeling.SerializationMessage)">
            <summary>
            Add a message.
            </summary>
            <param name="message">Message to add.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SerializationResult.Failed">
            <summary>
            Gets or sets whether the serialization result has failed or not.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IValidatable">
            <summary>
            This interface describes a class that can be validated.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IValidatable.Validate">
            <summary>
            Method to start validation.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IValidatable.ValidationResult">
            <summary>
            Gets the result of the validation.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IFilterableErrorListItem">
            <summary>
            This interface describes a filterable error list item.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IFilterableErrorListItem.GetUniqueId">
            <summary>
            This method provides an unique id for the item. 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IFilterableErrorListItem.ErrorId">
            <summary>
            Identification of the error.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ReferenceRelationshipAdvancedInfo">
            <summary>
            Advanced reflection info for reference relationship.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo">
            <summary>
            Advanced reflection info for domain relationship.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.#ctor(System.Guid)">
            <summary>
            Constructor.
            </summary>
            <param name="relationshipDomainClassId">Domain relationship id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.GetInfo(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Gets the DomainRelationshipInfo.
            </summary>
            <param name="store">Store to get the DomainRelationshipInfo from.</param>
            <returns>DomainRelationshipInfo if found; null otherwise.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.RelationshipDomainClassId">
            <summary>
            Gets the relationship domain class Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.IsAbstract">
            <summary>
            Gets or sets whether the relationship is abstract or not.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.SourceElementDomainClassId">
            <summary>
            Gets or sets the source element domain class Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.TargetElementDomainClassId">
            <summary>
            Gets or sets the target element domain class Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.SourceRoleId">
            <summary>
            Gets or sets the source role Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.TargetRoleId">
            <summary>
            Gets or sets the target role Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.SourceRoleMultiplicity">
            <summary>
            Gets or sets the source role multiplicity.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.TargetRoleMultiplicity">
            <summary>
            Gets or sets the target role multiplicity.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.SourceRoleIsUIBrowsable">
            <summary>
            Gets or sets whether this property can be viewed in the UI.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.SourceRoleIsUIReadOnly">
            <summary>
            Gets or sets whether this property can be viewed in the UI.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.SourceRoleIsGenerated">
            <summary>
            Gets or sets whether this property can be viewed in the UI.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.TargetRoleIsUIBrowsable">
            <summary>
            Gets or sets whether this property can be viewed in the UI.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.TargetRoleIsUIReadOnly">
            <summary>
            Gets or sets whether this property can be viewed in the UI.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainRelationshipAdvancedInfo.TargetRoleIsGenerated">
            <summary>
            Gets or sets whether this property can be viewed in the UI.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ReferenceRelationshipAdvancedInfo.#ctor(System.Guid)">
            <summary>
            Constructor.
            </summary>
            <param name="relationshipDomainClassId">Domain relationship id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ReferenceRelationshipAdvancedInfo.#ctor(System.Guid,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="relationshipDomainClassId">Relationship domain class Id.</param>
            <param name="propagatesCopyToSource">Propagates copy to source.</param>
            <param name="propagatesCopyToTarget">Propagates copy to target.</param>
            <param name="propagatesCopyOnDeniedElement">Propagates copy on denied element.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ReferenceRelationshipAdvancedInfo.PropagatesCopyToSource">
            <summary>
            Gets the "PropagatesCopyToSource" property.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ReferenceRelationshipAdvancedInfo.PropagatesCopyToTarget">
            <summary>
            Gets the "PropagatesCopyToTarget" property.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ReferenceRelationshipAdvancedInfo.PropagatesCopyOnDeniedElement">
            <summary>
            Gets the "PropagatesCopyOnDeniedElement" property.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IDomainModelVisualizable">
            <summary>
            This interface specifies ... (methods to verify if there are visualization elements for this class)
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IDableElement">
            <summary>
            This interface describes an element that has an id parameter and which id is 
            required to be tested in terms of uniqueness.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDableElement.Id">
            <summary>
            Gets the id of the element.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationMethodAttribute">
            <summary>
            Class definition for C# custom attribute ValidationMethod.  This is used for marking methnods as Validator functions.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationMethodAttribute.#ctor">
            <summary>
            Constructor for class ValidationMethodAttribute. Specifies Menu, Open and Save by default.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationMethodAttribute.#ctor(Tum.PDE.ToolFramework.Modeling.ModelValidationCategories)">
            <summary>
            Constructor for class ValidationMethodAttribute.
            </summary>
            <param name="categories">The categories of this method.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationMethodAttribute.Categories">
            <summary>
            The categories of this method.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationMessage">
            <summary>
            ValidationMessage is used to carry validation messages. ValidationMessage are created from
            within user defined validation mehod.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ValidationMessage">
            <summary>
            Basic validation message.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IValidationMessage">
            <summary>
            This interface describes a validation message.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IValidationMessage.Description">
            <summary>
            Description of the message.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IValidationMessage.MessageId">
            <summary>
            Identification of the message.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IValidationMessage.Type">
            <summary>
            Violation type of the message.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ValidationMessage.#ctor(System.String,Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="messageId">Message Id.</param>
            <param name="violationType">Type of the violation.</param>
            <param name="description">Description of the violation.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ValidationMessage.Type">
            <summary>
            Gets the type of the violation.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ValidationMessage.Description">
            <summary>
            Gets the description of the violation.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ValidationMessage.MessageId">
            <summary>
            Gets the MessageId of this validation message.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationMessage.#ctor(System.String,Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType,System.String,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Constructor.
            </summary>
            <param name="messageId">MessageId of this validation message.</param>
            <param name="violationType">Type of the violation.</param>
            <param name="description">Description of the violation.</param>
            <param name="source">Source element of the violation.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationMessage.Source">
            <summary>
            Gets the source element of the violation.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.BaseModelContext">
            <summary>
            This class represents a base model context.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.BaseModelContext.#ctor(Tum.PDE.ToolFramework.Modeling.ModelData)">
            <summary>
            Constructor.
            </summary>
            <param name="modelData"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.BaseModelContext.ValidateAll">
            <summary>
            Validates the whole store.
            </summary>
            <returns>
            Collection of gathered errors, warnings and information messages.
            </returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.BaseModelContext.Validate(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Validates the given model element.
            </summary>
            <param name="element">ModelElement to be validated.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.BaseModelContext.Reset">
            <summary>
            Resets the current document data.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.BaseModelContext.TransactionCommited(Microsoft.VisualStudio.Modeling.TransactionCommitEventArgs)">
            <summary>
            Called whever a transaction is commited.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.BaseModelContext.OnPropertyChanged(System.String)">
            <summary>
            Called whenever a specific property's value changed.
            </summary>
            <param name="name">Name of the property changed.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.BaseModelContext.ModelContextId">
            <summary>
            Gets the model context id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.BaseModelContext.ModelData">
            <summary>
            Gets the model data this context belongs to.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.BaseModelContext.Name">
            <summary>
            Gets the name of this model context.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.BaseModelContext.Titel">
            <summary>
            Gets the titel of the model context.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.BaseModelContext.IsDefault">
            <summary>
            Gets whether this model context is the default context or not.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.BaseModelContext.CurrentValidationController">
            <summary>
            Gets the current validation controller.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.BaseModelContext.ValidationResult">
            <summary>
            Gets the validation result.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.BaseModelContext.PropertyChanged">
            <summary>
            Property changed event.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelMergeCustomArguments">
            <summary>
            Model merge custom arguments.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeCustomArguments.GetSerializerType">
            <summary>
            Gets serializer type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IEmbeddableModelElement">
            <summary>
            This interface describes an embeddable domain model element.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IEmbeddableModelElement.DomainElementParentHasName">
            <summary>
            True if parent element has a name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IEmbeddableModelElement.DomainElementParentName">
            <summary>
            Returns the parent name (or its type name, if there is no name property).
            If the element doesnt have a parent, null is returned.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IEmbeddableModelElement.DomainElementParentFullName">
            <summary>
            Returns the parent name + (type name) (or its type name, if there is no name property).
            If the element doesnt have a parent, null is returned.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IEmbeddableModelElement.DomainElementParentHasFirstExistingName">
            <summary>
            True if there is a first parent element, which has a DomainElementName name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IEmbeddableModelElement.DomainElementParentFirstExistingName">
            <summary>
            Returns the DomainElementName of the first parent to actually have a name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IEmbeddableModelElement.DomainElementHasParentFullPath">
            <summary>
            Returns true if this elements parent has an embedding full path.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IEmbeddableModelElement.DomainElementParentFullPath">
            <summary>
            Returns the full path of the parent element relative to the domain model element.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IDependenciesItemsProvider">
            <summary>
            This interface specifies a dependency items provider, which is used to gather
            dependency items for specific model elements. As such, this provider is bound
            to return a collection of dependency items that are active in the current 
            domain model on specific model elements.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDependenciesItemsProvider.GetDependencies(System.Collections.Generic.List{Microsoft.VisualStudio.Modeling.ModelElement},Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions,Tum.PDE.ToolFramework.Modeling.DependenciesData)">
            <summary>
            Gets the dependencies for a specific model elements.
            </summary>
            <param name="modelElements">List of model elements to get the dependencies for.</param>
            <param name="options">Options.</param>
            <param name="dependenciesData">Data to add found dependencies to.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDependenciesItemsProvider.GetDependencies(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the dependencies for a specific model element.
            </summary>
            <param name="modelElement">Model element to get the dependencies for.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDependenciesItemsProvider.GetDependencies(Microsoft.VisualStudio.Modeling.ModelElement,Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions)">
            <summary>
            Gets the dependencies for a specific model element.
            </summary>
            <param name="modelElement">Model element to get the dependencies for.</param>
            <param name="options">Options.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDependenciesItemsProvider.GetDependencies(System.Collections.Generic.List{Microsoft.VisualStudio.Modeling.ModelElement})">
            <summary>
            Gets the dependencies for a specific model elements.
            </summary>
            <param name="modelElements">List of model elements to get the dependencies for.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDependenciesItemsProvider.GetDependencies(System.Collections.Generic.List{Microsoft.VisualStudio.Modeling.ModelElement},Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions)">
            <summary>
            Gets the dependencies for a specific model elements.
            </summary>
            <param name="modelElements">List of model elements to get the dependencies for.</param>
            <param name="options">Options.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DependencyOriginItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependencyOriginItem.#ctor(System.Guid,Microsoft.VisualStudio.Modeling.DomainRelationshipInfo,Microsoft.VisualStudio.Modeling.DomainRoleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="relationshipInfo">Relationship info.</param>
            <param name="roleInfo">Role info.</param>
            <param name="elementId">Element id.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyOriginItem.RelationshipInfo">
            <summary>
            Gets the relationship info.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyOriginItem.RoleInfo">
            <summary>
            Gets the role info.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyOriginItem.ElementId">
            <summary>
            Gets the element Id.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds">
            <summary>
            Ids identifying model validation messages.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.UnknownMessageId">
            <summary>
            Unknown message Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.SerializationMessageId">
            <summary>
            General serialization message Id
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.SerializationLoadErrorId">
            <summary>
            Serialization error during loading Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.SerializationSaveErrorId">
            <summary>
            Serialization error during saving Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ValidationExceptionErrorId">
            <summary>
            General validation exception Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ValidationIvokeMethodExceptionErrorId">
            <summary>
            Validation error during the invocation of a method Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergePasteDisallowedId">
            <summary>
            Paste disallowed error Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergeMoveDisallowedId">
            <summary>
            Move disallowed error Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergeElementExistsOnMoveId">
            <summary>
            Element exists on move Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergeElementMissingOnMoveId">
            <summary>
            Elements is missing on move Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergeElementLinkExistsOnMoveId">
            <summary>
            Element Link exists on move.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergeLinkElementNotCopiedId">
            <summary>
            Link element couldn't be copied Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergeLinkElementNotFoundId">
            <summary>
            Link element wasn't found on paste Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergeLinkCreationViolatesMultiplicityId">
            <summary>
            Link creation violates multiplicity on paste Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationMessageIds.ModelMergeElementLinkDomainTypeMissingId">
            <summary>
            Link creation domain type not found.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelMergeElements">
            <summary>
            Interface for model elements that may be copied and that support pasting of other elements.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelIsCopyAllowed">
            <summary>
            Decides whether the element can be copied or not.
            </summary>
            <returns>True if the element can be copied. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelIsMoveAllowed">
            <summary>
            Decides whether the element can be moved or not.
            </summary>
            <returns>True if the element can be moved. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelIsPasteAllowed(Tum.PDE.ToolFramework.Modeling.ModelProtoGroupOperation)">
            <summary>
            Decides whether the element can be pasted or not based on the operation.
            </summary>
            <param name="protoGroupOperation">Proto group operation.</param>
            <returns>True if the element can be pasted. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelCreateMergeCopy(Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Create a proto element representation of the element, which can be used for paste later.
            </summary>
            <param name="protoGroup">Proto group to add the element to.</param>
            <returns>Proto element representation of the element.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelCreateMoveCopy(Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Create a proto element representation of the element, which can be used for paste later.
            </summary>
            <param name="protoGroup">Proto group to add the element to.</param>
            <returns>Proto element representation of the element.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelProcessMergeCopy(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Processes a proto element representation of the element and adds required proto links. 
            This method is called on base classes from derived classes.
            
            Hint: Properties do not need to be added in this method.
            </summary>
            <param name="protoElement">Proto element representation of the element.</param>
            <param name="protoGroup">Proto group the proto element belongs to.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelCanMerge(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Decides whether the element that is represented by the proto element can be pasted or not.
            </summary>
            <param name="protoElement">Proto element representation of the element.</param>
            <param name="protoGroup">Proto group the proto element belongs to.</param>
            <returns>True if the element can be pasted. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelMerge(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger,System.Boolean)">
            <summary>
            Adds a proto element to the current element.
            </summary>
            <param name="protoElement">Proto element representation of the element that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
            <param name="isRoot">Root element?</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelMerge(Tum.PDE.ToolFramework.Modeling.ModelProtoLink,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger)">
            <summary>
            Adds a proto link to the current element.
            </summary>
            <param name="protoLink">Proto link representation of the element link that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelMove(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger)">
            <summary>
            Moves a proto element to the current element.
            </summary>
            <param name="protoElement">Proto element representation of the element that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelFinalize(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger)">
            <summary>
            Finalize. This method is called on each copied element once all the elements and links are processed.
            </summary>
            <param name="protoElement">Proto element representation of the element that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelMergeElements.ModelFinalizeMerge(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger)">
            <summary>
            Finalize merge. This method is called on the root element once all the elements and links are processed. 
            </summary>
            <param name="protoElement">Proto element representation of the element that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
            <remarks>
            This is called after the finalize method.
            </remarks>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipOrderInfo">
            <summary>
            Class used to store parent children mapping information in the order defined in the serialization model.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipOrderInfo.#ctor(System.Guid,System.Guid[])">
            <summary>
            Constructor.
            </summary>
            <param name="domainClassId">DomainClassId of the domain class acting as parent.</param>
            <param name="embeddingRelationships">embeddingRelationships</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipOrderInfo.DomainClassId">
            <summary>
            Gets the id (DomainClassId) of the domain class.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipOrderInfo.EmbeddingRelationships">
            <summary>
            DomainClassIds of EmbeddingRelationships that specify the parent children mapping.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipOrderInfo.EmbeddingRelationshipsTargetIncludedSubmodel">
            <summary>
            DomainClassIds of EmbeddingRelationships that specify the parent children mapping as TargetIncludedSubmodel.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationController">
            <summary>
            Groups logic for model validation. Needs to be extended in the actual instance to provide
            method infos based on model types (to increase performance).
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationController.ValidationMap">
            <summary>
            Validation Map Dictionary.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationController.ValidationIsEnabled">
            <summary>
            Validation IsEnabled Dictionary.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationController.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationController.InitializeType(Tum.PDE.ToolFramework.Modeling.ModelValidationController,System.Type)">
            <summary>
            Initializes a type.
            </summary>
            <param name="controller"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationController.Validate(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Modeling.ModelElement},Tum.PDE.ToolFramework.Modeling.ModelValidationCategories)">
            <summary>
            Do validation for a set of elements based on the validation categories
            </summary>
            <param name="subjects">The list of subjects to validate.</param>
            <param name="categories">Categories</param>
            <returns>Returns true if no error/warning/message are found.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationController.Validate(Microsoft.VisualStudio.Modeling.ModelElement,Tum.PDE.ToolFramework.Modeling.ModelValidationCategories)">
            <summary>
            Do validation for a single element.
            </summary>
            <param name="subject">The subject to validate.</param>
            <param name="categories">Categories.</param>
            <returns>Returns true if no error/warning/message are found.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationController.Validate(Microsoft.VisualStudio.Modeling.Store,Tum.PDE.ToolFramework.Modeling.ModelValidationCategories)">
            <summary>
            Validate the whole store.
            </summary>
            <param name="Store">Store to validate.</param>
            <param name="categories">Categories.</param>
            <returns>Returns true if no error/warning/message are found.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationController.Validate(Tum.PDE.ToolFramework.Modeling.ModelValidationContext)">
            <summary>
            Validate using the given validation context.
            </summary>
            <param name="context">Validation context</param>
            <returns>Returns true if no error/warning/message are found.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationController.ClearMessages">
            <summary>
            Clears all messages.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationController.CollectMessages(Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType)">
            <summary>
            Collects active messages of a given type.
            </summary>
            <param name="searchTypes">Types of messages to collect.</param>
            <returns>Set of collected messages.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationController.ErrorMessages">
            <summary>
            Gets a copy of all the active error and fatal messages.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationController.FatalMessages">
            <summary>
            Gets a copy of all the active fatal messages.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationController.InformationalMessages">
            <summary>
            Gets a copy of all the active informational messages.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationController.ValidationMessages">
            <summary>
            Gets a copy of all the active error/warning/message messages.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationController.WarningMessages">
            <summary>
            Gets a copy of all the active warning messages.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IParentModelElement">
            <summary>
            This interface describes a parent model element. There can be multiple domain model
            parent elements (this is because we can have multiple contexts within one dsl).
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IParentModelElement.DomainFilePath">
            <summary>
            Gets or sets the domain file path.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainModelLink">
            <summary>
            This is the abstract class wrapping additional functionality for the DSL-Tools ElementLink class.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable">
            <summary>
            This interface describes a model element that is owned by a domain model.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.GetDomainModelType">
            <summary>
            Gets the domain model type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.GetDomainModelTypeId">
            <summary>
            Gets the domain model DomainClassId.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.GetDomainModelServices">
            <summary>
            Gets the domain model services.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.DomainElementName">
            <summary>
            Gets or sets the value of the property (which is marked as element name)
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.DomainElementFullName">
            <summary>
            Gets the full name of the element.
            </summary>
            <remarks>
            This is either: ElementName (elemenType) or just ElementType.
            </remarks>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.DomainElementHasName">
            <summary>
            Gets whether the domain element has a property marked as element name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.DomainElementNameInfo">
            <summary>
            Gets the domain element name info if there is one; Null otherwise.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.DomainElementType">
            <summary>
            Gets the type of the ModelElement as string.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.DomainElementTypeDisplayName">
            <summary>
            Gets the display name of the type of the ModelElement.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable.Store">
            <summary>
            Gets the domain model store.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainModelLink.DomainClassId">
            <summary>
            Domain class id.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelLink.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Creates a new instance of the DomainModelLink class.
            </summary>
            <param name="partition">The Partition instance containing this ElementLink</param>
            <param name="roleAssignments">A set of role assignments for roleplayer initialization</param>
            <param name="propertyAssignments">A set of attribute assignments for attribute initialization</param>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainModelLink.SourceElementDomainRoleId">
            <summary>
            VModell domain role Id.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainModelLink.TargetElementDomainRoleId">
            <summary>
            VModell domain role Id.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelLink.GetDomainModelType">
            <summary>
            Gets the domain model type.
            </summary>
            <returns>Domain model type.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelLink.GetDomainModelServices">
            <summary>
            Gets the domain model services.
            </summary>
            <returns>Domain model services.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelLink.GetDomainModelTypeId">
            <summary>
            Gets the domain model DomainClassId.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelLink.GetDomainClassId">
            <summary>
            Gets the domain class Id of this element.
            </summary>
            <returns>DomainClass Id.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.SourceElement">
            <summary>
            DomainRole SourceElement
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.TargetElement">
            <summary>
            DomainRole TargetElement
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.DomainElementName">
            <summary>
            Gets or sets the value of the property (which is marked as element name)
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.DomainElementFullName">
            <summary>
            Gets the full name of the element.
            </summary>
            <remarks>
            This is either: ElementName (elemenType) or just ElementType.
            </remarks>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.DomainElementHasName">
            <summary>
            Gets whether the domain element has a property marked as element name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.DomainElementNameInfo">
            <summary>
            Gets the domain element name info if there is one; Null otherwise.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.DomainElementType">
            <summary>
            Gets the type of the ModelElement as string.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.DomainElementTypeDisplayName">
            <summary>
            Gets the display name of the type of the ModelElement.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.Store">
            <summary>
            Gets the domain model store.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelLink.IsEmbedding">
            <summary>
            Gets whether this is an embedding relationship or not.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationContext">
            <summary>
            Context for validating model elements. The constructor will take a collection
            of model elements intended to be validated.  Once the validaiton is done,
            the validation message will be staged in the CurrentViolations property.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationContext.#ctor(Tum.PDE.ToolFramework.Modeling.ModelValidationCategories,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Modeling.ModelElement})">
            <summary>
            Constructor.
            </summary>
            <param name="categories">Categories.</param>
            <param name="subjects">Elements to be validated.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationContext.AddMessage(Tum.PDE.ToolFramework.Modeling.IValidationMessage)">
            <summary>
            Adds a new validation message.
            </summary>
            <param name="message">Validation message to be added.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationContext.Categories">
            <summary>
            Gets the validation categories.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationContext.CollectedViolations">
            <summary>
            Gets the collected violations.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationContext.ValidationSubjects">
            <summary>
            Gets the read-only collection of the elements, that are beeing validated.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.FilteredErrorListItemData">
            <summary>
            Filtered error list item data representation.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListItemData.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListItemData.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="errorId">Error id.</param>
            <param name="uniqueId">Unique item id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListItemData.#ctor(Tum.PDE.ToolFramework.Modeling.IFilterableErrorListItem)">
            <summary>
            Constructor.
            </summary>
            <param name="errorListItem">Error list item to filter.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListItemData.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">The System.Object to compare with the current System.Object.</param>
            <returns>true if the specified System.Object is equal to the current System.Object;
            otherwise, false.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListItemData.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.FilteredErrorListItemData.ErrorId">
            <summary>
            Returns the error id of the filtered element(s).
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.FilteredErrorListItemData.UniqueId">
            <summary>
            Returns the unique identification of the filtered element.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelElementSearchProcessor">
            <summary>
            Class which provides search functionality.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelElementSearchProcessor">
            <summary>
            Interface specifiying a search processor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementSearchProcessor.GetSearchableElements(Tum.PDE.ToolFramework.Modeling.DomainModelStore,Tum.PDE.ToolFramework.Modeling.SearchSourceEnum)">
            <summary>
            Gets searchable elements as specified by search source enumeration.
            </summary>
            <param name="store">Store.</param>
            <param name="source">Search source.</param>
            <returns>List of searchable elements.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementSearchProcessor.Search(Microsoft.VisualStudio.Modeling.ModelElement,Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum,System.String,Tum.PDE.ToolFramework.Modeling.SearchOptions)">
            <summary>
            Search a specific model element by using the given search criteria.
            </summary>
            <param name="modelElement">Model element to be searched.</param>
            <param name="criteria">Search criteria to use.</param>
            <param name="searchText">Text to search.</param>
            <param name="options">Search options.</param>
            <returns>List of search results.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementSearchProcessor.IsElementIncludedInDomainTree(Tum.PDE.ToolFramework.Modeling.DomainModelStore,System.Guid)">
            <summary>
            Gets whether an element is included in the domain tree and therefore should be included in the search.
            </summary>
            <param name="store">Store.</param>
            <param name="domainClassId">Domain class Id.</param>
            <returns>True if the element is included in the domain tree. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementSearchProcessor.IsLinkIncludedInDomainTree(Tum.PDE.ToolFramework.Modeling.DomainModelStore,System.Guid)">
            <summary>
            Gets whether a link is included in the domain tree and therefore should be included in the search.
            </summary>
            <param name="store">Store.</param>
            <param name="domainClassId">Domain class Id.</param>
            <returns>True if the link is included in the domain tree. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementSearchProcessor.Contains(System.String,System.String,Tum.PDE.ToolFramework.Modeling.SearchOptions)">
            <summary>
            Finds out if a specific text is contained within a string.
            </summary>
            <param name="text">Text to search within-</param>
            <param name="textToSearch">Text to find.</param>
            <param name="options">Search options.</param>
            <returns>True if the searched text is contained within a string.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementSearchProcessor.IsElementIncludedInDomainTree(Tum.PDE.ToolFramework.Modeling.DomainModelStore,System.Guid)">
            <summary>
            Gets whether an element is included in the domain tree and therefore should be included in the search.
            </summary>
            <param name="store">Store.</param>
            <param name="domainClassId">Domain class Id.</param>
            <returns>True if the element is included in the domain tree. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementSearchProcessor.IsLinkIncludedInDomainTree(Tum.PDE.ToolFramework.Modeling.DomainModelStore,System.Guid)">
            <summary>
            Gets whether a link is included in the domain tree and therefore should be included in the search.
            </summary>
            <param name="store">Store.</param>
            <param name="domainClassId">Domain class Id.</param>
            <returns>True if the link is included in the domain tree. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementSearchProcessor.GetSearchableElements(Tum.PDE.ToolFramework.Modeling.DomainModelStore,Tum.PDE.ToolFramework.Modeling.SearchSourceEnum)">
            <summary>
            Gets searchable elements as specified by search source enumeration.
            </summary>
            <param name="store">Store.</param>
            <param name="source">Search source.</param>
            <returns>List of searchable elements.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementSearchProcessor.Search(Microsoft.VisualStudio.Modeling.ModelElement,Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum,System.String,Tum.PDE.ToolFramework.Modeling.SearchOptions)">
            <summary>
            Search a specific model element by using the given search criteria.
            </summary>
            <param name="modelElement">Model element to be searched.</param>
            <param name="criteria">Search criteria to use.</param>
            <param name="searchText">Text to search.</param>
            <param name="options">Search options.</param>
            <returns>Search result list if any found. Empty list otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementSearchProcessor.Contains(System.String,System.String,Tum.PDE.ToolFramework.Modeling.SearchOptions)">
            <summary>
            Finds out if a specific text is contained within a string.
            </summary>
            <param name="text">Text to search within-</param>
            <param name="textToSearch">Text to find.</param>
            <param name="options">Search options.</param>
            <returns>True if the searched text is contained within a string.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider">
            <summary>
            This base abstract class provides methods for a dependency items provder that needs to be overriden in the actual domain model instance. 
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IDependencyItemsProvider">
            <summary>
            This interface specifies a dependency items provider, which is used to gather
            dependency items for a specific model element. As such, this provider is bound
            to return a collection of dependency items that are active in the current 
            domain model on a specific model element.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDependencyItemsProvider.GetDependencies(Tum.PDE.ToolFramework.Modeling.DependenciesData,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the dependencies for a specific model element.
            </summary>
            <param name="dependenciesData">Dependencies data to add new dependency and origin items to.</param>
            <param name="modelElement">Model element to get the dependencies for.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDependencyItemsProvider.GetDependencies(Tum.PDE.ToolFramework.Modeling.DependenciesData,Microsoft.VisualStudio.Modeling.ModelElement,Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions)">
            <summary>
            Gets the dependencies for a specific model element.
            </summary>
            <param name="dependenciesData">Dependencies data to add new dependency and origin items to.</param>
            <param name="modelElement">Model element to get the dependencies for.</param>
            <param name="options">Options</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.AddExternEmbeddedInformation(System.Guid,System.Guid,System.Guid)">
            <summary>
            Adds an extern embedded information to process while searching for dependencies.
            </summary>
            <param name="relationshipDomainClassId">Rs. DomainClassID</param>
            <param name="domainRoleId">Domain role ID</param>
            <param name="domainModelId">Domain model ID</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.AddExternReferencedInformation(System.Guid,System.Guid,System.Guid)">
            <summary>
            Adds an extern reference information to process while searching for dependencies.
            </summary>
            <param name="relationshipDomainClassId">Rs. DomainClassID</param>
            <param name="domainRoleId">Domain role ID</param>
            <param name="domainModelId">Domain model ID</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.GetDependencies(Tum.PDE.ToolFramework.Modeling.DependenciesData,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the dependencies for a specific model element.
            </summary>
            <param name="dependenciesData">Dependencies data to add new dependency and origin items to.</param>
            <param name="modelElement">Model element to get the dependencies for.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.GetDependencies(Tum.PDE.ToolFramework.Modeling.DependenciesData,Microsoft.VisualStudio.Modeling.ModelElement,Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions)">
            <summary>
            Gets the dependencies for a specific model element.
            </summary>
            <param name="dependenciesData">Dependencies data to add new dependency and origin items to.</param>
            <param name="modelElement">Model element to get the dependencies for.</param>
            <param name="options">Options</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.ExternEmbeddedInformation">
            <summary>
            Extern embedded information.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.ExternReferenceInformation">
            <summary>
            Extern reference information.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.ExternInformation">
            <summary>
            Extern information helper struct.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.ExternInformation.RelationshipDomainClassId">
            <summary>
            Relationship DomainClassID.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.ExternInformation.DomainRoleId">
            <summary>
            Domain role id;
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DependencyItemsProvider.ExternInformation.DomainModelId">
            <summary>
            Domain model id.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelProtoRolePlayer">
            <summary>
            ProtoRolePlayer contains the data necessary to set the rolePlayer data on an ElementLink.
            </summary>
            <remarks>
            Source: DSL-Tools framework for the most part.
            </remarks>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoRolePlayer.#ctor(System.Guid,System.Guid,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="domainRoleId">Guid of the DomainRole that this role player plays.</param>
            <param name="rolePlayerId">Guid of the role player itself.</param>
            <param name="elementName">Name of the role player.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoRolePlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor.
            </summary>
            <param name="info">The SerializationInfo to get the data from.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoRolePlayer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo with the data
            needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoRolePlayer.DomainRoleId">
            <summary>
            Gets the domain role Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoRolePlayer.RolePlayerId">
            <summary>
            Gets the role player Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoRolePlayer.ElementName">
            <summary>
            Gets the element name.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger">
            <summary>
            Helper class, used to execute the paste/move command.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.#ctor(Tum.PDE.ToolFramework.Modeling.ModelProtoGroup,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Constructor.
            </summary>
            <param name="protoGroup">Proto group to paste/move.</param>
            <param name="rootElement">Element to execute paste/move on.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.SetIdMapping(System.Guid,System.Guid)">
            <summary>
            Sets the id mapping between an original and a mapped id.
            </summary>
            <param name="originalId">Original Id.</param>
            <param name="mappedId">Newly created Id representing the element with the original Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.AddIdMapping(System.Guid,System.Guid)">
            <summary>
            Adds an id mapping between an original and a mapped id.
            </summary>
            <param name="originalId">Original Id.</param>
            <param name="mappedId">Newly created Id representing the element with the original Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.GetIdMapping(System.Guid)">
            <summary>
            Gets the mapped Id.
            </summary>
            <param name="originalId">Original Id to get the mapped Id for.</param>
            <returns>Mapped Id.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.GetEmbeddedElements(Microsoft.VisualStudio.Modeling.Partition,Tum.PDE.ToolFramework.Modeling.ModelProtoElement)">
            <summary>
            Get all embedded proto elements for the given element.
            </summary>
            <param name="partition">Partition.</param>
            <param name="protoElement">Proto element to get all embedded elements for.</param>
            <returns>List of embedded proto elements.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.GetReferenceLinks(Microsoft.VisualStudio.Modeling.Partition,Tum.PDE.ToolFramework.Modeling.ModelProtoElement)">
            <summary>
            Get source proto links.
            </summary>
            <param name="partition"></param>
            <param name="protoElement"></param>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.GetReferenceLinksTarget(Microsoft.VisualStudio.Modeling.Partition,Tum.PDE.ToolFramework.Modeling.ModelProtoElement)">
            <summary>
            Get target proto links.
            </summary>
            <param name="partition"></param>
            <param name="protoElement"></param>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.GetElementById(System.Guid)">
            <summary>
            Gets an elements of a specific Id.
            </summary>
            <param name="elementId">Id of the element to retrieve.</param>
            <returns>Element of the specific Id or null.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.ProtoGroup">
            <summary>
            Returns the proto group.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger.MergeResult">
            <summary>
            Validation result used to keep track of warnings and errors.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelProtoLink">
            <summary>
            ProtoLink contains the information needed to recreate an ElementLink in any Store.
            </summary>
            <remarks>
            Source: DSL-Tools framework for the most part.
            </remarks>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelProtoElement">
            <summary>
            Prototype class for an element.
            </summary>
            <remarks>
            Source: DSL-Tools framework for the most part.
            </remarks>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.#ctor(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Constructor.
            </summary>
            <param name="element">Model element.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor.
            </summary>
            <param name="info">The SerializationInfo to get the data from.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.OnDeserialization(System.Object)">
            <summary>
            Deserialize.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo with the data
            needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.GetPropertyAssignments(Microsoft.VisualStudio.Modeling.Partition,System.Guid)">
            <summary>
            Gets the property assignments based on the element this proto element represents.
            </summary>
            <param name="partition">Partition to use.</param>
            <param name="elementId">Id to assign to the IdPropertyAssignment.</param>
            <returns>Array of property assignments.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.GetAssignablePropertyValues(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets a list of PropertyAssignments for all assignable properties.
            </summary>
            <param name="element">Element to get PropertyAssignments for.</param>
            <returns>List of PropertyAssignment.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">The System.Object to compare with the current System.Object.</param>
            <returns>true if the specified System.Object is equal to the current System.Object;
            otherwise, false.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.DomainClassId">
            <summary>
            Gets the model element domain class Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.ElementId">
            <summary>
            Gets the element Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.Name">
            <summary>
            Gets the name of the domain class.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.CustomArguments">
            <summary>
            Gets or set custom copy arguments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoElement.CustomChildGroup">
            <summary>
            Gets or sets a custom child proto group.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoLink.#ctor(Microsoft.VisualStudio.Modeling.ElementLink)">
            <summary>
            Constructor.
            </summary>
            <param name="link">Element link.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoLink.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor.
            </summary>
            <param name="info">The SerializationInfo to get the data from.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoLink.OnDeserialization(System.Object)">
            <summary>
            Deserialize.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoLink.GetSourceRolePlayer(Microsoft.VisualStudio.Modeling.Partition)">
            <summary>
            Gets the source proto role player.
            </summary>
            <param name="partition">Partition.</param>
            <returns>Source proto role player.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoLink.GetTargetRolePlayer(Microsoft.VisualStudio.Modeling.Partition)">
            <summary>
            Gets the target proto role player.
            </summary>
            <param name="partition">Partition.</param>
            <returns>Target proto role player.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoLink.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo with the data
            needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoLink.IsTargetIncludedSubmodel">
            <summary>
            Gets or sets whether the target is an included submodel.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoLink.DomainFilePath">
            <summary>
            Gets or sets whether the domainFilePath of the included submodel.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelElementParentProvider">
            <summary>
            Class which retrieves parent elements for domain classes.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelElementParentProvider">
            <summary>
            This interface ensures what methods a parent provider for domain elements is bound to have. The
            parent provider needs to be able to retrieve a parent element for any domain element. Further, 
            it also is required to map a model element to its concrete domain model (as many may be included).
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementParentProvider.GetParentModelElement(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the embedding domain model for a given model element. The embedding domain model
            is the domain model that contains the given model element.
            </summary>
            <param name="modelElement">ModelElement to get the embedding domain model for.</param>
            <returns>Domain model as ModelElement if found. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementParentProvider.GetEmbeddingParent(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the embedding domain element for a given model element. The embedding domain element
            is the parent domain element that is embedding the given model domain element.
            </summary>
            <param name="modelElement">ModelElement to get the embedding domain element for.</param>
            <returns>Domain element as ModelElement if found. Null otherwise</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementParentProvider.GetEmbeddingParent(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)">
            <summary>
            Gets the embedding domain element of a specific type for a given model element.
            </summary>
            <param name="modelElement">ModelElement to get the embedding domain element for.</param>
            <param name="parentTypeDomainClassId">Type of the embedding domain element to find.</param>
            <returns>Domain element as ModelElement if found. Null otherwise</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementParentProvider.GetParentModelElement(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the embedding domain model for a given model element. The embedding domain model
            is the domain model that contains the given model element.
            </summary>
            <param name="modelElement">ModelElement to get the embedding domain model for.</param>
            <returns>Domain model as ModelElement if found. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementParentProvider.GetEmbeddingParent(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the embedding domain element for a given model element. The embedding domain element
            is the parent domain element that is embedding the given model domain element.
            </summary>
            <param name="modelElement">ModelElement to get the embedding domain element for.</param>
            <returns>Domain element as ModelElement if found. Null otherwise</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementParentProvider.GetEmbeddingParent(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)">
            <summary>
            Gets the embedding domain element of a specific type for a given model element.
            </summary>
            <param name="modelElement">ModelElement to get the embedding domain element for.</param>
            <param name="parentTypeDomainClassId">Type of the embedding domain element to find.</param>
            <returns>Domain element as ModelElement if found. Null otherwise</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelData">
            <summary>
            Abstract base class representing a file in memory.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelData.currentModelContext">
            <summary>
            Current model context storage.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelData.availableModelContexts">
            <summary>
            Available model contexts storage.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelData.DoSendModelEvents">
            <summary>
            Gets or sets whether model events should be sent or not.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.GetDomainModels">
            <summary>
            Returns a collection of domain models to load into the store.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.GetDomainModelsInternal">
            <summary>
            Returns a collection of domain models to load into the store.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.GetDomainModelServices">
            <summary>
            Gets the services, which belong to the current domain model.
            </summary>
            <returns>DomainModel services.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.GetDomainModelServices(Tum.PDE.ToolFramework.Modeling.IDomainModelOwnable)">
            <summary>
            Gets the services, which are specific to the current domain model that the given element belongs to.
            </summary>
            <param name="element">Element.</param>
            <returns>DomainModel services</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="bInitAsynchronous">Initialize asynchronously.</param>
            <param name="bInitDelayed">Delay initialization.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.InitAsync">
            <summary>
            Async initialization.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.InitializeServices">
            <summary>
            Initializes services.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.InitializeModelContexts">
            <summary>
            Initializes the model contexts collection.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.InitializeSerializationForStore(Tum.PDE.ToolFramework.Modeling.DomainModelStore)">
            <summary>
            Serialization initialization.
            </summary>
            <param name="store">Store.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.GetModelPartition">
            <summary>
            Get the Partition where model data will be loaded into. Base implementation returns the default partition of the store.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.CreateStore(System.Boolean)">
            <summary>
             Creates a new store
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.FlushUndoRedoStacks">
            <summary>
            Clears undo and redo stacks.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.Reset">
            <summary>
            Resets the current document data.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.Undo">
            <summary>
            Undo the actions of the topmost transaction on undo stack.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.Redo">
            <summary>
             the actions of the topmost transaction on the redo stack.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.RaiseUndoRedoChangeEvents">
            <summary>
            Raises the undo redo change events.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.OnBeforeModelContextChanged(System.EventArgs)">
            <summary>
            Called before a model context is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.OnAfterModelContextChanged(System.EventArgs)">
            <summary>
            Called after a model context is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.OnStoreDisposing(System.EventArgs)">
            <summary>
            Called before the store is getting disposed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.OnStoreCreated(System.EventArgs)">
            <summary>
            Called after a new store has been created.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.OnPropertyChanged(System.String)">
            <summary>
            Called whenever a specific property's value changed.
            </summary>
            <param name="name">Name of the property changed.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelData.Dispose(System.Boolean)">
            <summary>
            Dispose method.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.IsStoreInitialized">
            <summary>
            Gets whether the store has been initialized.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.AreModelContextInitialized">
            <summary>
            Gets whether the model contexts have been initialized.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.CurrentModelContext">
            <summary>
            Gets or sets the currently selected model context.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.AvailableModelContexts">
            <summary>
            Gets the list of available model contexts.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.Store">
            <summary>
            Gets the Modeling Store associated with this DocData.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.ResourceManager">
            <summary>
            Gets the DomainModel's ResourceManager.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.UndoManager">
            <summary>
            Gets the undo manager that is attached to the current store.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.CanUndo">
            <summary>
            True if undo stack is not empty. False otherwise.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelData.CanRedo">
            <summary>
            True if redo stack is not empty. False otherwise.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelData.StoreCreated">
            <summary>
            Fires after a new store has been created.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelData.StoreDisposing">
            <summary>
            Fires before the store is getting disposed.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelData.BeforeModelContextChanged">
            <summary>
            Fires before a model context change occurs.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelData.AfterModelContextChanged">
            <summary>
            Fires before a model context change occurs.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelData.PropertyChanged">
            <summary>
            Property changed event.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider">
            <summary>
            Interface providing methods required for a model element id key provider.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.GenerateNewKey">
            <summary>
            Generates a new unique key.
            </summary>
            <returns>New Key as a System.Guid.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.AddKey(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Adds a new key to the ID list. 
            </summary>
            <param name="modelElement">Domain model element to add the Id for.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.HasKey(System.Guid)">
            <summary>
            Gets whether a certain key has already been assigned.
            </summary>
            <param name="modelElementId">Domain model element Id.</param>
            <returns>True if the given id has already been assigned; false otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.HasKey(System.Guid,System.Collections.Generic.List{Tum.PDE.ToolFramework.Modeling.IDomainModelServices})">
            <summary>
            Gets whether a certain key has already been assigned.
            </summary>
            <param name="modelElementId">Domain model element Id.</param>
            <param name="servicesToDiscard">Services to ignore.</param>
            <returns>True if the given id has already been assigned; false otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.Reset">
            <summary>
            Resets the id provider.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.Reset(System.Collections.Generic.List{Tum.PDE.ToolFramework.Modeling.IDomainModelServices})">
            <summary>
            Resets the id provider.
            </summary>
            <param name="servicesToDiscard">Services to ignore.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.RemoveKey(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Removes a specific key.
            </summary>
            <param name="modelElement">Domain model element to remove the key for.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.RemoveKey(Microsoft.VisualStudio.Modeling.ModelElement,System.Collections.Generic.List{Tum.PDE.ToolFramework.Modeling.IDomainModelServices})">
            <summary>
            Removes a specific key.
            </summary>
            <param name="modelElement">Domain model element to remove the key for.</param>
            <param name="servicesToDiscard">Services to ignore.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.AssignId(Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Adds a property assignment containing the new id value if there is non yet in the array.
            </summary>
            <param name="propertyAssignments">Element property assignments.</param>
            <returns>Element property assignments containing an id property assignment.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementIdProvider.CreateId">
            <summary>
            Adds a property assignment containing the new id value if there is non yet in the array.
            </summary>
            <returns>Element property assignments containing an id property assignment.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelElementChildrenProvider">
            <summary>
            This interface ensures what methods a children provider for domain elements is bound to have. The
            children provider needs to be able to retrieve children elements for any domain element. 
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementChildrenProvider.GetChildren(Microsoft.VisualStudio.Modeling.ModelElement,System.Boolean)">
            <summary>
            Retrieves all children of a specific parent element. This includes all model elements that are reachable
            from the parent element through the embedding relationship.
            </summary>
            <param name="parentElement">Parent element to retrieve children for.</param>
            <param name="bOnlyLocal">Specifies if children of the found children of the given element should be processed too.</param>
            <returns>List of model elements that are embedded under the parent element. May be empty.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IDomainModelServices">
            <summary>
            This interface describes domain model services.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.TopMostService">
            <summary>
            Gets or sets the top most service.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ExtensionServices">
            <summary>
            Gets the extension services.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ElementIdProvider">
            <summary>
            Gets the element id provider for domain model elements.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ElementNameProvider">
            <summary>
            Gets the element name provider for domain model elements.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ElementTypeProvider">
            <summary>
            Gets the element type provider for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ElementParentProvider">
            <summary>
            Gets the element parent provider for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ElementChildrenProvider">
            <summary>
            Gets the element children provider for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.DependenciesItemsProvider">
            <summary>
            Gets the dependency items provider for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.SearchProcessor">
            <summary>
            Gets the search processor for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ShapeProvider">
            <summary>
            Gets the search processor for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ValidationController">
            <summary>
            Gets the validation controller.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelServices.ModelDataOptions">
            <summary>
            Gets the model data options.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DependencyItemCategory">
            <summary>
            This specifies the kind of a dependency item in the dependencies view model.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DependencyItemCategory.Embedding">
            <summary>
            The item is embedding an item.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DependencyItemCategory.Embedded">
            <summary>
            The item is embedded.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DependencyItemCategory.Referencing">
            <summary>
            The item is referencing an another item.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DependencyItemCategory.Referenced">
            <summary>
            The item is referenced by an another item.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData">
            <summary>
            Management class for filtered error list items. Can (de)serialize given a file path.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.completelyFilteredErrorIds">
            <summary>
            Completly filtered error Ids.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.filteredItems">
            <summary>
            Filtered items.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Add(Tum.PDE.ToolFramework.Modeling.IFilterableErrorListItem)">
            <summary>
            Adds an error list item identification data to the filtered list.
            </summary>
            <param name="item">Filterable error list item.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Add(System.String,System.String)">
            <summary>
            Add a new filtered error list data.
            </summary>
            <param name="errorId">Error Id.</param>
            <param name="uniqueId">Unique source Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Add(System.String)">
            <summary>
            Add a new filtered error list data.
            </summary>
            <param name="errorId">Error Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Contains(Tum.PDE.ToolFramework.Modeling.IFilterableErrorListItem)">
            <summary>
            Verifies if a filtered error record already exists.
            </summary>
            <param name="item">Filterable error list item.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Contains(System.String,System.String)">
            <summary>
            Verifies if a filtered error record already exists.
            </summary>
            <param name="errorId">Error Id.</param>
            <param name="uniqueId">Unique source Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Contains(System.String)">
            <summary>
            Verifies if a given errorId is already filtered.
            </summary>
            <param name="errorId">Error Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Clear">
            <summary>
            Clear the contens.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Remove(Tum.PDE.ToolFramework.Modeling.IFilterableErrorListItem)">
            <summary>
            Removes a filtered error list data.
            </summary>
            <param name="item">Filterable error list item.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Remove(System.String,System.String)">
            <summary>
            Removes a filtered error list data.
            </summary>
            <param name="errorId">Error Id.</param>
            <param name="uniqueId">Unique source Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Remove(System.String,System.Boolean)">
            <summary>
            Removes a filtered error list data.
            </summary>
            <param name="errorId">Error Id.</param>
            <param name="bRemoveAll">Remove all filterable items with the same category.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Serialize(System.String,Tum.PDE.ToolFramework.Modeling.FilteredErrorListData)">
            <summary>
            Saves data.
            </summary>
            <param name="fileName">File name to save data to.</param>
            <param name="data">Data to be serialized.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.FilteredErrorListData.Deserialize(System.String)">
            <summary>
            Loads data.
            </summary>
            <param name="fileName">File name to load data from.</param>
            <returns>Deserialized Data.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SearchSourceEnum">
            <summary>
            This enumeration represents the search source criteria.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchSourceEnum.Elements">
            <summary>
            Search within all elements.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchSourceEnum.ReferenceRelationships">
            <summary>
            Search within all reference relationships.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchSourceEnum.ElementsAndReferenceRelationships">
            <summary>
            Search within all elements and reference relationships.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchSourceEnum.Custom">
            <summary>
            This is used for extensions.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SearchOptions">
            <summary>
            This class defines possible search options.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SearchOptions.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SearchOptions.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="doMatchCase"></param>
            <param name="doMatchWholeWord"></param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SearchOptions.DoMatchCase">
            <summary>
            Gets or sets whether to match case or not.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SearchOptions.DoMatchWholeWord">
            <summary>
            Gets or sets whether to match whole word or not.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelElementTypeProvider">
            <summary>
            Class which provides type names and type display names for domain classes.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelElementTypeProvider">
            <summary>
            This interface ensures methods a element type provider is bound to have. As such it provides
            names and especially display names of types. The display names should be looked up e.g. in a
            resx dictionary for localization purposes.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementTypeProvider.GetTypeName(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Get the name of type of the element as string.
            </summary>
            <param name="modelElement">ModelElement to get the type for.</param>
            <returns>Type name as a string.</returns>
            <remarks>
            This is essentially equal to modelElement.GetType().Name. But as this
            is generated, we dont required to access the actual Type of the element to get its name.
            </remarks>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementTypeProvider.GetTypeName(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
            <summary>
            Gets the name of the type based on the given domain class Id.
            </summary>
            <param name="store">Modeling store</param>
            <param name="domainClassId">DomainClassId specifying the type of the element.</param>
            <returns>Type name as a string.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementTypeProvider.GetTypeDisplayName(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Get the display name of type of the element as string.
            </summary>
            <param name="modelElement">ModelElement to get the type display name for.</param>
            <returns>Display name of the type as a string.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementTypeProvider.GetTypeDisplayName(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
            <summary>
            Get the display name of type that is specified by the given domain class Id as string.
            </summary>
            <param name="store">Modeling store</param>
            <param name="domainClassId">DomainClassId specifying the type of the element.</param>
            <returns>Display name of the type as a string.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementTypeProvider.#ctor">
            <summary>
            Constructor.
            </summary>		
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementTypeProvider.GetTypeName(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Get the name of type of the element as string.
            </summary>
            <param name="modelElement">ModelElement to get the type for.</param>
            <returns>Type name as a string.</returns>
            <remarks>
            This is essentially equal to modelElement.GetType().Name. But as this
            is generated, we dont required to access the actual Type of the element to get its name.
            </remarks>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementTypeProvider.GetTypeDisplayName(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Get the display name of type of the element as string.
            </summary>
            <param name="modelElement">ModelElement to get the type display name for.</param>
            <returns>Display name of the type as a string.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementTypeProvider.GetTypeName(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
            <summary>
            Gets the name of the type based on the given domain class Id.
            </summary>
            <param name="store">Modeling store</param>
            <param name="domainClassId">DomainClassId specifying the type of the element.</param>
            <returns>Type name as a string.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementTypeProvider.GetTypeDisplayName(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
            <summary>
            Get the display name of type that is specified by the given domain class Id as string.
            </summary>
            <param name="store">Modeling store</param>
            <param name="domainClassId">DomainClassId specifying the type of the element.</param>
            <returns>Display name of the type as a string.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelElementNameProvider">
            <summary>
            Class which provides names and display names for domain classes as well as methods to create names for new domain classes.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelElementNameProvider">
            <summary>
            This interface ensures the methods an element name provider is bound to have. This includes
            methods to create names for new elements as well as methods to verify if an element has a name
            as well as methods to retrieve an existing name or assign a new name.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementNameProvider.HasName(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Verifies if a given modelElement has a name property or not.
            </summary>
            <param name="modelElement">ModelElement to verify.</param>
            <returns>
            True if the given model element has a property marked with "IsElementName" set to true. False otherwise.
            </returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementNameProvider.GetName(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the element name from the property that is marked as "IsElementName".
            </summary>
            <param name="modelElement">Domain class to get the name for.</param>
            <returns>Name of the domain class as string if found. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementNameProvider.SetName(Microsoft.VisualStudio.Modeling.ModelElement,System.String)">
            <summary>
            Sets a new name property value for the given element.
            </summary>
            <param name="modelElement">ModelElement to assign a new value for the name property.</param>
            <param name="name">New value to assign to the name property.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementNameProvider.CreateName(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Method used to create a new element's name based on the range of available names. 
            Excluded are names used by the child elements embedded in the given parent element.
            </summary>
            <param name="parent">Parent element, embedding the model element.</param>
            <param name="modelElement">ModelElement to create the name for.</param>
            <returns>Created name for the given ModelElement. Null if the method did not succeed. </returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementNameProvider.CreateAndAssignName(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Method used to create a new elements nam'e based on the range of available names and assign it to the element. 
            Excluded are names used by the child elements embedded in the given parent element.
            </summary>
            <param name="parent">Parent element, embedding the model element.</param>
            <param name="modelElement">ModelElement to create and assign the name for.</param>
            <returns>Created name for the given ModelElement. Null if the method did not succeed. </returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementNameProvider.GetNamePropertyInfo(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the name property info for a given model element.
            </summary>
            <param name="modelElement">ModelElement to get the name property info for.</param>
            <returns>DomainPropertyInfo for the name property if found. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementNameProvider.#ctor">
            <summary>
            Constructor.
            </summary>		
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementNameProvider.HasName(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Verifies if a given modelElement has a name property or not.
            </summary>
            <param name="modelElement">ModelElement to verify.</param>
            <returns>
            True if the given model element has a property marked with "IsElementName" set to true. False otherwise.
            </returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementNameProvider.GetName(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the element name from the property that is marked as "IsElementName".
            </summary>
            <param name="modelElement">Domain class to get the name for.</param>
            <returns>Name of the domain class as string if found. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementNameProvider.SetName(Microsoft.VisualStudio.Modeling.ModelElement,System.String)">
            <summary>
            Sets a new name property value for the given element.
            </summary>
            <param name="modelElement">ModelElement to assign a new value for the name property.</param>
            <param name="name">New value to assign to the name property.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementNameProvider.CreateName(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Method used to create a new element's name based on the range of available names. 
            Excluded are names used by the child elements embedded in the given parent element.
            </summary>
            <param name="parent">Parent element, embedding the model element.</param>
            <param name="modelElement">ModelElement to create the name for.</param>
            <returns>Created name for the given ModelElement. </returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementNameProvider.CreateAndAssignName(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Method used to create a new elements nam'e based on the range of available names and assign it to the element. 
            Excluded are names used by the child elements embedded in the given parent element.
            </summary>
            <param name="parent">Parent element, embedding the model element.</param>
            <param name="modelElement">ModelElement to create and assign the name for.</param>
            <returns>Created name for the given ModelElement. Null if the method did not succeed. </returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementNameProvider.GetNamePropertyInfo(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the name property info for a given model element.
            </summary>
            <param name="modelElement">ModelElement to get the name property info for.</param>
            <returns>DomainPropertyInfo for the name property if found. Null otherwise.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IDomainModelExtensionServices">
            <summary>
            This interface specifies the model element extensions services, which 
            define extensions (imported libraries), which services can be accessed
            through the extension services.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainModelExtensionServices.Intialize">
            <summary>
            Initialized known extern services.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainModelExtensionServices.AddExternModelService(Tum.PDE.ToolFramework.Modeling.IDomainModelServices)">
            <summary>
            Adds an extern model service.
            </summary>
            <param name="externService">IDomainModelServices.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainModelExtensionServices.SetTopMostService(Tum.PDE.ToolFramework.Modeling.IDomainModelServices)">
            <summary>
            Sets the top-most service.
            </summary>
            <param name="externService">IDomainModelServices.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelExtensionServices.ExternServices">
            <summary>
            Extern services collection.
            </summary>		
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IDomainModelExtensionServices.MainService">
            <summary>
            Gets the main service.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipAdvancedInfo">
            <summary>
            Advanced reflection info for reference relationship.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipAdvancedInfo.#ctor(System.Guid)">
            <summary>
            Constructor.
            </summary>
            <param name="relationshipDomainClassId">Domain relationship id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipAdvancedInfo.#ctor(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="relationshipDomainClassId">Relationship domain class Id.</param>
            <param name="propagatesCopyToChild">Propagates copy to child.</param>
            <param name="isTargetIncludedSubmodel"></param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipAdvancedInfo.PropagatesCopyToChild">
            <summary>
            Gets the "PropagatesCopyToChild" property.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.EmbeddingRelationshipAdvancedInfo.IsTargetIncludedSubmodel">
            <summary>
            Gets the "IsTargetIncludedSubmodel" property.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationCategories">
            <summary>
            Flavor of the validaton categories.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationCategories.Menu">
            <summary>
            Validation method to be invoked when user choose from the menu
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationCategories.Open">
            <summary>
            Validation method to be invoked when file is opened
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationCategories.Save">
            <summary>
            Validation method to be invoked when file is closed
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelElementShapeProvider">
            <summary>
            Shape provider for domain elements.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelElementShapeProvider">
            <summary>
            This interface ensures what methods a shape provider for domain elements is bound to have.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementShapeProvider.CreateShapeForElement(System.Guid,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Create a shape of the given type for the given element type.
            </summary>
            <param name="modelElement">Model element.</param>
            <param name="shapeTypeId">Shape type id.</param>
            <param name="assignments">Properties for the shape.</param>
            <returns>Shape if one could be created. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementShapeProvider.CreateShapeForElementLink(System.Guid,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Create a shape of the given link shape type.
            </summary>
            <param name="shapeTypeId">Shape type id.</param>
            <param name="modelElement">Model element.</param>
            <param name="assignments">Properties for the shape.</param>
            <returns>Shape if one could be created. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementShapeProvider.CreateShapeForElementLink(System.Guid,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Create a shape of the given link shape type.
            </summary>
            <param name="shapeTypeId">Shape type id.</param>
            <param name="modelElement">Model element.</param>
            <param name="sourceShape">Source shape.</param>
            <param name="targetShape">Target shape.</param>
            <param name="assignments">Properties for the shape.</param>
            <returns>Shape if one could be created. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IModelElementShapeProvider.CreateDependenciesShapeForElement(System.Guid,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Create a dependency shape for the given element type.
            </summary>
            <param name="modelElementTypeId">Model element type.</param>
            <param name="modelElement">Model element.</param>
            <param name="assignments">Properties for the dependencies shape.</param>
            <returns>Shape if one could be created. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementShapeProvider.CreateShapeForElement(System.Guid,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Create a shape of the given type for the given element type.
            </summary>
            <param name="modelElement">Model element.</param>
            <param name="shapeTypeId">Shape type id.</param>
            <param name="assignments">Properties for the shape.</param>
            <returns>Shape if one could be created. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementShapeProvider.CreateShapeForElementLink(System.Guid,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Create a shape of the given link shape type.
            </summary>
            <param name="shapeTypeId">Shape type id.</param>
            <param name="modelElement">Model element.</param>
            <param name="assignments">Properties for the shape.</param>
            <returns>Shape if one could be created. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementShapeProvider.CreateShapeForElementLink(System.Guid,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Create a shape of the given link shape type.
            </summary>
            <param name="shapeTypeId">Shape type id.</param>
            <param name="modelElement">Model element.</param>
            <param name="sourceShape">Source shape.</param>
            <param name="targetShape">Target shape.</param>
            <param name="assignments">Properties for the shape.</param>
            <returns>Shape if one could be created. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementShapeProvider.CreateDependenciesShapeForElement(System.Guid,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Create a dependency shape for the given element type.
            </summary>
            <param name="modelElementTypeId">Model element type.</param>
            <param name="modelElement">Model element.</param>
            <param name="assignments">Properties for the shape.</param>
            <returns>Shape if one could be created. Null otherwise.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DependenciesData">
            <summary>
            This class is used to gather dependency items as well as additional data which may be required when dealing with dependencies.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesData.Contains(Microsoft.VisualStudio.Modeling.ElementLink,Tum.PDE.ToolFramework.Modeling.DependencyItemCategory,Microsoft.VisualStudio.Modeling.DomainRelationshipInfo,Microsoft.VisualStudio.Modeling.DomainRoleInfo)">
            <summary>
            
            </summary>
            <param name="elementLink">Relationship instance.</param>
            <param name="category">Category of the dependency item.</param>
            <param name="relationshipInfo">Relationship info.</param>
            <param name="roleInfo">Role info.</param>
            <returns></returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesData.ActiveDependencies">
            <summary>
            Gets the currently active dependencies.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesData.OriginDependencies">
            <summary>
            Gets the origin depenendencies data.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SerializationMode">
            <summary>
            Specifies how serialization should be processed.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SerializationMode.Normal">
            <summary>
            Default serialization routine.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SerializationMode.Temporarly">
            <summary>
            Temporarly saves the model to a given location. The current model is not updated (meaning,
            we still work on the current file).
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SerializationMode.InternalToString">
            <summary>
            Serializes the model to string, default serialization routine is executed here.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SerializationMode.InternalFullToString">
            <summary>
            Serializes the model to string. All referenced models, that are not serialized explicitly in
            the current file should be included in that serialization as if they were.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SelectedItemsCollection">
            <summary>
            This class contains selected items. Usally those items are of type ModelElement.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SelectedItemsCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the List of ModelElements.
            </summary>
            <returns>A List.Enumerator for the List.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SerializationMessage">
            <summary>
            Message notifying of information gathered during serialization.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationMessage.#ctor(System.String,Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="messageId">Message Id.</param>
            <param name="violationType">Type of the violation.</param>
            <param name="description">Description of the violation.</param>
            <param name="source"></param>
            <param name="line"></param>
            <param name="column"></param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SerializationMessage.Source">
            <summary>
            Source (e.g.: source file name).
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SerializationMessage.Line">
            <summary>
            Line number.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SerializationMessage.Column">
            <summary>
            Column number.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SerializationDomainClassXmlSerializer">
            <summary>
            This is the base class for all generated domain serializers.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationDomainClassXmlSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings,Tum.PDE.ToolFramework.Modeling.SerializationOptions)">
            <summary>
            Public Write() method that serializes the ModelElement instance associated with this serializer instance into XML.
            </summary>
            <param name="serializationContext">Serialization context.</param>
            <param name="element">ModelElement instance that will be serialized.</param>
            <param name="writer">XmlWriter to write serialized data to.</param>
            <param name="rootElementSettings"></param>
            <param name="options">Serialization options.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationDomainClassXmlSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Tum.PDE.ToolFramework.Modeling.SerializationOptions)">
            <summary>
            Public Write() method that serializes the ModelElement instance associated with this serializer instance into XML.
            </summary>
            <param name="serializationContext">Serialization context.</param>
            <param name="element">ModelElement instance that will be serialized.</param>
            <param name="writer">XmlWriter to write serialized data to.</param>
            <param name="options">Serialization options.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationDomainClassXmlSerializer.WriteAdditionalElementData(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Tum.PDE.ToolFramework.Modeling.SerializationOptions)">
            <summary>
            Write any additional element data associated with the element.
            </summary>
            <param name="serializationContext">Serialization context.</param>
            <param name="element">ModelElement instance that is currently being written.</param>
            <param name="writer">XmlWriter to write serialized data to.</param>
            <param name="options">Serialization options.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationDomainClassXmlSerializer.WriteElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Tum.PDE.ToolFramework.Modeling.SerializationOptions)">
            <summary>
            This methods serializes 1) properties serialized as nested XML elements and 2) child model elements into XML.
            </summary>
            <param name="serializationContext">Serialization context.</param>
            <param name="element">ModelElement instance to be serialized.</param>
            <param name="writer">XmlWriter to write serialized data to.</param>
            <param name="options">Serialization options.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationDomainClassXmlSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Tum.PDE.ToolFramework.Modeling.SerializationOptions)">
            <summary>
            Write all properties that need to be serialized as XML attributes.
            </summary>
            <param name="serializationContext">Serialization context.</param>
            <param name="element">ModelElement instance to be serialized.</param>
            <param name="writer">XmlWriter to write serialized data to.</param>
            <param name="options">Serialization options.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationDomainClassXmlSerializer.WriteRootElement(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Tum.PDE.ToolFramework.Modeling.SerializationOptions)">
            <summary>
            Public WriteRootElement() method that serializes a root-level element to XML.  
            The difference between root-level element and the rest elements in the XML is that the root may carry 
            additional information like schema, version, etc. The default implementation just calls Write() method 
            with no RootElementSettings, it's up to the derived implementations to do any additional checks.
            </summary>
            <param name="serializationContext">Serialization context.</param>
            <param name="element">ModelElement instance that will be serialized.</param>
            <param name="writer">XmlWriter to write serialized data to.</param>
            <param name="options">Serialization options.</param>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelProtoPropertyValue">
            <summary>
            ModelProtoPropertyValue contains the information necessary to populate an attribute value for a particular ModelElement.  
            Two Serialization Formats are used. For primitives, strings, and arrays of primitives/strings, the same type-based 
            Serialization format is used. For everything else, we have a non-type based serialization format.
            </summary>
            <remarks>
            Source: DSL-Tools framework for the most part.
            </remarks>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoPropertyValue.#ctor(System.Guid,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="domainPropertyId">Domain property Id.</param>
            <param name="propertyValue">Value of the property.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoPropertyValue.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor.
            </summary>
            <param name="info">The SerializationInfo to get the data from.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoPropertyValue.CreatePropertyAssignment">
            <summary>
            Creates a new property assignment.
            </summary>
            <returns>Property assignment.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoPropertyValue.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo with the data
            needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoPropertyValue.DomainPropertyId">
            <summary>
            Gets the domain property Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoPropertyValue.PropertyValue">
            <summary>
            Gets the domain property value.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelElementOperations">
            <summary>
            Helper class for copy, paste and move operations.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.CanCopy(System.Collections.Generic.ICollection{Microsoft.VisualStudio.Modeling.ModelElement})">
            <summary>
            Decides wether the given element can be copied.
            </summary>
            <param name="elements">List of model elements.</param>
            <returns>True if the element can be copied; False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.CanMove(System.Collections.Generic.ICollection{Microsoft.VisualStudio.Modeling.ModelElement})">
            <summary>
            Decides wether the given element can be moved.
            </summary>
            <param name="elements">List of model elements.</param>
            <returns>True if the element can be moved; False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.Copy(System.Collections.Generic.ICollection{Microsoft.VisualStudio.Modeling.ModelElement},System.Windows.IDataObject)">
            <summary>
            Copies the given elements to the dataObject.
            </summary>
            <param name="elements">Elements to copy.</param>
            <param name="dataObject">DataObject to add the data to.</param>
            <returns>DataObjects with the added data.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.CopyToMove(System.Collections.Generic.ICollection{Microsoft.VisualStudio.Modeling.ModelElement},System.Windows.IDataObject)">
            <summary>
            Copies the given elements to the dataObject for the move operation.
            </summary>
            <param name="elements">Elements to copy.</param>
            <param name="dataObject">DataObject to add the data to.</param>
            <returns>DataObjects with the added data.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.CanMerge(Microsoft.VisualStudio.Modeling.ModelElement,System.Windows.IDataObject)">
            <summary>
            Verifies if a paste operation can be executed in the current context.
            </summary>
            <param name="rootElement">Root element, on which to paste the current data object's data.</param>
            <param name="dataObject">Data to be pasted.</param>
            <returns>True if paste can be executed. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.Merge(Microsoft.VisualStudio.Modeling.ModelElement,System.Windows.IDataObject)">
            <summary>
            Executes the paste operation.
            </summary>
            <param name="rootElement">Root element, on which to paste the current data object's data.</param>
            <param name="dataObject">Data to be pasted.</param>
            <returns>ValidationResult holding errors, warning or information messages.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.GetModelProtoGroup(System.Windows.IDataObject)">
            <summary>
            Retrieves a model proto group from the given data object if one exists.
            </summary>
            <param name="dataObject">Data objects to retrieve a model proto group from.</param>
            <returns>ModelProtoGroup instance or null.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.CachedModelProtoGroup.#ctor(System.Guid,Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Constructor.
            </summary>
            <param name="instanceID"></param>
            <param name="prototype"></param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.CachedModelProtoGroup.InstanceId">
            <summary>
            Instance Id of the proto group.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelElementOperations.CachedModelProtoGroup.Prototype">
            <summary>
            Gets the proto group.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IDomainDataExtensionDirectory">
            <summary>
            Interface of an extension directory.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainDataExtensionDirectory.Process">
            <summary>
            Process and initialize the contained data.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainDataExtensionDirectory.Merge(Tum.PDE.ToolFramework.Modeling.IDomainDataExtensionDirectory)">
            <summary>
            Merges the current directory with an additional directory.
            </summary>
            <param name="data">Directory</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.IDomainDataExtensionDirectory.GetExtensionType">
            <summary>
            Gets the type of the extension.
            </summary>
            <returns>Type of the extension.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DependencyItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependencyItem.#ctor(Microsoft.VisualStudio.Modeling.ElementLink,Tum.PDE.ToolFramework.Modeling.DependencyItemCategory,Microsoft.VisualStudio.Modeling.DomainRelationshipInfo,Microsoft.VisualStudio.Modeling.DomainRoleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="elementLink">Relationship instance.</param>
            <param name="category">Category of the dependency item.</param>
            <param name="relationshipInfo">Relationship info.</param>
            <param name="roleInfo">Role info.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyItem.Category">
            <summary>
            Gets the dependency items category.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyItem.ElementLink">
            <summary>
            Gets the relationship instance.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyItem.SourceElement">
            <summary>
            Gets the source element.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependencyItem.TargetElement">
            <summary>
            Gets the target element.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainModelElement">
            <summary>
            This is the abstract class wrapping additional functionality for the DSL-Tools ModelElement class.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainClassId">
            <summary>
            Domain class Id.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
            <summary>
            Constructor.
            </summary>
            <param name="partition">Partition of the store where element is to be created.</param>
            <param name="propertyAssignments">New element property assignments.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetDomainClassId">
            <summary>
            Gets the domain class Id of this element.
            </summary>
            <returns>DomainClass Id.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetDomainModelType">
            <summary>
            Gets the domain model type.
            </summary>
            <returns>Domain model type.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetDomainModelServices">
            <summary>
            Gets the domain model services.
            </summary>
            <returns>Domain model services.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetDomainModelTypeId">
            <summary>
            Gets the domain model DomainClassId.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelIsCopyAllowed">
            <summary>
            Decides whether the element can be copied or not.
            </summary>
            <returns>True if the element can be copied. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelIsMoveAllowed">
            <summary>
            Decides whether the element can be moved or not.
            </summary>
            <returns>True if the element can be moved. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelIsPasteAllowed(Tum.PDE.ToolFramework.Modeling.ModelProtoGroupOperation)">
            <summary>
            Decides whether the element can be pasted or not based on the operation.
            </summary>
            <param name="protoGroupOperation">Proto group operation.</param>
            <returns>True if the element can be pasted. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelCreateMergeCopy(Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Create a proto element representation of the element, which can be used for paste later.
            </summary>
            <param name="protoGroup">Proto group to add the element to.</param>
            <returns>Proto element representation of the element.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelCreateMoveCopy(Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Create a proto element representation of the element, which can be used for paste later.
            </summary>
            <param name="protoGroup">Proto group to add the element to.</param>
            <returns>Proto element representation of the element.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelProcessMergeCopy(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Processes a proto element representation of the element and adds required proto links. 
            This method is called on base classes from derived classes.
            
            Hint: Properties do not need to be added in this method.
            </summary>
            <param name="protoElement">Proto element representation of the element.</param>
            <param name="protoGroup">Proto group the proto element belongs to.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelCanMerge(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroup)">
            <summary>
            Decides whether the element that is represented by the proto element can be pasted or not.
            </summary>
            <param name="protoElement">Proto element representation of the element.</param>
            <param name="protoGroup">Proto group the proto element belongs to.</param>
            <returns>True if the element can be pasted. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelMerge(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger,System.Boolean)">
            <summary>
            Adds a proto element to the current element.
            </summary>
            <param name="protoElement">Proto element representation of the element that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
            <param name="isRoot">Root element?</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelMerge(Tum.PDE.ToolFramework.Modeling.ModelProtoLink,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger)">
            <summary>
            Adds a proto link to the current element.
            </summary>
            <param name="protoLink">Proto link representation of the element link that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelMove(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger)">
            <summary>
            Moves a proto element to the current element.
            </summary>
            <param name="protoElement">Proto element representation of the element that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelFinalize(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger)">
            <summary>
            Finalize. This method is called on each copied element once all the elements and links are processed.
            </summary>
            <param name="protoElement">Proto element representation of the element that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.ModelFinalizeMerge(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,Tum.PDE.ToolFramework.Modeling.ModelProtoGroupMerger)">
            <summary>
            Finalize merge.
            </summary>
            <param name="protoElement">Proto element representation of the element that is to be added.</param>
            <param name="groupMerger">
            Group merger class used to track id mapping, merge errors/warnings and 
            postprocess merging by rebuilding reference relationships.
            </param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetParent">
            <summary>
            Get the parent of this element. Can be null.
            </summary>
            <returns>Parent element if one is found. Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetChildren">
            <summary>
            Get all children of this element.
            </summary>
            <returns>Children elements.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetLocalChildren">
            <summary>
            Get local children of this element.
            </summary>
            <returns>Children elements.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetSourceDomainRole(Microsoft.VisualStudio.Modeling.DomainRelationshipInfo)">
            <summary>
            Get source domain role.
            </summary>
            <param name="info">Relationship info.</param>
            <returns>Source domain role.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelElement.GetTargetDomainRole(Microsoft.VisualStudio.Modeling.DomainRelationshipInfo)">
            <summary>
            Get target domain role.
            </summary>
            <param name="info">Relationship info.</param>
            <returns>Target domain role.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementName">
            <summary>
            Gets or sets the value of the property (which is marked as element name)
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementFullName">
            <summary>
            Gets the full name of the element.
            </summary>
            <remarks>
            This is either: ElementName (elemenType) or just ElementType.
            </remarks>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementHasName">
            <summary>
            Gets whether the domain element has a property marked as element name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementNameInfo">
            <summary>
            Gets the domain element name info if there is one; Null otherwise.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementType">
            <summary>
            Gets the type of the ModelElement as string.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementTypeDisplayName">
            <summary>
            Gets the display name of the type of the ModelElement.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementParentHasName">
            <summary>
            True if parent element has a name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementParentName">
            <summary>
            Returns the parent name (or its type name, if there is no name property).
            If the element doesnt have a parent, null is returned.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementParentFullName">
            <summary>
            Returns the parent name + (type name) (or its type name, if there is no name property).
            If the element doesnt have a parent, null is returned.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementParentHasFirstExistingName">
            <summary>
            True if there is a first parent element, which has a DomainElementName name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementParentFirstExistingName">
            <summary>
            Returns the DomainElementName of the first parent to actually have a name.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementHasParentFullPath">
            <summary>
            Returns true if this elements parent has an embedding full path.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.DomainElementParentFullPath">
            <summary>
            Returns the full path of the parent element relative to the domain model element.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelElement.Store">
            <summary>
            Gets the domain model store.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DependenciesItemsProvider">
            <summary>
            This base abstract class provides methods for a dependency items provder that needs to be overriden in the actual domain model instance. 
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesItemsProvider.GetAllCategories">
            <summary>
            Returns all dependency item categories as an array.
            </summary>
            <returns>Array of dependency item categories.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesItemsProvider.GetDependencies(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Gets the dependencies for a specific model element.
            </summary>
            <param name="modelElement">Model element to get the dependencies for.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesItemsProvider.GetDependencies(Microsoft.VisualStudio.Modeling.ModelElement,Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions)">
            <summary>
            Gets the dependencies for a specific model element.
            </summary>
            <param name="modelElement">Model element to get the dependencies for.</param>
            <param name="options">Options.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesItemsProvider.GetDependencies(System.Collections.Generic.List{Microsoft.VisualStudio.Modeling.ModelElement})">
            <summary>
            Gets the dependencies for a specific model elements.
            </summary>
            <param name="modelElements">List of model elements to get the dependencies for.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesItemsProvider.GetDependencies(System.Collections.Generic.List{Microsoft.VisualStudio.Modeling.ModelElement},Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions)">
            <summary>
            Gets the dependencies for a specific model elements.
            </summary>
            <param name="modelElements">List of model elements to get the dependencies for.</param>
            <param name="options">Options.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesItemsProvider.GetDependencies(System.Collections.Generic.List{Microsoft.VisualStudio.Modeling.ModelElement},Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions,Tum.PDE.ToolFramework.Modeling.DependenciesData)">
            <summary>
            Gets the dependencies for a specific model elements.
            </summary>
            <param name="modelElements">List of model elements to get the dependencies for.</param>
            <param name="options">Options.</param>
            <param name="dependenciesData">Data to add found dependencies to.</param>
            <returns>List of dependencies.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesItemsProvider.RetrivalOptions">
            <summary>
            Gets the retrival options.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SerializationOptions">
            <summary>
            Specifies serialization options, that might be required during domain specific serialization.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationOptions.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SerializationOptions.SerializationMode">
            <summary>
            Gets or sets how the serialization should be processed.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory">
            <summary>
            Data class for advanced reflection information.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.domainClassSourceReferences">
            <summary>
            Dictionary containing references from a domain class to reference relationship infos.
            Domain class is the source of reference relationships
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.domainClassTargetReferences">
            <summary>
            Dictionary containing references from a domain class to reference relationship infos.
            Domain class is the target of reference relationships
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.domainClassSourceEmbeddings">
            <summary>
            Dictionary containing references from a domain class to embedding relationship infos.
            Domain class is the source of embedding relationships
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.domainClassTargetEmbeddings">
            <summary>
            Dictionary containing references from a domain class to embedding relationship infos.
            Domain class is the target of embedding relationships
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.#ctor(Tum.PDE.ToolFramework.Modeling.DomainModelStore)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsIncludedInModel(Tum.PDE.ToolFramework.Modeling.DomainModelElement)">
            <summary>
            Verifies if the given model element belongs to the domain model (can be reached from the domain model element).
            </summary>
            <param name="modelElement">Model element.</param>
            <returns>True if the element belongs to the domain model. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsIncludedInModel(System.Guid)">
            <summary>
            Verifies if the given model element belongs to the domain model (can be reached from the domain model element).
            </summary>
            <param name="modelElementDCId">Model element domain class id.</param>
            <returns>True if the element belongs to the domain model. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsIncludedInModel(System.Guid,Tum.PDE.ToolFramework.Modeling.DomainModelElement)">
            <summary>
            Verifies if the given model element belongs to the domain model (can be reached from the domain model element).
            </summary>
            <param name="modelContextId">Model context Id.</param>
            <param name="modelElement">Model element.</param>
            <returns>True if the element belongs to the domain model. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsIncludedInModel(System.Guid,System.Guid)">
            <summary>
            Verifies if the given model element belongs to the domain model (can be reached from the domain model element).
            </summary>
            <param name="modelContextId">Model context Id.</param>
            <param name="modelElementDCId">Model element domain class id.</param>
            <returns>True if the element belongs to the domain model. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsReferenceIncludedInModel(Tum.PDE.ToolFramework.Modeling.DomainModelLink)">
            <summary>
            Verifies if the given reference link belongs to the domain model (can be reached from the domain model element).
            </summary>
            <param name="modelLink">Model link.</param>
            <returns>True if the refrence link belongs to the domain model. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsReferenceIncludedInModel(System.Guid)">
            <summary>
            Verifies if the given reference link belongs to the domain model (can be reached from the domain model element).
            </summary>
            <param name="modelLinkDCId">Model link domain class Id.</param>
            <returns>True if the refrence link belongs to the domain model. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsReferenceIncludedInModel(System.Guid,Tum.PDE.ToolFramework.Modeling.DomainModelLink)">
            <summary>
            Verifies if the given reference link belongs to the domain model (can be reached from the domain model element).
            </summary>
            <param name="modelLink">Model link.</param>
            <param name="modelContextId">Model context Id.</param>
            <returns>True if the refrence link belongs to the domain model. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsReferenceIncludedInModel(System.Guid,System.Guid)">
            <summary>
            Verifies if the given reference link belongs to the domain model (can be reached from the domain model element).
            </summary>
            <param name="modelLinkDCId">Model link domain class Id.</param>
            <param name="modelContextId">Model context Id.</param>
            <returns>True if the refrence link belongs to the domain model. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsEmbeddingRelationship(System.Guid)">
            <summary>
            Verifies if the given relationship is embedding or not.
            </summary>
            <param name="modelLinkDCId">Model link domain class Id.</param>
            <returns>True if the provided model link type is embedding. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsAbstractRelationship(System.Guid)">
            <summary>
            Verifies if the given relationship is abstract or not.
            </summary>
            <param name="modelLinkDCId">Model link domain class Id.</param>
            <returns>True if the provided model link type is abstract. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.IsAbstractClass(System.Guid)">
            <summary>
            Verifies if the given class is abstract or not.
            </summary>
            <param name="domainClassId">Domain class Id.</param>
            <returns>True if the provided model element type is abstract. False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.FindRelationshipInfo(System.Guid)">
            <summary>
            Tries to find the DomainRelationshipAdvancedInfo for the specified relationship.
            </summary>
            <param name="domainClassId">DomainClassId of the relationship.</param>
            <returns>DomainRelationshipAdvancedInfo if found; null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.GetRelationshipInfo(System.Guid)">
            <summary>
            Gets the DomainRelationshipAdvancedInfo for the specified relationship.
            </summary>
            <param name="domainClassId">DomainClassId of the relationship.</param>
            <returns>DomainRelationshipAdvancedInfo.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.FindClassInfo(System.Guid)">
            <summary>
            Tries to find the DomainClassAdvancedInfo for the specified class.
            </summary>
            <param name="domainClassId">DomainClassId of the class.</param>
            <returns>DomainClassAdvancedInfo if found; null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.GetClassInfo(System.Guid)">
            <summary>
            Gets the DomainClassAdvancedInfo for the specified class.
            </summary>
            <param name="domainClassId">DomainClassId of the class.</param>
            <returns>DomainClassAdvancedInfo.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.FindDomainClassSourceReferences(System.Guid)">
            <summary>
            Finds references from a domain class to reference relationship infos.
            Domain class is the source of reference relationships.
            </summary>
            <param name="domainClassId">DomainClassId</param>
            <returns>List if found; null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.FindDomainClassTargetReferences(System.Guid)">
            <summary>
            Finds references from a domain class to reference relationship infos.
            Domain class is the target of reference relationships.
            </summary>
            <param name="domainClassId">DomainClassId</param>
            <returns>List if found; null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.FindDomainClassSourceEmbeddings(System.Guid)">
            <summary>
            Finds references from a domain class to embedding relationship infos.
            Domain class is the source of embedding relationships.
            </summary>
            <param name="domainClassId">DomainClassId</param>
            <returns>List if found; null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.FindDomainClassTargetEmbeddings(System.Guid)">
            <summary>
            Finds references from a domain class to embedding relationship infos.
            Domain class is the target of embedding relationships.
            </summary>
            <param name="domainClassId">DomainClassId</param>
            <returns>List if found; null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.ResolveExtensionDirectory``1">
            <summary>
            Resolves an existing extension directory.
            </summary>
            <typeparam name="T">Type of the directory.</typeparam>
            <returns>Directory if found; null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.ProcessDataExtensions(Tum.PDE.ToolFramework.Modeling.IDomainDataExtensionDirectory[])">
            <summary>
            Processes the given data extensions.
            </summary>
            <param name="data">Data extensions.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.ParentChildrenMapping">
            <summary>
            Gets the parent children mapping dictionary. The first Guid represents model context id, second a domain class ID of an element.
            The list is a collection of domain relationship DomainClassIds.
            </summary>
            <remarks>
            The content of this dictionary is provided in the initialize method of the derived model tree class.
            </remarks>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainDataAdvDirectory.ParentChildrenCMMapping">
            <summary>
            Gets the parent children mapping dictionary for context menu that should not be created. 
            The first Guid represents model context id, second a domain class ID of an element.
            The list is a collection of domain relationship DomainClassIds.
            </summary>
            <remarks>
            The content of this dictionary is provided in the initialize method of the derived model tree class.
            </remarks>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SerializationHelper">
            <summary>
            Serialization helper class.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SerializationHelper.typeDNTInitializedEvent">
            <summary>
            Event set once the dictionary TypeEmbeddedDerivedNameTypes is initialized.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SerializationHelper.typeEmbeddedDNTInitializedEvent">
            <summary>
            Event set once the dictionary TypeDerivedNameTypes is initialized.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SerializationHelper.typeEmbeddedDerivedNameTypes">
            <summary>
            Dictionary required to process derived types during serialization.
            </summary>
            <remarks>
            First guid: domain class type.
            List = serializationName of a child element as well as the its domain class type.
            </remarks>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SerializationHelper.typeDerivedNameTypes">
            <summary>
            Dictionary required to process derived types during serialization.
            </summary>
            <remarks>
            First guid: domain class type.
            List = serializationName of a derived element as well as its domain class type.
            </remarks>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationHelper.#cctor">
            <summary>
            Static initialization.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationHelper.TryGetDerivedNameType(System.Guid,System.String)">
            <summary>
            Gets the type of a derived class of a specified basetype that is serialized under the given name.
            </summary>
            <param name="baseType">Base type.</param>
            <param name="name">Serialization name.</param>
            <returns>Derived type if found. Guid.Empty otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationHelper.TryGetEmbeddedNameTypes(System.Guid,System.String)">
            <summary>
            Gets the type of a embedded derived class of a specified basetype that is serialized under the given name.
            </summary>
            <param name="parentType">Base type.</param>
            <param name="name">Serialization name.</param>
            <returns>Embedded derived type if found. Guid.Empty otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationHelper.TryGetFirstEmbeddedDerivedNameType(System.Guid,System.Guid,System.String)">
            <summary>
            Gets the first type of a embedded derived class of a specified basetype that is serialized under the given name.
            </summary>
            <param name="parentType">Parent type.</param>
            <param name="baseType">Base type.</param>
            <param name="name">Serialization name.</param>
            <returns>First embedded derived type if found. Guid.Empty otherwise.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SerializationHelper.TypeEmbeddedDerivedNameTypes">
            <summary>
            Dictionary required to process derived types during serialization.
            </summary>
            <remarks>
            First guid: domain class type.
            List = serializationName of a child element as well as the its domain class type.
            </remarks>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SerializationHelper.TypeDerivedNameTypes">
            <summary>
            Dictionary required to process derived types during serialization.
            </summary>
            <remarks>
            First guid: domain class type.
            List = serializationName of a derived element as well as its domain class type.
            </remarks>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType">
            <summary>
            Represents a collection of values that identify types or severity of error
            messages that can appear in the Error List.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType.Error">
            <summary>
            Represents an error.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType.Warning">
            <summary>
            Represents a warning.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType.Message">
            <summary>
            Represents an informational note.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationViolationType.Fatal">
            <summary>
            Represents an fatal error.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationStateAttribute">
            <summary>
            Attribute class used to mark meta-classes. A valid meta-class should have both [MetaObject] and [MetaClass] defined.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelValidationStateAttribute.#ctor(Tum.PDE.ToolFramework.Modeling.ModelValidationState)">
            <summary>
            Initializes a new instance of ValidationStateAttribute class.
            </summary>
            <param name="validationState">Constraint validation behavior flag.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelValidationStateAttribute.ValidationState">
            <summary>
            Gets the constraint validation flag for the meta-class custom attribute.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelValidationState">
            <summary>
            ValidationState to indicate whether the constraint validation will be enabled for meta-class.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationState.Disabled">
            <summary>
            Disable the contraint validation.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelValidationState.Enabled">
            <summary>
            Enable the contraint validation.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum">
            <summary>
            This enum identifies search criterias.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum.Name">
            <summary>
            Name property.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum.Type">
            <summary>
            Type.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum.NameAndType">
            <summary>
            Name and Type.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum.Properties">
            <summary>
            Properties.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum.PropertiesWithoutName">
            <summary>
            Properties without the Name property.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum.Roles">
            <summary>
            Roles
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum.All">
            <summary>
            All of the above.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.SearchCriteriaEnum.Custom">
            <summary>
            This is used for extensions.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup">
            <summary>
            ProtoGroups contain the information to recreate element in any given store.
            </summary>
            <remarks>
            Source: DSL-Tools framework for the most part.
            </remarks>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.DefaultDataFormatName">
            <summary>
            Default data format name to use in the clipboard.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.DefaultDataIdentifierName">
            <summary>
            Name identifying the id parameter of the proto group, used in the clipboard.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.#ctor(System.Collections.Generic.ICollection{Microsoft.VisualStudio.Modeling.ModelElement},Tum.PDE.ToolFramework.Modeling.ModelProtoGroupOperation)">
            <summary>
            Constructor.
            </summary>
            <param name="elements">Model element to create proto elements for.</param>
            <param name="operation">Operation.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor.
            </summary>
            <param name="info">The SerializationInfo to get the data from.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.OnDeserialization(System.Object)">
            <summary>
            Deserialize.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.GetElementById(System.Guid)">
            <summary>
            Gets an elements of a specific Id.
            </summary>
            <param name="elementId">Id of the element to retrieve.</param>
            <returns>Element of the specific Id or null.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.HasProtoElementFor(System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
            <summary>
            Verifies if there is a proto element for the specified element id.
            </summary>
            <param name="elementId"></param>
            <param name="partition"></param>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.GetProtoElementFor(System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
            <summary>
            Verifies if there is a proto element for the specified element id.
            </summary>
            <param name="elementId"></param>
            <param name="partition"></param>
            <returns>Protoelement if found; Null otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.GetEmbeddedElements(Microsoft.VisualStudio.Modeling.Partition,Tum.PDE.ToolFramework.Modeling.ModelProtoElement)">
            <summary>
            Get all embedded proto elements for the given element.
            </summary>
            <param name="partition">Partition.</param>
            <param name="protoElement">Proto element to get all embedded elements for.</param>
            <returns>List of embedded proto elements.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.GetReferenceLinks(Microsoft.VisualStudio.Modeling.Partition,Tum.PDE.ToolFramework.Modeling.ModelProtoElement)">
            <summary>
            Gets the source proto links.
            </summary>
            <param name="partition"></param>
            <param name="protoElement"></param>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.GetReferenceLinksTarget(Microsoft.VisualStudio.Modeling.Partition,Tum.PDE.ToolFramework.Modeling.ModelProtoElement)">
            <summary>
            Gets the target proto links.
            </summary>
            <param name="partition"></param>
            <param name="protoElement"></param>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.AddNewElement(Tum.PDE.ToolFramework.Modeling.ModelProtoElement)">
            <summary>
            Adds a proto element to the proto elements collection.
            </summary>
            <param name="protoElement">Proto element to add to the collection.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.InsertNewElement(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,System.Int32)">
            <summary>
            Adds a proto element to the proto elements collection.
            </summary>
            <param name="protoElement">Proto element to add to the collection.</param>
            <param name="index">Index.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.SortProtoElements(System.Comparison{Tum.PDE.ToolFramework.Modeling.ModelProtoElement})">
            <summary>
            Sort the proto elements collection
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.SortProtoRootElements(System.Comparison{Tum.PDE.ToolFramework.Modeling.ModelProtoElement})">
            <summary>
            Sort the proto elements root collection
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.AddNewRootElement(Tum.PDE.ToolFramework.Modeling.ModelProtoElement)">
            <summary>
            Adds a proto element to the proto elements collection.
            </summary>
            <param name="protoElement">Proto element to add to the collection.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.InsertNewRootElement(Tum.PDE.ToolFramework.Modeling.ModelProtoElement,System.Int32)">
            <summary>
            Adds a proto element to the proto elements collection.
            </summary>
            <param name="protoElement">Proto element to add to the collection.</param>
            <param name="index">Index.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.AddNewReferenceLink(Tum.PDE.ToolFramework.Modeling.ModelProtoLink)">
            <summary>
            Add new proto link representing a reference relationship to this proto group.
            </summary>
            <param name="protoLink">Proto link to add this proto group.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.AddNewEmbeddingLink(Tum.PDE.ToolFramework.Modeling.ModelProtoLink)">
            <summary>
            Add new proto link representing a embedding relationship to this proto group.
            </summary>
            <param name="protoLink">Proto link to add this proto group.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo with the data
            needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.Operation">
            <summary>
            Gets the operation type.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.ProtoEmbeddingLinks">
            <summary>
            Gets all embedding proto element links.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.ProtoReferenceLinks">
            <summary>
            Gets all reference proto element links.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.ProtoElements">
            <summary>
            Gets all proto elements.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelProtoGroup.ProtoRootElements">
            <summary>
            Gets all proto root elements.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelElementChildrenProvider">
            <summary>
            Class which retrieves children elements domain classes.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelElementChildrenProvider.GetChildren(Microsoft.VisualStudio.Modeling.ModelElement,System.Boolean)">
            <summary>
            Retrieves all children of a specific parent element. This includes all model elements that are reachable
            from the parent element through the embedding relationship.
            </summary>
            <param name="parentElement">Parent element to retrieve children for.</param>
            <param name="bOnlyLocal">Specifies if children of the found children of the given element should be processed too.</param>
            <returns>List of model elements that are embedded under the parent element. May be empty.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelContextInfo">
            <summary>
            This class contains model context reflection info.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContextInfo.#ctor(System.Guid,System.Guid)">
            <summary>
            Constructor.
            </summary>
            <param name="modelContextId">Id of the model context.</param>
            <param name="domainModelId">DomainClassId of the root domain class.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContextInfo.ModelContextId">
            <summary>
            Gets the model context id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContextInfo.DomainModelId">
            <summary>
            Gets the domain model id.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor">
            <summary>
            This class is used to store post process date during deseralization.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.dictionary">
            <summary>
            Dictionary containing the gathered information.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.trackDictionary">
            <summary>
            List containing the gathered tracking information.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.AddPostProcessData(System.Guid,System.Guid,System.Guid,System.Guid)">
            <summary>
            Adds a new entry into the dictionary for later postprocessing.
            </summary>
            <param name="relationshipDomainClassId">DomainClassId of the relationship.</param>
            <param name="relationshipId">Id of the relationship. Can be Guid.Empty, in which case a new relationship is created.</param>
            <param name="sourceId">Id of the source element. Can be Guid.Empty, in which case this entry needs to be updated later.</param>
            <param name="targetId">Id of the target element. Can be Guid.Empty, in which case this entry needs to be updated later.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.AddRelationshipTrackData(System.Guid)">
            <summary>
            Adds a new relationship to track during the post process phase. This is required for relationships that are created with
            placeholder role assignments. In case those are not resolved later, all relationships that are beeing tracked need to be 
            deleted.
            </summary>
            <param name="relationshipId">Id of the relationship. </param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.DoPostProcess(System.Collections.Generic.List{System.String},Microsoft.VisualStudio.Modeling.SerializationResult,Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Post process gathered information.
            </summary>
            <param name="alreadyProcessedModels">Already processed models.</param>
            <param name="serializationResult">Serialization result.</param>
            <param name="store">Store.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.DoPostProcess(Microsoft.VisualStudio.Modeling.SerializationResult,Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Post process gathered information.
            </summary>
            <param name="serializationResult">Serialization result.</param>
            <param name="store">Store.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.Reset">
            <summary>
            Clears the gathered information.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.Reset(System.Collections.Generic.List{System.String})">
            <summary>
            Clears the gathered information.
            </summary>
            <param name="alreadyProcessedModels">Already processed models.</param>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.PostProcessRelationshipData">
            <summary>
            Helper class for storing gathered information.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.PostProcessRelationshipData.RelationshipId">
            <summary>
            Id of the relationship.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.PostProcessRelationshipData.ModelElementSourceId">
            <summary>
            Id of the source element.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelDataSerializationPostProcessor.PostProcessRelationshipData.ModelElementTargetId">
            <summary>
            Id of the target element.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelContext">
            <summary>
            This class represents a model context.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelContext.rootModelElement">
            <summary>
            Root model element.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.#ctor(Tum.PDE.ToolFramework.Modeling.ModelData)">
            <summary>
            Constructor.
            </summary>
            <param name="modelData"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.LoadDocument(System.String,System.Boolean)">
            <summary>
            Loads the domain model from a specified file. 
            </summary>
            <param name="fileName">Filename to load the domain model from.</param>
            <param name="isReload">True if the document is beeing reloaded.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.LoadDocumentInternal(System.String)">
            <summary>
            Loads the domain model from a specified file.  This will not replace the currently loaded domain model.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.SaveDocument(System.String)">
            <summary>
            Saves the domain model to a specified filename.
            </summary>
            <param name="fileName">Filename to save the domain model to.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.SaveDocumentTemporarly(System.String)">
            <summary>
            Saves the domain model to a specified filename. This serialization is treated as temporarly and as such does
            not change the default saving location of the current domain model.
            </summary>
            <param name="fileName">Filename to save the domain model to.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.Load(System.String,System.Boolean)">
            <summary>
            Loads the document from a given file name.
            </summary>
            <param name="fileName">Filename from which to load the document data.</param>
            <param name="isReload">True if the document is reloading.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.LoadInternal(System.String)">
            <summary>
            Loads the document from a given file name. This will not replace the currently loaded domain model neither will it send events.
            </summary>
            <param name="fileName">Filename from which to load the document data.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.Save(System.String)">
            <summary>
            Saves the document to a given file name.
            </summary>
            <param name="fileName">Filename to save the document data to.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.SaveTemporarly(System.String)">
            <summary>
            Saves the document to a given file name. This serialization is treated as temporarly and as such does
            not change the default saving location of the current domain model.
            </summary>
            <param name="fileName">Filename to save the document data to.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.GetDiagram(System.String)">
            <summary>
            Gets a specific diagram.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.TransactionCommited(Microsoft.VisualStudio.Modeling.TransactionCommitEventArgs)">
            <summary>
            Called whever a transaction is commited.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.Reset">
            <summary>
            Resets the current document data.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.OnDocumentClosed(System.EventArgs)">
            <summary>
            Called after the document is closed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.OnDocumentClosing(System.EventArgs)">
            <summary>
            Called before the document is closed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.OnDocumentLoaded(System.EventArgs)">
            <summary>
            Called after the document has been initially loaded.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.OnDocumentLoading(System.EventArgs)">
            <summary>
            Called before the document is initially loaded with data.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.OnDocumentReloaded(System.EventArgs)">
            <summary>
            Called after the document has been reloaded.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.OnDocumentReloading(System.EventArgs)">
            <summary>
            Called before the document is reloaded.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.OnDocumentSaved(System.EventArgs)">
            <summary>
            Called after the document has been saved.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.ModelContext.OnDocumentSaving(System.EventArgs)">
            <summary>
            Called before the document is saved.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContext.SerializationResult">
            <summary>
            Serialization result.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContext.RootElement">
            <summary>
            The Root Element that identifies the portion of the store owned by this DocData.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContext.InLoad">
            <summary>
            True if data is beeing loaded. False otherwise.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContext.InReload">
            <summary>
            True if the data is beeing reloaded. False otherwise.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContext.SerializedModel">
            <summary>
            Return the model in XML format (SerializationMode.InternalToString).
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContext.SerializedFullModel">
            <summary>
            Return the model in XML format (SerializationMode.InternalFullToString).
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.ModelContext.IsDirty">
            <summary>
            True if the document data has changed since the last save. False otherwise.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelContext.DocumentClosed">
            <summary>
            Fired after the document is closed.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelContext.DocumentClosing">
            <summary>
            Fired before the document is closed.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelContext.DocumentLoaded">
            <summary>
            Fires after the document has been initially loaded.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelContext.DocumentLoading">
            <summary>
            Fires before the document is intitially loaded with data.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelContext.DocumentReloaded">
            <summary>
            Fires after the document has been reloaded.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelContext.DocumentReloading">
            <summary>
            Fires before the document is reloaded.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelContext.DocumentSaved">
            <summary>
            Fires after the document has been saved.
            </summary>
        </member>
        <member name="E:Tum.PDE.ToolFramework.Modeling.ModelContext.DocumentSaving">
            <summary>
            Fires before the document is saved.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainModelExtensionServices">
            <summary>
            Domain model extension services.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelExtensionServices.#ctor(Tum.PDE.ToolFramework.Modeling.IDomainModelServices)">
            <summary>
            Constructor.
            </summary>
            <param name="mainService">Main service</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelExtensionServices.Intialize">
            <summary>
            Initialized known extern services.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelExtensionServices.AddExternModelService(Tum.PDE.ToolFramework.Modeling.IDomainModelServices)">
            <summary>
            Adds an extern model service.
            </summary>
            <param name="externService">IDomainModelServices.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelExtensionServices.SetTopMostService(Tum.PDE.ToolFramework.Modeling.IDomainModelServices)">
            <summary>
            Sets the top-most service.
            </summary>
            <param name="externService">IDomainModelServices.</param>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelExtensionServices.MainService">
            <summary>
            Gets the main service.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelExtensionServices.ExternServices">
            <summary>
            Extern services collection.
            </summary>		
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainClassAdvancedInfo">
            <summary>
            Advanced reflection info for domain class.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainClassAdvancedInfo.#ctor(System.Guid)">
            <summary>
            Constructor.
            </summary>
            <param name="domainClassId">Domain class id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainClassAdvancedInfo.GetInfo(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Gets the DomainRelationshipInfo.
            </summary>
            <param name="store">Store to get the DomainRelationshipInfo from.</param>
            <returns>DomainRelationshipInfo if found; null otherwise.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainClassAdvancedInfo.DomainClassId">
            <summary>
            Gets the domain class Id.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainClassAdvancedInfo.IsAbstract">
            <summary>
            Gets or sets whether the class is abstract or not.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SerializationDomainRelationshipXmlSerializer">
            <summary>
            This is the base class for all generated domain serializers for domain relationships.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SerializationDomainRelationshipXmlSerializer.TryCreateDerivedInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
            <summary>
            With the given XmlReader, check if it is currently pointing to a serialized
            instance that derives from the ElementLink this serializer can handle. If
            so, create an instance of the derived ElementLink instance in the given Partition;
            otherwise return NULL.  Note: The caller will guarantee that the reader is
            positioned at open XML tag of the element being read. This method should
            not move the reader; the reader should remain at the same position when this
            method returns.
            </summary>
            <param name="serializationContext">Serialization context.</param>
            <param name="reader">XmlReader to read from.</param>
            <param name="partition">Partition in which the new link will be created.</param>
            <returns>The created ElementLink instance, or null if the reader is not pointing to
            a correct serialized instance.</returns>
            <remarks>
            Note: that this method only tries to create the derived ElementLink instance,
            without actually deserializing it. The deserialization will be done by the
            Read() methods. There are two reasons for this separation: 1) We may need
            to link the created link to its source role player before we can deserializing
            it properly.  2) The deserialization can be customized.
            </remarks>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.SearchResult">
            <summary>
            This class represents a search result.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.SearchResult.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SearchResult.IsSuccessFull">
            <summary>
            Gets or sets whether this search result represents a successfull search query or not.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SearchResult.Source">
            <summary>
            Gets or sets the source.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.SearchResult.Reason">
            <summary>
            Gets or sets the reason.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainModelStore">
            <summary>
            This class wraps extension functionality for the DSL Tools Store class.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelStore.#ctor(System.Type[])">
            <summary>
            Creates an instance of the DomainModelStore class.
            </summary>
            <param name="domainModelTypes">List of domain models to be loaded.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelStore.#ctor(System.Boolean,System.Type[])">
            <summary>
            Creates an instance of the DomainModelStore class.
            </summary>
            <param name="bInitAsynchronous">Initialize asynchronously.</param>
            <param name="domainModelTypes">List of domain models to be loaded.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelStore.#ctor(System.Boolean,System.Boolean,System.Type[])">
            <summary>
            Creates an instance of the DomainModelStore class.
            </summary>
            <param name="bInitAsynchronous">Initialize asynchronously.</param>
            <param name="bInitDelayed">Delay initialization.</param>
            <param name="domainModelTypes">List of domain models to be loaded.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelStore.InitAsync">
            <summary>
            Async initialization.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelStore.IsInitialized">
            <summary>
            True if all store initialization routines have finished.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelStore.CustomDataBag">
            <summary>
            Gets the custom data bag.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelStore.DomainDataAdvDirectory">
            <summary>
            Gets the advanced domain data directory.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainModelServices">
            <summary>
            Domain model services class.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelServices.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.TopMostService">
            <summary>
            Gets or sets the top most service.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ExtensionServices">
            <summary>
            Gets the extension services.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ElementIdProvider">
            <summary>
            Gets the element id provider for domain model elements.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ElementNameProvider">
            <summary>
            Gets the element name provider for domain model elements.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ElementTypeProvider">
            <summary>
            Gets the element type provider for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ElementParentProvider">
            <summary>
            Gets the element parent provider for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ElementChildrenProvider">
            <summary>
            Gets the element children provider for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.DependenciesItemsProvider">
            <summary>
            Gets the dependency items provider for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.SearchProcessor">
            <summary>
            Gets the search processor for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ShapeProvider">
            <summary>
            Gets the search processor for domain model elments.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ValidationController">
            <summary>
            Gets the validation controller.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DomainModelServices.ModelDataOptions">
            <summary>
            Gets the model data options.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainModelBase">
            <summary>
            Base class for domain model implementation.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainModelBase.DomainModelId">
            <summary>
            VModellXTDomainModel domain model Id.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelBase.#ctor(Tum.PDE.ToolFramework.Modeling.DomainModelStore,System.Guid)">
            <summary>
            Constructor.
            </summary>
            <param name="store">Store containing the domain model.</param>
            <param name="dModelId">Domain model Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelBase.#ctor(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
            <summary>
            Constructor.
            </summary>
            <param name="store">Store containing the domain model.</param>
            <param name="dModelId">Domain model Id.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelBase.GetDomainClassAdvancedInfo">
            <summary>
            Gets domain classes advanced reflection information.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelBase.GetDomainRelationshipAdvancedInfo">
            <summary>
            Gets domain relationships advanced reflection information.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelBase.GetEmbeddingRelationshipOrderInfo">
            <summary>
            Gets the embedding relationships order information (parent-child mappings in the order of the serialization model).
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelBase.GetModelContextInfo">
            <summary>
            Gets the model context informations.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelBase.GetDataExtensions">
            <summary>
            Gets data extensions.
            </summary>
            <returns>List of data extensions or null.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.IModelDataOptions">
            <summary>
            Interface for the model data options class, which is used to store common options.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IModelDataOptions.AppDataDirectory">
            <summary>
            Gets the application data directory for the current editor.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IModelDataOptions.AppName">
            <summary>
            Gets the name of the current editor.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IModelDataOptions.Company">
            <summary>
            Gets the name of the company providing this editor.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.IModelDataOptions.Version">
            <summary>
            Gets the version of the editor.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupOperation">
            <summary>
            Enumeration describing the type of operation that is defined for a proto group.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupOperation.Copy">
            <summary>
            Proto group is beeing copied.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.ModelProtoGroupOperation.Move">
            <summary>
            Proto group is beeing moved.
            </summary>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DomainModelDslEditorModeling">
            <summary>
            Base domain model.
            </summary>
        </member>
        <member name="F:Tum.PDE.ToolFramework.Modeling.DomainModelDslEditorModeling.DomainModelId">
            <summary>
            VModellXTDomainModel domain model Id.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelDslEditorModeling.#ctor(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Constructor.
            </summary>
            <param name="store">Store containing the domain model.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelDslEditorModeling.GetGeneratedDomainModelTypes">
            <summary>
            Gets the list of generated domain model types (classes, rules, relationships).
            </summary>
            <returns>List of types.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelDslEditorModeling.GetGeneratedDomainProperties">
            <summary>
            Gets the list of generated domain properties.
            </summary>
            <returns>List of property data.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DomainModelDslEditorModeling.GetGeneratedDomainRoles">
            <summary>
            Gets the list of generated domain roles.
            </summary>
            <returns>List of role data.</returns>
        </member>
        <member name="T:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions">
            <summary>
            This class is used to specify options to retrieve dependencies.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.#ctor(Tum.PDE.ToolFramework.Modeling.DependencyItemCategory[])">
            <summary>
            Constructor.
            </summary>
            <param name="categories">Categories to take into account.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.AddExcludedDomainModel(System.Guid)">
            <summary>
            Adds an exluded domain model type.
            </summary>
            <param name="domainModelType">Domain model type to be excluded during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.RemoveExcludedDomainModel(System.Guid)">
            <summary>
            Removes an exluded domain model type.
            </summary>
            <param name="domainModelType">Domain model type to be excluded during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.AddIncludedDomainModel(System.Guid)">
            <summary>
            Adds an inluded domain model type.
            </summary>
            <param name="domainModelType">Domain model type to be included during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.RemoveIncludedDomainModel(System.Guid)">
            <summary>
            Removes an inluded domain model type.
            </summary>
            <param name="domainModelType">Domain model type to be inluded during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.AddIncludedDomainClass(System.Guid)">
            <summary>
            Adds an included domain class type.
            </summary>
            <param name="domainClassType">Domain model class to be included during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.RemoveIncludedDomainClass(System.Guid)">
            <summary>
            Removes an included domain class type.
            </summary>
            <param name="domainClassType">Domain model class to be included during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.AddExcludedDomainClass(System.Guid)">
            <summary>
            Adds an excluded domain class type.
            </summary>
            <param name="domainClassType">Domain model class to be excluded during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.RemoveExcludedDomainClass(System.Guid)">
            <summary>
            Removes an excluded domain class type.
            </summary>
            <param name="domainClassType">Domain model class to be excluded during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.AddIncludedDomainRelationship(System.Guid)">
            <summary>
            Adds an included domain relationship type.
            </summary>
            <param name="domainRelationshipType">Domain relationship class to be included during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.RemoveIncludedDomainRelationship(System.Guid)">
            <summary>
            Removes an included domain relationship type.
            </summary>
            <param name="domainRelationshipType">Domain relationship class to be included during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.AddExcludedDomainRelationship(System.Guid)">
            <summary>
            Adds an excluded domain relationship type.
            </summary>
            <param name="domainRelationshipType">Domain relationship class to be included during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.RemoveExcludedDomainRelationship(System.Guid)">
            <summary>
            Removes an excluded domain relationship type.
            </summary>
            <param name="domainRelationshipType">Domain relationship class to be included during the search for dependencies.</param>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.ShouldExcludeDomainClass(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Verifies if a specific model element should be excluded or not.
            </summary>
            <param name="modelElement">Model element to verify</param>
            <returns>True if the specified element should be excluded; False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.ShouldExcludeDomainRelationship(System.Guid,System.Guid)">
            <summary>
            Verifies if a specific model relationship should be excluded or not.
            </summary>
            <param name="elementLinkType">Model relationship type to verify</param>
            <param name="domainModelType">Domain model type.</param>
            <returns>True if the specified relationship should be excluded; False otherwise.</returns>
        </member>
        <member name="M:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.ShouldExcludeDomainRelationship(Microsoft.VisualStudio.Modeling.ElementLink)">
            <summary>
            Verifies if a specific model relationship should be excluded or not.
            </summary>
            <param name="elementLink">Model relationship to verify</param>
            <returns>True if the specified relationship should be excluded; False otherwise.</returns>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.Categories">
            <summary>
            Gets or sets the categories.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.ExcludedDomainModels">
            <summary>
            Gets the list of domain model types that should be excluded during the search for dependencies.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.IncludedDomainModels">
            <summary>
            Gets the list of domain model types that should be included during the search for dependencies.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.IncludedDomainClasses">
            <summary>
            Gets the list of domain class types that should be included during the search for dependencies.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.ExcludedDomainClasses">
            <summary>
            Gets the list of domain class types that should be excluded during the search for dependencies.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.IncludedDomainRelationships">
            <summary>
            Gets the list of domain relationship types that should be included during the search for dependencies.
            </summary>
        </member>
        <member name="P:Tum.PDE.ToolFramework.Modeling.DependenciesRetrivalOptions.ExcludedDomainRelationships">
            <summary>
            Gets the list of domain relationship types that should be excluded during the search for dependencies.
            </summary>
        </member>
    </members>
</doc>
