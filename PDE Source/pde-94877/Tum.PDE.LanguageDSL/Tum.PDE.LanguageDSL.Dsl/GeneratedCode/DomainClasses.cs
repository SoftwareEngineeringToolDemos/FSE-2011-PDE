//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass MetaModel
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("069a8f33-3e79-4a97-906a-baf6c3754a2a")]
	public abstract partial class MetaModelBase : BaseMetaModel
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// MetaModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x069a8f33, 0x3e79, 0x4a97, 0x90, 0x6a, 0xba, 0xf6, 0xc3, 0x75, 0x4a, 0x2a);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected MetaModelBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x4404d1f6, 0xc147, 0x4719, 0xb0, 0x41, 0x54, 0xa5, 0xf3, 0x8b, 0x7b, 0x1a);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = "DslEditor";
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("DslEditor")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("4404d1f6-c147-4719-b041-54a5f38b7b1a")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CompanyName domain property code
		
		/// <summary>
		/// CompanyName domain property Id.
		/// </summary>
		public static readonly global::System.Guid CompanyNameDomainPropertyId = new global::System.Guid(0x00e062c0, 0x9ce2, 0x4c54, 0x9b, 0xb1, 0xe6, 0xd2, 0x6a, 0x37, 0xeb, 0x3b);
		
		/// <summary>
		/// Storage for CompanyName
		/// </summary>
		private global::System.String companyNamePropertyStorage = "Tum";
		
		/// <summary>
		/// Gets or sets the value of CompanyName domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Company Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/CompanyName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/CompanyName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/CompanyName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Tum")]
		[DslModeling::DomainObjectId("00e062c0-9ce2-4c54-9bb1-e6d26a37eb3b")]
		public global::System.String CompanyName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return companyNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CompanyNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.CompanyName domain property.
		/// </summary>
		internal sealed partial class CompanyNamePropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private CompanyNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.CompanyName domain property value handler.
			/// </summary>
			public static readonly CompanyNamePropertyHandler Instance = new CompanyNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.CompanyName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CompanyNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.companyNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.companyNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Namespace domain property code
		
		/// <summary>
		/// Namespace domain property Id.
		/// </summary>
		public static readonly global::System.Guid NamespaceDomainPropertyId = new global::System.Guid(0xbb2dfdf6, 0x58f6, 0x4570, 0xbf, 0x2b, 0x5f, 0x5c, 0x28, 0x3a, 0x7d, 0x3a);
		
		/// <summary>
		/// Storage for Namespace
		/// </summary>
		private global::System.String namespacePropertyStorage = "DslEditor.Model";
		
		/// <summary>
		/// Gets or sets the value of Namespace domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Namespace
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/Namespace.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/Namespace.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/Namespace.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("DslEditor.Model")]
		[DslModeling::DomainObjectId("bb2dfdf6-58f6-4570-bf2b-5f5c283a7d3a")]
		public global::System.String Namespace
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namespacePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamespacePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.Namespace domain property.
		/// </summary>
		internal sealed partial class NamespacePropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private NamespacePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.Namespace domain property value handler.
			/// </summary>
			public static readonly NamespacePropertyHandler Instance = new NamespacePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.Namespace domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NamespaceDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namespacePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namespacePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ProductName domain property code
		
		/// <summary>
		/// ProductName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ProductNameDomainPropertyId = new global::System.Guid(0x96871066, 0x0f5f, 0x429d, 0xb7, 0xcc, 0x2a, 0x95, 0xce, 0xc4, 0xfc, 0x5c);
		
		/// <summary>
		/// Storage for ProductName
		/// </summary>
		private global::System.String productNamePropertyStorage = "DslEditor";
		
		/// <summary>
		/// Gets or sets the value of ProductName domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Product Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/ProductName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/ProductName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/ProductName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("DslEditor")]
		[DslModeling::DomainObjectId("96871066-0f5f-429d-b7cc-2a95cec4fc5c")]
		public global::System.String ProductName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return productNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ProductNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.ProductName domain property.
		/// </summary>
		internal sealed partial class ProductNamePropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private ProductNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.ProductName domain property value handler.
			/// </summary>
			public static readonly ProductNamePropertyHandler Instance = new ProductNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.ProductName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ProductNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.productNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.productNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0xe3790368, 0x9d95, 0x474b, 0x8d, 0x29, 0x5d, 0x69, 0xc0, 0x2b, 0x7d, 0xf6);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Description
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/Description.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/Description.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/Description.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("e3790368-9d95-474b-8d29-5d69c02b7df6")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Build domain property code
		
		/// <summary>
		/// Build domain property Id.
		/// </summary>
		public static readonly global::System.Guid BuildDomainPropertyId = new global::System.Guid(0xdd9da2be, 0xb61b, 0x49b9, 0x94, 0xc2, 0xa4, 0x81, 0x2f, 0xb0, 0x5a, 0x24);
		
		/// <summary>
		/// Storage for Build
		/// </summary>
		private global::System.String buildPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Build domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Build
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/Build.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/Build.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/Build.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("dd9da2be-b61b-49b9-94c2-a4812fb05a24")]
		public global::System.String Build
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return buildPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BuildPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.Build domain property.
		/// </summary>
		internal sealed partial class BuildPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private BuildPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.Build domain property value handler.
			/// </summary>
			public static readonly BuildPropertyHandler Instance = new BuildPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.Build domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BuildDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.buildPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.buildPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MajorVersion domain property code
		
		/// <summary>
		/// MajorVersion domain property Id.
		/// </summary>
		public static readonly global::System.Guid MajorVersionDomainPropertyId = new global::System.Guid(0x9b83379e, 0xcf19, 0x4ad8, 0x85, 0x1f, 0xb2, 0x04, 0xb3, 0x3c, 0x7f, 0x59);
		
		/// <summary>
		/// Storage for MajorVersion
		/// </summary>
		private global::System.String majorVersionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of MajorVersion domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Major Version
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/MajorVersion.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/MajorVersion.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/MajorVersion.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9b83379e-cf19-4ad8-851f-b204b33c7f59")]
		public global::System.String MajorVersion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return majorVersionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				MajorVersionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.MajorVersion domain property.
		/// </summary>
		internal sealed partial class MajorVersionPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private MajorVersionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.MajorVersion domain property value handler.
			/// </summary>
			public static readonly MajorVersionPropertyHandler Instance = new MajorVersionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.MajorVersion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return MajorVersionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.majorVersionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.majorVersionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MinorVersion domain property code
		
		/// <summary>
		/// MinorVersion domain property Id.
		/// </summary>
		public static readonly global::System.Guid MinorVersionDomainPropertyId = new global::System.Guid(0xb747472e, 0xeffe, 0x42a9, 0xa5, 0x39, 0xe1, 0x87, 0x54, 0x7f, 0x7d, 0x87);
		
		/// <summary>
		/// Storage for MinorVersion
		/// </summary>
		private global::System.String minorVersionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of MinorVersion domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Minor Version
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/MinorVersion.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/MinorVersion.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/MinorVersion.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("b747472e-effe-42a9-a539-e187547f7d87")]
		public global::System.String MinorVersion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return minorVersionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				MinorVersionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.MinorVersion domain property.
		/// </summary>
		internal sealed partial class MinorVersionPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private MinorVersionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.MinorVersion domain property value handler.
			/// </summary>
			public static readonly MinorVersionPropertyHandler Instance = new MinorVersionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.MinorVersion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return MinorVersionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.minorVersionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.minorVersionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Revision domain property code
		
		/// <summary>
		/// Revision domain property Id.
		/// </summary>
		public static readonly global::System.Guid RevisionDomainPropertyId = new global::System.Guid(0x0416f14c, 0x5315, 0x479a, 0x88, 0x01, 0xba, 0x18, 0x4a, 0x5e, 0x44, 0x93);
		
		/// <summary>
		/// Storage for Revision
		/// </summary>
		private global::System.String revisionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Revision domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Revision
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/Revision.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/Revision.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/Revision.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0416f14c-5315-479a-8801-ba184a5e4493")]
		public global::System.String Revision
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return revisionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				RevisionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.Revision domain property.
		/// </summary>
		internal sealed partial class RevisionPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private RevisionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.Revision domain property value handler.
			/// </summary>
			public static readonly RevisionPropertyHandler Instance = new RevisionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.Revision domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return RevisionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.revisionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.revisionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0x6d531740, 0x99b0, 0x4090, 0xb7, 0x81, 0x4e, 0x05, 0x37, 0xb5, 0x05, 0x82);
		
		/// <summary>
		/// Storage for DisplayName
		/// </summary>
		private global::System.String displayNamePropertyStorage = "Meta Model DSL";
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Display Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/DisplayName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/DisplayName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/DisplayName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Meta Model DSL")]
		[DslModeling::DomainObjectId("6d531740-99b0-4090-b781-4e0537b50582")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return displayNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DisplayNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.displayNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.displayNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ApplicationName domain property code
		
		/// <summary>
		/// ApplicationName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ApplicationNameDomainPropertyId = new global::System.Guid(0xff755c86, 0x1b30, 0x4f70, 0xac, 0xcd, 0x5c, 0xe9, 0xb0, 0xf5, 0xcb, 0x32);
		
		/// <summary>
		/// Storage for ApplicationName
		/// </summary>
		private global::System.String applicationNamePropertyStorage = "DslEditor";
		
		/// <summary>
		/// Gets or sets the value of ApplicationName domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Application Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/ApplicationName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/ApplicationName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/ApplicationName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("DslEditor")]
		[DslModeling::DomainObjectId("ff755c86-1b30-4f70-accd-5ce9b0f5cb32")]
		public global::System.String ApplicationName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return applicationNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ApplicationNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.ApplicationName domain property.
		/// </summary>
		internal sealed partial class ApplicationNamePropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private ApplicationNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.ApplicationName domain property value handler.
			/// </summary>
			public static readonly ApplicationNamePropertyHandler Instance = new ApplicationNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.ApplicationName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ApplicationNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.applicationNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.applicationNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region LayoutEmbeddedPath domain property code
		
		/// <summary>
		/// LayoutEmbeddedPath domain property Id.
		/// </summary>
		public static readonly global::System.Guid LayoutEmbeddedPathDomainPropertyId = new global::System.Guid(0xe23ab9af, 0x5d11, 0x41da, 0xb4, 0x7f, 0x43, 0x71, 0x1f, 0xb1, 0x1b, 0x3e);
		
		/// <summary>
		/// Storage for LayoutEmbeddedPath
		/// </summary>
		private global::System.String layoutEmbeddedPathPropertyStorage = "GeneratedCode.ViewModel.WPFApplication.LayoutManagerLayout.xml";
		
		/// <summary>
		/// Gets or sets the value of LayoutEmbeddedPath domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Layout Embedded Path
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/LayoutEmbeddedPath.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/LayoutEmbeddedPath.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/LayoutEmbeddedPath.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("GeneratedCode.ViewModel.WPFApplication.LayoutManagerLayout.xml")]
		[DslModeling::DomainObjectId("e23ab9af-5d11-41da-b47f-43711fb11b3e")]
		public global::System.String LayoutEmbeddedPath
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return layoutEmbeddedPathPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				LayoutEmbeddedPathPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.LayoutEmbeddedPath domain property.
		/// </summary>
		internal sealed partial class LayoutEmbeddedPathPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private LayoutEmbeddedPathPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.LayoutEmbeddedPath domain property value handler.
			/// </summary>
			public static readonly LayoutEmbeddedPathPropertyHandler Instance = new LayoutEmbeddedPathPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.LayoutEmbeddedPath domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return LayoutEmbeddedPathDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.layoutEmbeddedPathPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.layoutEmbeddedPathPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region LayoutDVEmbeddedPath domain property code
		
		/// <summary>
		/// LayoutDVEmbeddedPath domain property Id.
		/// </summary>
		public static readonly global::System.Guid LayoutDVEmbeddedPathDomainPropertyId = new global::System.Guid(0x4c489cb6, 0x965b, 0x4405, 0x9f, 0xff, 0x78, 0x6e, 0xb7, 0x5e, 0xa6, 0xb0);
		
		/// <summary>
		/// Storage for LayoutDVEmbeddedPath
		/// </summary>
		private global::System.String layoutDVEmbeddedPathPropertyStorage = "GeneratedCode.ViewModel.WPFApplication.LayoutManagerDV.txt";
		
		/// <summary>
		/// Gets or sets the value of LayoutDVEmbeddedPath domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Layout DVEmbedded Path
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/LayoutDVEmbeddedPath.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/LayoutDVEmbeddedPath.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/LayoutDVEmbeddedPath.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("GeneratedCode.ViewModel.WPFApplication.LayoutManagerDV.txt")]
		[DslModeling::DomainObjectId("4c489cb6-965b-4405-9fff-786eb75ea6b0")]
		public global::System.String LayoutDVEmbeddedPath
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return layoutDVEmbeddedPathPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				LayoutDVEmbeddedPathPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.LayoutDVEmbeddedPath domain property.
		/// </summary>
		internal sealed partial class LayoutDVEmbeddedPathPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private LayoutDVEmbeddedPathPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.LayoutDVEmbeddedPath domain property value handler.
			/// </summary>
			public static readonly LayoutDVEmbeddedPathPropertyHandler Instance = new LayoutDVEmbeddedPathPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.LayoutDVEmbeddedPath domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return LayoutDVEmbeddedPathDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.layoutDVEmbeddedPathPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.layoutDVEmbeddedPathPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PackageGuid domain property code
		
		/// <summary>
		/// PackageGuid domain property Id.
		/// </summary>
		public static readonly global::System.Guid PackageGuidDomainPropertyId = new global::System.Guid(0x8d67bcee, 0x8dcb, 0x45d2, 0x85, 0xe4, 0xfd, 0x84, 0xc2, 0xc9, 0x3f, 0xd3);
		
		/// <summary>
		/// Storage for PackageGuid
		/// </summary>
		private global::System.Guid packageGuidPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of PackageGuid domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Package Guid
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/PackageGuid.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/PackageGuid.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/PackageGuid.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("8d67bcee-8dcb-45d2-85e4-fd84c2c93fd3")]
		public global::System.Guid PackageGuid
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return packageGuidPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PackageGuidPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.PackageGuid domain property.
		/// </summary>
		internal sealed partial class PackageGuidPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.Guid>
		{
			private PackageGuidPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.PackageGuid domain property value handler.
			/// </summary>
			public static readonly PackageGuidPropertyHandler Instance = new PackageGuidPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.PackageGuid domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PackageGuidDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.packageGuidPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.packageGuidPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CustomExtensionGuid domain property code
		
		/// <summary>
		/// CustomExtensionGuid domain property Id.
		/// </summary>
		public static readonly global::System.Guid CustomExtensionGuidDomainPropertyId = new global::System.Guid(0x6c7e3201, 0xb89a, 0x435e, 0xb1, 0x48, 0xac, 0x44, 0x3a, 0x9b, 0xdd, 0xf8);
		
		/// <summary>
		/// Storage for CustomExtensionGuid
		/// </summary>
		private global::System.Guid customExtensionGuidPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of CustomExtensionGuid domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Custom Extension Guid
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/CustomExtensionGuid.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/CustomExtensionGuid.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/CustomExtensionGuid.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("6c7e3201-b89a-435e-b148-ac443a9bddf8")]
		public global::System.Guid CustomExtensionGuid
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return customExtensionGuidPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CustomExtensionGuidPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.CustomExtensionGuid domain property.
		/// </summary>
		internal sealed partial class CustomExtensionGuidPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.Guid>
		{
			private CustomExtensionGuidPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.CustomExtensionGuid domain property value handler.
			/// </summary>
			public static readonly CustomExtensionGuidPropertyHandler Instance = new CustomExtensionGuidPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.CustomExtensionGuid domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CustomExtensionGuidDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.customExtensionGuidPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.customExtensionGuidPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CustomExtension domain property code
		
		/// <summary>
		/// CustomExtension domain property Id.
		/// </summary>
		public static readonly global::System.Guid CustomExtensionDomainPropertyId = new global::System.Guid(0x197d2b7e, 0x7f9b, 0x4abd, 0xae, 0xea, 0x7f, 0x99, 0xea, 0x8d, 0xdb, 0x35);
		
		/// <summary>
		/// Storage for CustomExtension
		/// </summary>
		private global::System.String customExtensionPropertyStorage = "vsdsl";
		
		/// <summary>
		/// Gets or sets the value of CustomExtension domain property.
		/// This is only relevant for the VS-Plugin DSL.
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/CustomExtension.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModel/CustomExtension.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/CustomExtension.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("vsdsl")]
		[DslModeling::DomainObjectId("197d2b7e-7f9b-4abd-aeea-7f99ea8ddb35")]
		public global::System.String CustomExtension
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return customExtensionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CustomExtensionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.CustomExtension domain property.
		/// </summary>
		internal sealed partial class CustomExtensionPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, global::System.String>
		{
			private CustomExtensionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.CustomExtension domain property value handler.
			/// </summary>
			public static readonly CustomExtensionPropertyHandler Instance = new CustomExtensionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.CustomExtension domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CustomExtensionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.customExtensionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.customExtensionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region LanguageType domain property code
		
		/// <summary>
		/// LanguageType domain property Id.
		/// </summary>
		public static readonly global::System.Guid LanguageTypeDomainPropertyId = new global::System.Guid(0x7ea79e37, 0x95eb, 0x4567, 0x80, 0xdc, 0x75, 0x80, 0x52, 0x7b, 0x60, 0x83);
		
		/// <summary>
		/// Storage for LanguageType
		/// </summary>
		private LanguageType languageTypePropertyStorage = LanguageType.WPFEditor;
		
		/// <summary>
		/// Gets or sets the value of LanguageType domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModel.Language Type
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModel/LanguageType.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModel/LanguageType.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(LanguageType.WPFEditor)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("7ea79e37-95eb-4567-80dc-7580527b6083")]
		public LanguageType LanguageType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return languageTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				LanguageTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModel.LanguageType domain property.
		/// </summary>
		internal sealed partial class LanguageTypePropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelBase, LanguageType>
		{
			private LanguageTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModel.LanguageType domain property value handler.
			/// </summary>
			public static readonly LanguageTypePropertyHandler Instance = new LanguageTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModel.LanguageType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return LanguageTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed LanguageType GetValue(MetaModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.languageTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelBase element, LanguageType newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				LanguageType oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.languageTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DomainTypes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DomainTypes.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.MetaModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainType> DomainTypes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainType>, DomainType>(global::Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.MetaModelDomainRoleId);
			}
		}
		#endregion
		#region Validation opposite domain role accessor
		/// <summary>
		/// Gets or sets Validation.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasValidation.MetaModel
		/// </summary>
		public virtual Validation Validation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasValidation.MetaModelDomainRoleId) as Validation;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasValidation.MetaModelDomainRoleId, value);
			}
		}
		#endregion
		#region AdditionalInformation opposite domain role accessor
		/// <summary>
		/// Gets or sets AdditionalInformation.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.MetaModel
		/// </summary>
		public virtual AdditionalInformation AdditionalInformation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.MetaModelDomainRoleId) as AdditionalInformation;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.MetaModelDomainRoleId, value);
			}
		}
		#endregion
		#region MetaModelLibraries opposite domain role accessor
		
		/// <summary>
		/// Gets a list of MetaModelLibraries.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.MetaModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<MetaModelLibrary> MetaModelLibraries
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<MetaModelLibrary>, MetaModelLibrary>(global::Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.MetaModelDomainRoleId);
			}
		}
		#endregion
		#region View opposite domain role accessor
		/// <summary>
		/// Gets or sets View.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasView.MetaModel
		/// </summary>
		public virtual View View
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasView.MetaModelDomainRoleId) as View;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasView.MetaModelDomainRoleId, value);
			}
		}
		#endregion
		#region ModelContexts opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ModelContexts.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasModelContexts.MetaModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<BaseModelContext> ModelContexts
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<BaseModelContext>, BaseModelContext>(global::Tum.PDE.LanguageDSL.MetaModelHasModelContexts.MetaModelDomainRoleId);
			}
		}
		#endregion
		#region PropertyGridEditors opposite domain role accessor
		
		/// <summary>
		/// Gets a list of PropertyGridEditors.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.MetaModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<PropertyGridEditor> PropertyGridEditors
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<PropertyGridEditor>, PropertyGridEditor>(global::Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.MetaModelDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.BaseModelContext.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.View.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: MetaModelHasView.View
					if (this.View != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.PropertyGridEditor.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.MetaModelLibrary.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DomainType.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.Validation.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: MetaModelHasValidation.Validation
					if (this.Validation != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.AdditionalInformation.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: MetaModelHasAdditionalInformation.AdditionalInformation
					if (this.AdditionalInformation != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.BaseModelContext sourceBaseModelContext1 = sourceElement as global::Tum.PDE.LanguageDSL.BaseModelContext;
			if (sourceBaseModelContext1 != null)
			{
				// Create link for path MetaModelHasModelContexts.ModelContexts
				this.ModelContexts.Add(sourceBaseModelContext1);

				return;
			}
				
			global::Tum.PDE.LanguageDSL.View sourceView2 = sourceElement as global::Tum.PDE.LanguageDSL.View;
			if (sourceView2 != null)
			{
				// Create link for path MetaModelHasView.View
				this.View = sourceView2;

				return;
			}
				
			global::Tum.PDE.LanguageDSL.PropertyGridEditor sourcePropertyGridEditor3 = sourceElement as global::Tum.PDE.LanguageDSL.PropertyGridEditor;
			if (sourcePropertyGridEditor3 != null)
			{
				// Create link for path MetaModelHasPropertyGridEditors.PropertyGridEditors
				this.PropertyGridEditors.Add(sourcePropertyGridEditor3);

				return;
			}
				
			global::Tum.PDE.LanguageDSL.MetaModelLibrary sourceMetaModelLibrary4 = sourceElement as global::Tum.PDE.LanguageDSL.MetaModelLibrary;
			if (sourceMetaModelLibrary4 != null)
			{
				// Create link for path MetaModelHasMetaModelLibraries.MetaModelLibraries
				this.MetaModelLibraries.Add(sourceMetaModelLibrary4);

				return;
			}
				
			global::Tum.PDE.LanguageDSL.DomainType sourceDomainType5 = sourceElement as global::Tum.PDE.LanguageDSL.DomainType;
			if (sourceDomainType5 != null)
			{
				// Create link for path MetaModelHasDomainTypes.DomainTypes
				this.DomainTypes.Add(sourceDomainType5);

				return;
			}
				
			global::Tum.PDE.LanguageDSL.Validation sourceValidation6 = sourceElement as global::Tum.PDE.LanguageDSL.Validation;
			if (sourceValidation6 != null)
			{
				// Create link for path MetaModelHasValidation.Validation
				this.Validation = sourceValidation6;

				return;
			}
				
			global::Tum.PDE.LanguageDSL.AdditionalInformation sourceAdditionalInformation7 = sourceElement as global::Tum.PDE.LanguageDSL.AdditionalInformation;
			if (sourceAdditionalInformation7 != null)
			{
				// Create link for path MetaModelHasAdditionalInformation.AdditionalInformation
				this.AdditionalInformation = sourceAdditionalInformation7;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.BaseModelContext sourceBaseModelContext1 = sourceElement as global::Tum.PDE.LanguageDSL.BaseModelContext;
			if (sourceBaseModelContext1 != null)
			{
				// Delete link for path MetaModelHasModelContexts.ModelContexts
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.MetaModelHasModelContexts.GetLinks((global::Tum.PDE.LanguageDSL.MetaModel)this, sourceBaseModelContext1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.MetaModelHasModelContexts.MetaModelDomainRoleId, global::Tum.PDE.LanguageDSL.MetaModelHasModelContexts.BaseModelContextDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.View sourceView2 = sourceElement as global::Tum.PDE.LanguageDSL.View;
			if (sourceView2 != null)
			{
				// Delete link for path MetaModelHasView.View
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.MetaModelHasView.GetLinks((global::Tum.PDE.LanguageDSL.MetaModel)this, sourceView2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.MetaModelHasView.MetaModelDomainRoleId, global::Tum.PDE.LanguageDSL.MetaModelHasView.ViewDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.PropertyGridEditor sourcePropertyGridEditor3 = sourceElement as global::Tum.PDE.LanguageDSL.PropertyGridEditor;
			if (sourcePropertyGridEditor3 != null)
			{
				// Delete link for path MetaModelHasPropertyGridEditors.PropertyGridEditors
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.GetLinks((global::Tum.PDE.LanguageDSL.MetaModel)this, sourcePropertyGridEditor3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.MetaModelDomainRoleId, global::Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.PropertyGridEditorDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.MetaModelLibrary sourceMetaModelLibrary4 = sourceElement as global::Tum.PDE.LanguageDSL.MetaModelLibrary;
			if (sourceMetaModelLibrary4 != null)
			{
				// Delete link for path MetaModelHasMetaModelLibraries.MetaModelLibraries
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.GetLinks((global::Tum.PDE.LanguageDSL.MetaModel)this, sourceMetaModelLibrary4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.MetaModelDomainRoleId, global::Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.MetaModelLibraryDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.DomainType sourceDomainType5 = sourceElement as global::Tum.PDE.LanguageDSL.DomainType;
			if (sourceDomainType5 != null)
			{
				// Delete link for path MetaModelHasDomainTypes.DomainTypes
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.GetLinks((global::Tum.PDE.LanguageDSL.MetaModel)this, sourceDomainType5))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.MetaModelDomainRoleId, global::Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.DomainTypeDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.Validation sourceValidation6 = sourceElement as global::Tum.PDE.LanguageDSL.Validation;
			if (sourceValidation6 != null)
			{
				// Delete link for path MetaModelHasValidation.Validation
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.MetaModelHasValidation.GetLinks((global::Tum.PDE.LanguageDSL.MetaModel)this, sourceValidation6))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.MetaModelHasValidation.MetaModelDomainRoleId, global::Tum.PDE.LanguageDSL.MetaModelHasValidation.ValidationDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.AdditionalInformation sourceAdditionalInformation7 = sourceElement as global::Tum.PDE.LanguageDSL.AdditionalInformation;
			if (sourceAdditionalInformation7 != null)
			{
				// Delete link for path MetaModelHasAdditionalInformation.AdditionalInformation
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.GetLinks((global::Tum.PDE.LanguageDSL.MetaModel)this, sourceAdditionalInformation7))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.MetaModelDomainRoleId, global::Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.AdditionalInformationDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass MetaModel
	/// Description for Tum.PDE.LanguageDSL.MetaModel
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class MetaModel : MetaModelBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MetaModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MetaModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass DomainElement
	/// Description for Tum.PDE.LanguageDSL.DomainElement
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainElement.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainElement.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("a7d39201-2729-4434-a67f-89643bfe6c3e")]
	public abstract partial class DomainElement : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa7d39201, 0x2729, 0x4434, 0xa6, 0x7f, 0x89, 0x64, 0x3b, 0xfe, 0x6c, 0x3e);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DomainElement(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass NamedDomainElement
	/// Description for Tum.PDE.LanguageDSL.NamedDomainElement
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.NamedDomainElement.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.NamedDomainElement.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("ec2ab13c-ad0b-41f1-acda-a7833553b261")]
	public abstract partial class NamedDomainElement : DomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// NamedDomainElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xec2ab13c, 0xad0b, 0x41f1, 0xac, 0xda, 0xa7, 0x83, 0x35, 0x53, 0xb2, 0x61);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected NamedDomainElement(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0x40c61eba, 0xbc04, 0x4d16, 0xa8, 0x9b, 0x47, 0x1c, 0x5c, 0x5c, 0x03, 0xc0);
		
		/// <summary>
		/// Storage for DisplayName
		/// </summary>
		private global::System.String displayNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// Description for Tum.PDE.LanguageDSL.NamedDomainElement.Display Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.NamedDomainElement/DisplayName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.NamedDomainElement/DisplayName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.NamedDomainElement/DisplayName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("40c61eba-bc04-4d16-a89b-471c5c5c03c0")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return displayNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DisplayNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the NamedDomainElement.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::DomainPropertyValueHandler<NamedDomainElement, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the NamedDomainElement.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the NamedDomainElement.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(NamedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.displayNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(NamedDomainElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.displayNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsDisplayNameTracking domain property code
		
		/// <summary>
		/// IsDisplayNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsDisplayNameTrackingDomainPropertyId = new global::System.Guid(0x1860af85, 0x15c6, 0x49bb, 0xbd, 0xde, 0x2d, 0x0d, 0x14, 0x23, 0x64, 0x96);
		
		/// <summary>
		/// Storage for IsDisplayNameTracking
		/// </summary>
		private TrackingEnum isDisplayNameTrackingPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsDisplayNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.NamedDomainElement.Is Display Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.NamedDomainElement/IsDisplayNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.NamedDomainElement/IsDisplayNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.NamedDomainElement/IsDisplayNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("1860af85-15c6-49bb-bdde-2d0d14236496")]
		public TrackingEnum IsDisplayNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isDisplayNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsDisplayNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the NamedDomainElement.IsDisplayNameTracking domain property.
		/// </summary>
		internal sealed partial class IsDisplayNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<NamedDomainElement, TrackingEnum>
		{
			private IsDisplayNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the NamedDomainElement.IsDisplayNameTracking domain property value handler.
			/// </summary>
			public static readonly IsDisplayNameTrackingPropertyHandler Instance = new IsDisplayNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the NamedDomainElement.IsDisplayNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsDisplayNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(NamedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isDisplayNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(NamedDomainElement element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isDisplayNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0x02323aec, 0x38b2, 0x4f36, 0x8e, 0x7f, 0x00, 0x19, 0x9d, 0xa6, 0xd2, 0xab);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for Tum.PDE.LanguageDSL.NamedDomainElement.Description
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.NamedDomainElement/Description.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.NamedDomainElement/Description.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.NamedDomainElement/Description.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("02323aec-38b2-4f36-8e7f-00199da6d2ab")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the NamedDomainElement.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<NamedDomainElement, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the NamedDomainElement.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the NamedDomainElement.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(NamedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(NamedDomainElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x29d0bfa5, 0x62ea, 0x426d, 0x82, 0x67, 0xd0, 0x70, 0xbe, 0x05, 0x74, 0x22);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.NamedDomainElement.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.NamedDomainElement/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.NamedDomainElement/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.NamedDomainElement/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("29d0bfa5-62ea-426d-8267-d070be057422")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the NamedDomainElement.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<NamedDomainElement, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the NamedDomainElement.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the NamedDomainElement.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(NamedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(NamedDomainElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass AttributedDomainElement
	/// Description for Tum.PDE.LanguageDSL.AttributedDomainElement
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.AttributedDomainElement.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AttributedDomainElement.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e088f1ce-75dc-4c05-a45a-6fa6a70d873c")]
	public abstract partial class AttributedDomainElement : GeneratedDomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AttributedDomainElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe088f1ce, 0x75dc, 0x4c05, 0xa4, 0x5a, 0x6f, 0xa6, 0xa7, 0x0d, 0x87, 0x3c);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected AttributedDomainElement(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region SerializationName domain property code
		
		/// <summary>
		/// SerializationName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationNameDomainPropertyId = new global::System.Guid(0x82f19fe6, 0xa238, 0x42d9, 0xb9, 0x3e, 0xba, 0x2b, 0x15, 0xf7, 0x79, 0x87);
		
		/// <summary>
		/// Storage for SerializationName
		/// </summary>
		private global::System.String serializationNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SerializationName domain property.
		/// Description for Tum.PDE.LanguageDSL.AttributedDomainElement.Serialization Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.AttributedDomainElement/SerializationName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.AttributedDomainElement/SerializationName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AttributedDomainElement/SerializationName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("82f19fe6-a238-42d9-b93e-ba2b15f77987")]
		public global::System.String SerializationName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AttributedDomainElement.SerializationName domain property.
		/// </summary>
		internal sealed partial class SerializationNamePropertyHandler : DslModeling::DomainPropertyValueHandler<AttributedDomainElement, global::System.String>
		{
			private SerializationNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AttributedDomainElement.SerializationName domain property value handler.
			/// </summary>
			public static readonly SerializationNamePropertyHandler Instance = new SerializationNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AttributedDomainElement.SerializationName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AttributedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AttributedDomainElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsSerializationNameTracking domain property code
		
		/// <summary>
		/// IsSerializationNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsSerializationNameTrackingDomainPropertyId = new global::System.Guid(0xcdad5669, 0x46d0, 0x4fcf, 0xab, 0x58, 0x41, 0x37, 0x07, 0x20, 0x64, 0x96);
		
		/// <summary>
		/// Storage for IsSerializationNameTracking
		/// </summary>
		private TrackingEnum isSerializationNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsSerializationNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.AttributedDomainElement.Is Serialization
		/// Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.AttributedDomainElement/IsSerializationNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.AttributedDomainElement/IsSerializationNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AttributedDomainElement/IsSerializationNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("cdad5669-46d0-4fcf-ab58-413707206496")]
		public TrackingEnum IsSerializationNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isSerializationNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsSerializationNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AttributedDomainElement.IsSerializationNameTracking domain property.
		/// </summary>
		internal sealed partial class IsSerializationNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<AttributedDomainElement, TrackingEnum>
		{
			private IsSerializationNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AttributedDomainElement.IsSerializationNameTracking domain property value handler.
			/// </summary>
			public static readonly IsSerializationNameTrackingPropertyHandler Instance = new IsSerializationNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AttributedDomainElement.IsSerializationNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsSerializationNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(AttributedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isSerializationNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AttributedDomainElement element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isSerializationNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Properties opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Properties.
		/// Description for
		/// Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.DomainElement
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainProperty> Properties
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainProperty>, DomainProperty>(global::Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.DomainElementDomainRoleId);
			}
		}
		#endregion
		#region RolesPlayed opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RolesPlayed.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainRoleReferencesRolePlayer.AttributedDomainElement
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainRole> RolesPlayed
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainRole>, DomainRole>(global::Tum.PDE.LanguageDSL.DomainRoleReferencesRolePlayer.AttributedDomainElementDomainRoleId);
			}
		}
		#endregion
		#region DomainModelTreeNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DomainModelTreeNodes.
		/// Description for
		/// Tum.PDE.LanguageDSL.TreeNodeReferencesDomainElement.AttributedDomainElement
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<TreeNode> DomainModelTreeNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<TreeNode>, TreeNode>(global::Tum.PDE.LanguageDSL.TreeNodeReferencesDomainElement.AttributedDomainElementDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DomainProperty.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.DomainProperty sourceDomainProperty1 = sourceElement as global::Tum.PDE.LanguageDSL.DomainProperty;
			if (sourceDomainProperty1 != null)
			{
				// Create link for path AttributedDomainElementHasProperties.Properties
				this.Properties.Add(sourceDomainProperty1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.DomainProperty sourceDomainProperty1 = sourceElement as global::Tum.PDE.LanguageDSL.DomainProperty;
			if (sourceDomainProperty1 != null)
			{
				// Delete link for path AttributedDomainElementHasProperties.Properties
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.GetLinks((global::Tum.PDE.LanguageDSL.AttributedDomainElement)this, sourceDomainProperty1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.DomainElementDomainRoleId, global::Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.DomainPropertyDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass DomainProperty
	/// Description for Tum.PDE.LanguageDSL.DomainProperty
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[global::System.ComponentModel.TypeDescriptionProvider(typeof(DomainPropertyTypeDescriptionProvider))]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("d3d48011-2bc5-4e02-89a2-3150d8f3bdb6")]
	public partial class DomainProperty : DomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainProperty domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd3d48011, 0x2bc5, 0x4e02, 0x89, 0xa2, 0x31, 0x50, 0xd8, 0xf3, 0xbd, 0xb6);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainProperty(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainProperty(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x011eafd4, 0xf427, 0x4bd9, 0x84, 0x34, 0xfd, 0xaa, 0x5e, 0x33, 0xa3, 0x6a);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("011eafd4-f427-4bd9-8434-fdaa5e33a36a")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsElementName domain property code
		
		/// <summary>
		/// IsElementName domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsElementNameDomainPropertyId = new global::System.Guid(0xa60ea574, 0x66fd, 0x4f3d, 0x81, 0x72, 0x17, 0x93, 0xef, 0xa4, 0x3a, 0xfa);
		
		/// <summary>
		/// Storage for IsElementName
		/// </summary>
		private global::System.Boolean isElementNamePropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsElementName domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Is Element Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/IsElementName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/IsElementName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/IsElementName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a60ea574-66fd-4f3d-8172-1793efa43afa")]
		public global::System.Boolean IsElementName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isElementNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsElementNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.IsElementName domain property.
		/// </summary>
		internal sealed partial class IsElementNamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.Boolean>
		{
			private IsElementNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.IsElementName domain property value handler.
			/// </summary>
			public static readonly IsElementNamePropertyHandler Instance = new IsElementNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.IsElementName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsElementNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isElementNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isElementNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsRequired domain property code
		
		/// <summary>
		/// IsRequired domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsRequiredDomainPropertyId = new global::System.Guid(0xedeeac86, 0x1648, 0x4eda, 0x92, 0x24, 0x2d, 0x4e, 0x06, 0x0a, 0xa1, 0x91);
		
		/// <summary>
		/// Storage for IsRequired
		/// </summary>
		private global::System.Boolean isRequiredPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsRequired domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Is Required
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/IsRequired.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/IsRequired.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/IsRequired.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("edeeac86-1648-4eda-9224-2d4e060aa191")]
		public global::System.Boolean IsRequired
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isRequiredPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsRequiredPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.IsRequired domain property.
		/// </summary>
		internal sealed partial class IsRequiredPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.Boolean>
		{
			private IsRequiredPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.IsRequired domain property value handler.
			/// </summary>
			public static readonly IsRequiredPropertyHandler Instance = new IsRequiredPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.IsRequired domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsRequiredDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isRequiredPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isRequiredPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0xfc123db7, 0x231d, 0x4dc8, 0xaa, 0xd5, 0xe3, 0xa1, 0x87, 0xbc, 0x00, 0x36);
		
		/// <summary>
		/// Storage for DisplayName
		/// </summary>
		private global::System.String displayNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Display Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/DisplayName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/DisplayName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/DisplayName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("fc123db7-231d-4dc8-aad5-e3a187bc0036")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return displayNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DisplayNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.displayNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.displayNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0x4b36beef, 0x2ff1, 0x45d2, 0x8d, 0xf8, 0x20, 0x41, 0x62, 0xaa, 0x38, 0xa6);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Description
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/Description.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/Description.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/Description.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("4b36beef-2ff1-45d2-8df8-204162aa38a6")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DefaultValue domain property code
		
		/// <summary>
		/// DefaultValue domain property Id.
		/// </summary>
		public static readonly global::System.Guid DefaultValueDomainPropertyId = new global::System.Guid(0xf1066200, 0x22e0, 0x44b7, 0xaa, 0xb3, 0x12, 0xa9, 0x7e, 0x2d, 0xb9, 0x84);
		
		/// <summary>
		/// Storage for DefaultValue
		/// </summary>
		private global::System.String defaultValuePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of DefaultValue domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Default Value
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/DefaultValue.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/DefaultValue.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/DefaultValue.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f1066200-22e0-44b7-aab3-12a97e2db984")]
		public global::System.String DefaultValue
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return defaultValuePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DefaultValuePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.DefaultValue domain property.
		/// </summary>
		internal sealed partial class DefaultValuePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.String>
		{
			private DefaultValuePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.DefaultValue domain property value handler.
			/// </summary>
			public static readonly DefaultValuePropertyHandler Instance = new DefaultValuePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.DefaultValue domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DefaultValueDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.defaultValuePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.defaultValuePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Category domain property code
		
		/// <summary>
		/// Category domain property Id.
		/// </summary>
		public static readonly global::System.Guid CategoryDomainPropertyId = new global::System.Guid(0x0646a058, 0x6c73, 0x4ec5, 0xb5, 0xc3, 0xc6, 0x47, 0xf9, 0xb9, 0xb4, 0xbb);
		
		/// <summary>
		/// Storage for Category
		/// </summary>
		private global::System.String categoryPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Category domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Category
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/Category.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/Category.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/Category.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0646a058-6c73-4ec5-b5c3-c647f9b9b4bb")]
		public global::System.String Category
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return categoryPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CategoryPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.Category domain property.
		/// </summary>
		internal sealed partial class CategoryPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.String>
		{
			private CategoryPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.Category domain property value handler.
			/// </summary>
			public static readonly CategoryPropertyHandler Instance = new CategoryPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.Category domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CategoryDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.categoryPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.categoryPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsBrowsable domain property code
		
		/// <summary>
		/// IsBrowsable domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsBrowsableDomainPropertyId = new global::System.Guid(0xafab82e3, 0xbba3, 0x47a2, 0x8c, 0x10, 0xf1, 0xd2, 0x1b, 0x83, 0x8c, 0x8e);
		
		/// <summary>
		/// Storage for IsBrowsable
		/// </summary>
		private global::System.Boolean isBrowsablePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsBrowsable domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Is Browsable
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/IsBrowsable.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/IsBrowsable.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/IsBrowsable.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("afab82e3-bba3-47a2-8c10-f1d21b838c8e")]
		public global::System.Boolean IsBrowsable
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isBrowsablePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsBrowsablePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.IsBrowsable domain property.
		/// </summary>
		internal sealed partial class IsBrowsablePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.Boolean>
		{
			private IsBrowsablePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.IsBrowsable domain property value handler.
			/// </summary>
			public static readonly IsBrowsablePropertyHandler Instance = new IsBrowsablePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.IsBrowsable domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsBrowsableDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isBrowsablePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isBrowsablePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GetterAccessModifier domain property code
		
		/// <summary>
		/// GetterAccessModifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid GetterAccessModifierDomainPropertyId = new global::System.Guid(0x6665911e, 0x04a9, 0x4b53, 0xa9, 0x87, 0x20, 0x0e, 0x0d, 0xd8, 0x70, 0xf7);
		
		/// <summary>
		/// Storage for GetterAccessModifier
		/// </summary>
		private AccessModifier getterAccessModifierPropertyStorage = AccessModifier.Public;
		
		/// <summary>
		/// Gets or sets the value of GetterAccessModifier domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Getter Access Modifier
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/GetterAccessModifier.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/GetterAccessModifier.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/GetterAccessModifier.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AccessModifier.Public)]
		[DslModeling::DomainObjectId("6665911e-04a9-4b53-a987-200e0dd870f7")]
		public AccessModifier GetterAccessModifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return getterAccessModifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GetterAccessModifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.GetterAccessModifier domain property.
		/// </summary>
		internal sealed partial class GetterAccessModifierPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, AccessModifier>
		{
			private GetterAccessModifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.GetterAccessModifier domain property value handler.
			/// </summary>
			public static readonly GetterAccessModifierPropertyHandler Instance = new GetterAccessModifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.GetterAccessModifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GetterAccessModifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AccessModifier GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.getterAccessModifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, AccessModifier newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AccessModifier oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.getterAccessModifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SetterAccessModifier domain property code
		
		/// <summary>
		/// SetterAccessModifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid SetterAccessModifierDomainPropertyId = new global::System.Guid(0xf9a95e42, 0xdd8e, 0x46b9, 0xb8, 0xd5, 0x7a, 0x5b, 0xc6, 0x3a, 0xe9, 0x07);
		
		/// <summary>
		/// Storage for SetterAccessModifier
		/// </summary>
		private AccessModifier setterAccessModifierPropertyStorage = AccessModifier.Public;
		
		/// <summary>
		/// Gets or sets the value of SetterAccessModifier domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Setter Access Modifier
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/SetterAccessModifier.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/SetterAccessModifier.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/SetterAccessModifier.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AccessModifier.Public)]
		[DslModeling::DomainObjectId("f9a95e42-dd8e-46b9-b8d5-7a5bc63ae907")]
		public AccessModifier SetterAccessModifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return setterAccessModifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SetterAccessModifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.SetterAccessModifier domain property.
		/// </summary>
		internal sealed partial class SetterAccessModifierPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, AccessModifier>
		{
			private SetterAccessModifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.SetterAccessModifier domain property value handler.
			/// </summary>
			public static readonly SetterAccessModifierPropertyHandler Instance = new SetterAccessModifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.SetterAccessModifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SetterAccessModifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AccessModifier GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.setterAccessModifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, AccessModifier newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AccessModifier oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.setterAccessModifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsDisplayNameTracking domain property code
		
		/// <summary>
		/// IsDisplayNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsDisplayNameTrackingDomainPropertyId = new global::System.Guid(0xe15b49f3, 0x2f0b, 0x4ea9, 0xbf, 0x44, 0x96, 0x30, 0x29, 0x5d, 0x95, 0x57);
		
		/// <summary>
		/// Storage for IsDisplayNameTracking
		/// </summary>
		private TrackingEnum isDisplayNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsDisplayNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Is Display Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/IsDisplayNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/IsDisplayNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/IsDisplayNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("e15b49f3-2f0b-4ea9-bf44-9630295d9557")]
		public TrackingEnum IsDisplayNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isDisplayNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsDisplayNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.IsDisplayNameTracking domain property.
		/// </summary>
		internal sealed partial class IsDisplayNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, TrackingEnum>
		{
			private IsDisplayNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.IsDisplayNameTracking domain property value handler.
			/// </summary>
			public static readonly IsDisplayNameTrackingPropertyHandler Instance = new IsDisplayNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.IsDisplayNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsDisplayNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isDisplayNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isDisplayNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationName domain property code
		
		/// <summary>
		/// SerializationName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationNameDomainPropertyId = new global::System.Guid(0x15bccd7b, 0xeb87, 0x4683, 0xa7, 0x22, 0xb3, 0x15, 0xa6, 0x6a, 0xc9, 0x23);
		
		/// <summary>
		/// Storage for SerializationName
		/// </summary>
		private global::System.String serializationNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SerializationName domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Serialization Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/SerializationName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/SerializationName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/SerializationName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("15bccd7b-eb87-4683-a722-b315a66ac923")]
		public global::System.String SerializationName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.SerializationName domain property.
		/// </summary>
		internal sealed partial class SerializationNamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.String>
		{
			private SerializationNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.SerializationName domain property value handler.
			/// </summary>
			public static readonly SerializationNamePropertyHandler Instance = new SerializationNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.SerializationName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsSerializationNameTracking domain property code
		
		/// <summary>
		/// IsSerializationNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsSerializationNameTrackingDomainPropertyId = new global::System.Guid(0xacc470bf, 0x9d84, 0x4d89, 0x8b, 0xf7, 0x41, 0xe0, 0xf3, 0x32, 0xe9, 0xcc);
		
		/// <summary>
		/// Storage for IsSerializationNameTracking
		/// </summary>
		private TrackingEnum isSerializationNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsSerializationNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Is Serialization Name
		/// Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/IsSerializationNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/IsSerializationNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/IsSerializationNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("acc470bf-9d84-4d89-8bf7-41e0f332e9cc")]
		public TrackingEnum IsSerializationNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isSerializationNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsSerializationNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.IsSerializationNameTracking domain property.
		/// </summary>
		internal sealed partial class IsSerializationNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, TrackingEnum>
		{
			private IsSerializationNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.IsSerializationNameTracking domain property value handler.
			/// </summary>
			public static readonly IsSerializationNameTrackingPropertyHandler Instance = new IsSerializationNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.IsSerializationNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsSerializationNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isSerializationNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isSerializationNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationRepresentationType domain property code
		
		/// <summary>
		/// SerializationRepresentationType domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationRepresentationTypeDomainPropertyId = new global::System.Guid(0x3d056f9b, 0xd398, 0x4cdb, 0xba, 0x57, 0xd8, 0x36, 0x05, 0x73, 0x7c, 0xae);
		
		/// <summary>
		/// Storage for SerializationRepresentationType
		/// </summary>
		private SerializationRepresentationType serializationRepresentationTypePropertyStorage = SerializationRepresentationType.Attribute;
		
		/// <summary>
		/// Gets or sets the value of SerializationRepresentationType domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Serialization Type
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/SerializationRepresentationType.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/SerializationRepresentationType.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/SerializationRepresentationType.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(SerializationRepresentationType.Attribute)]
		[DslModeling::DomainObjectId("3d056f9b-d398-4cdb-ba57-d83605737cae")]
		public SerializationRepresentationType SerializationRepresentationType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationRepresentationTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationRepresentationTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.SerializationRepresentationType domain property.
		/// </summary>
		internal sealed partial class SerializationRepresentationTypePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, SerializationRepresentationType>
		{
			private SerializationRepresentationTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.SerializationRepresentationType domain property value handler.
			/// </summary>
			public static readonly SerializationRepresentationTypePropertyHandler Instance = new SerializationRepresentationTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.SerializationRepresentationType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationRepresentationTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed SerializationRepresentationType GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationRepresentationTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, SerializationRepresentationType newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				SerializationRepresentationType oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationRepresentationTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsUIReadOnly domain property code
		
		/// <summary>
		/// IsUIReadOnly domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsUIReadOnlyDomainPropertyId = new global::System.Guid(0xee7a0d53, 0x6273, 0x406c, 0xb3, 0xbe, 0xa4, 0xc3, 0xab, 0xe3, 0xda, 0x4a);
		
		/// <summary>
		/// Storage for IsUIReadOnly
		/// </summary>
		private global::System.Boolean isUIReadOnlyPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsUIReadOnly domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Is UI Read Only
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/IsUIReadOnly.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/IsUIReadOnly.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/IsUIReadOnly.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ee7a0d53-6273-406c-b3be-a4c3abe3da4a")]
		public global::System.Boolean IsUIReadOnly
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isUIReadOnlyPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsUIReadOnlyPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.IsUIReadOnly domain property.
		/// </summary>
		internal sealed partial class IsUIReadOnlyPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.Boolean>
		{
			private IsUIReadOnlyPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.IsUIReadOnly domain property value handler.
			/// </summary>
			public static readonly IsUIReadOnlyPropertyHandler Instance = new IsUIReadOnlyPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.IsUIReadOnly domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsUIReadOnlyDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isUIReadOnlyPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isUIReadOnlyPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropertyKind domain property code
		
		/// <summary>
		/// PropertyKind domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropertyKindDomainPropertyId = new global::System.Guid(0xbb95b928, 0xf230, 0x48c1, 0x99, 0x6d, 0xee, 0xec, 0x47, 0x0a, 0xcd, 0x52);
		
		/// <summary>
		/// Storage for PropertyKind
		/// </summary>
		private PropertyKind propertyKindPropertyStorage = PropertyKind.Normal;
		
		/// <summary>
		/// Gets or sets the value of PropertyKind domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Property Kind
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/PropertyKind.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/PropertyKind.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/PropertyKind.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(PropertyKind.Normal)]
		[DslModeling::DomainObjectId("bb95b928-f230-48c1-996d-eeec470acd52")]
		public PropertyKind PropertyKind
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propertyKindPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropertyKindPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.PropertyKind domain property.
		/// </summary>
		internal sealed partial class PropertyKindPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, PropertyKind>
		{
			private PropertyKindPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.PropertyKind domain property value handler.
			/// </summary>
			public static readonly PropertyKindPropertyHandler Instance = new PropertyKindPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.PropertyKind domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropertyKindDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed PropertyKind GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propertyKindPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, PropertyKind newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				PropertyKind oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propertyKindPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsCustomCreated domain property code
		
		/// <summary>
		/// IsCustomCreated domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsCustomCreatedDomainPropertyId = new global::System.Guid(0x03ee8d12, 0xddaa, 0x4b3f, 0x83, 0x15, 0x65, 0xa7, 0x3d, 0x81, 0xde, 0x76);
		
		/// <summary>
		/// Storage for IsCustomCreated
		/// </summary>
		private global::System.Boolean isCustomCreatedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsCustomCreated domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainProperty.Is Custom Created
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainProperty/IsCustomCreated.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainProperty/IsCustomCreated.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainProperty/IsCustomCreated.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("03ee8d12-ddaa-4b3f-8315-65a73d81de76")]
		public global::System.Boolean IsCustomCreated
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isCustomCreatedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsCustomCreatedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainProperty.IsCustomCreated domain property.
		/// </summary>
		internal sealed partial class IsCustomCreatedPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainProperty, global::System.Boolean>
		{
			private IsCustomCreatedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainProperty.IsCustomCreated domain property value handler.
			/// </summary>
			public static readonly IsCustomCreatedPropertyHandler Instance = new IsCustomCreatedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainProperty.IsCustomCreated domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsCustomCreatedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isCustomCreatedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainProperty element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isCustomCreatedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Element opposite domain role accessor
		/// <summary>
		/// Gets or sets Element.
		/// Description for
		/// Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.DomainProperty
		/// </summary>
		public virtual AttributedDomainElement Element
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.DomainPropertyDomainRoleId) as AttributedDomainElement;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.DomainPropertyDomainRoleId, value);
			}
		}
		#endregion
		#region Type opposite domain role accessor
		/// <summary>
		/// Gets or sets Type.
		/// Description for Tum.PDE.LanguageDSL.DomainPropertyReferencesType.DomainProperty
		/// </summary>
		public virtual DomainType Type
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainPropertyReferencesType.DomainPropertyDomainRoleId) as DomainType;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainPropertyReferencesType.DomainPropertyDomainRoleId, value);
			}
		}
		#endregion
		#region SerializedDomainProperty opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializedDomainProperty.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedDomainPropertyReferencesDomainProperty.DomainProperty
		/// </summary>
		public virtual SerializedDomainProperty SerializedDomainProperty
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainPropertyReferencesDomainProperty.DomainPropertyDomainRoleId) as SerializedDomainProperty;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainPropertyReferencesDomainProperty.DomainPropertyDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass DomainRelationship
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRelationship.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[global::System.ComponentModel.TypeDescriptionProvider(typeof(DomainRelationshipBaseTypeDescriptionProvider))]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("646849d9-dee7-4dd7-afeb-4b60bb94584a")]
	public abstract partial class DomainRelationshipBase : AttributedDomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainRelationship domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x646849d9, 0xdee7, 0x4dd7, 0xaf, 0xeb, 0x4b, 0x60, 0xbb, 0x94, 0x58, 0x4a);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DomainRelationshipBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsNameTracking domain property code
		
		/// <summary>
		/// IsNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsNameTrackingDomainPropertyId = new global::System.Guid(0x6a2b2a62, 0x0c08, 0x4481, 0xa1, 0xe6, 0xcf, 0xfe, 0x79, 0xf8, 0x60, 0x19);
		
		/// <summary>
		/// Storage for IsNameTracking
		/// </summary>
		private TrackingEnum isNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRelationship.Is Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRelationship/IsNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRelationship/IsNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRelationship/IsNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("6a2b2a62-0c08-4481-a1e6-cffe79f86019")]
		public TrackingEnum IsNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRelationship.IsNameTracking domain property.
		/// </summary>
		internal sealed partial class IsNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRelationshipBase, TrackingEnum>
		{
			private IsNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRelationship.IsNameTracking domain property value handler.
			/// </summary>
			public static readonly IsNameTrackingPropertyHandler Instance = new IsNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRelationship.IsNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(DomainRelationshipBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRelationshipBase element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region AllowsDuplicates domain property code
		
		/// <summary>
		/// AllowsDuplicates domain property Id.
		/// </summary>
		public static readonly global::System.Guid AllowsDuplicatesDomainPropertyId = new global::System.Guid(0x1a3b837e, 0xfc87, 0x4702, 0x83, 0x95, 0x65, 0xc3, 0x6a, 0xf9, 0xba, 0x02);
		
		/// <summary>
		/// Storage for AllowsDuplicates
		/// </summary>
		private global::System.Boolean allowsDuplicatesPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of AllowsDuplicates domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRelationship.Allows Duplicates
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRelationship/AllowsDuplicates.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRelationship/AllowsDuplicates.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRelationship/AllowsDuplicates.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1a3b837e-fc87-4702-8395-65c36af9ba02")]
		public global::System.Boolean AllowsDuplicates
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return allowsDuplicatesPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				AllowsDuplicatesPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRelationship.AllowsDuplicates domain property.
		/// </summary>
		internal sealed partial class AllowsDuplicatesPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRelationshipBase, global::System.Boolean>
		{
			private AllowsDuplicatesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRelationship.AllowsDuplicates domain property value handler.
			/// </summary>
			public static readonly AllowsDuplicatesPropertyHandler Instance = new AllowsDuplicatesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRelationship.AllowsDuplicates domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AllowsDuplicatesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainRelationshipBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.allowsDuplicatesPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRelationshipBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.allowsDuplicatesPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Roles opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Roles.
		/// Description for Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.Relationship
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainRole> Roles
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainRole>, DomainRole>(global::Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.RelationshipDomainRoleId);
			}
		}
		#endregion
		#region Source opposite domain role accessor
		/// <summary>
		/// Gets or sets Source.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainRelationshipReferencesSource.Relationship
		/// </summary>
		public virtual DomainRole Source
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRelationshipReferencesSource.RelationshipDomainRoleId) as DomainRole;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRelationshipReferencesSource.RelationshipDomainRoleId, value);
			}
		}
		#endregion
		#region Target opposite domain role accessor
		/// <summary>
		/// Gets or sets Target.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainRelationshipReferencesTarget.Relationship
		/// </summary>
		public virtual DomainRole Target
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRelationshipReferencesTarget.RelationshipDomainRoleId) as DomainRole;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRelationshipReferencesTarget.RelationshipDomainRoleId, value);
			}
		}
		#endregion
		#region BaseRelationship opposite domain role accessor
		/// <summary>
		/// Gets or sets BaseRelationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainRelationshipReferencesBaseRelationship.DerivedRelationship
		/// </summary>
		public virtual DomainRelationship BaseRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRelationshipReferencesBaseRelationship.DerivedRelationshipDomainRoleId) as DomainRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRelationshipReferencesBaseRelationship.DerivedRelationshipDomainRoleId, value);
			}
		}
		#endregion
		#region DerivedRelationships opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DerivedRelationships.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainRelationshipReferencesBaseRelationship.BaseRelationship
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainRelationship> DerivedRelationships
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainRelationship>, DomainRelationship>(global::Tum.PDE.LanguageDSL.DomainRelationshipReferencesBaseRelationship.BaseRelationshipDomainRoleId);
			}
		}
		#endregion
		#region EmbeddingRSNode opposite domain role accessor
		/// <summary>
		/// Gets or sets EmbeddingRSNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesRelationship.DomainRelationship
		/// </summary>
		public virtual EmbeddingRSNode EmbeddingRSNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesRelationship.DomainRelationshipDomainRoleId) as EmbeddingRSNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesRelationship.DomainRelationshipDomainRoleId, value);
			}
		}
		#endregion
		#region ModelContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ModelContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.DomainRelationship
		/// </summary>
		public virtual LibraryModelContext ModelContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.DomainRelationshipDomainRoleId) as LibraryModelContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.DomainRelationshipDomainRoleId, value);
			}
		}
		#endregion
		#region RelationshipShapeClasses opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RelationshipShapeClasses.
		/// Description for
		/// Tum.PDE.LanguageDSL.RelationshipShapeClassReferencesReferenceRelationship.DomainRelationship
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<RelationshipShapeClass> RelationshipShapeClasses
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<RelationshipShapeClass>, RelationshipShapeClass>(global::Tum.PDE.LanguageDSL.RelationshipShapeClassReferencesReferenceRelationship.DomainRelationshipDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DomainRole.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.DomainRole sourceDomainRole1 = sourceElement as global::Tum.PDE.LanguageDSL.DomainRole;
			if (sourceDomainRole1 != null)
			{
				// Create link for path DomainRelationshipHasRoles.Roles
				this.Roles.Add(sourceDomainRole1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.DomainRole sourceDomainRole1 = sourceElement as global::Tum.PDE.LanguageDSL.DomainRole;
			if (sourceDomainRole1 != null)
			{
				// Delete link for path DomainRelationshipHasRoles.Roles
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.GetLinks((global::Tum.PDE.LanguageDSL.DomainRelationship)this, sourceDomainRole1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.RelationshipDomainRoleId, global::Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.RoleDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass DomainRelationship
	/// Description for Tum.PDE.LanguageDSL.DomainRelationship
	/// </summary>
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
			
	public abstract partial class DomainRelationship : DomainRelationshipBase
	{
		#region Constructors
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DomainRelationship(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass DomainClass
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[global::System.ComponentModel.TypeDescriptionProvider(typeof(DomainClassBaseTypeDescriptionProvider))]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ae4eb892-dc73-435c-964b-187b543455bb")]
	public abstract partial class DomainClassBase : AttributedDomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xae4eb892, 0xdc73, 0x435c, 0x96, 0x4b, 0x18, 0x7b, 0x54, 0x34, 0x55, 0xbb);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DomainClassBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsDomainModel domain property code
		
		/// <summary>
		/// IsDomainModel domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsDomainModelDomainPropertyId = new global::System.Guid(0x56ba89cc, 0xfcb7, 0x4290, 0xb3, 0xa8, 0x9e, 0xba, 0x78, 0x60, 0xe6, 0x43);
		
		/// <summary>
		/// Storage for IsDomainModel
		/// </summary>
		private global::System.Boolean isDomainModelPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsDomainModel domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Is Domain Model
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/IsDomainModel.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/IsDomainModel.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/IsDomainModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("56ba89cc-fcb7-4290-b3a8-9eba7860e643")]
		public global::System.Boolean IsDomainModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isDomainModelPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsDomainModelPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.IsDomainModel domain property.
		/// </summary>
		internal sealed partial class IsDomainModelPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private IsDomainModelPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.IsDomainModel domain property value handler.
			/// </summary>
			public static readonly IsDomainModelPropertyHandler Instance = new IsDomainModelPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.IsDomainModel domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsDomainModelDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isDomainModelPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isDomainModelPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CanCopy domain property code
		
		/// <summary>
		/// CanCopy domain property Id.
		/// </summary>
		public static readonly global::System.Guid CanCopyDomainPropertyId = new global::System.Guid(0x7b005976, 0xc84b, 0x4925, 0x81, 0x12, 0x7a, 0x48, 0xb3, 0x8c, 0x8c, 0x8b);
		
		/// <summary>
		/// Storage for CanCopy
		/// </summary>
		private global::System.Boolean canCopyPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of CanCopy domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Can Copy
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/CanCopy.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/CanCopy.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/CanCopy.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("7b005976-c84b-4925-8112-7a48b38c8c8b")]
		public global::System.Boolean CanCopy
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return canCopyPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CanCopyPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.CanCopy domain property.
		/// </summary>
		internal sealed partial class CanCopyPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private CanCopyPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.CanCopy domain property value handler.
			/// </summary>
			public static readonly CanCopyPropertyHandler Instance = new CanCopyPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.CanCopy domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CanCopyDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.canCopyPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.canCopyPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CanMove domain property code
		
		/// <summary>
		/// CanMove domain property Id.
		/// </summary>
		public static readonly global::System.Guid CanMoveDomainPropertyId = new global::System.Guid(0x9dadec56, 0x6cf1, 0x4d98, 0xb3, 0x40, 0x5b, 0xbb, 0xb4, 0x44, 0xcf, 0x34);
		
		/// <summary>
		/// Storage for CanMove
		/// </summary>
		private global::System.Boolean canMovePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of CanMove domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Can Move
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/CanMove.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/CanMove.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/CanMove.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("9dadec56-6cf1-4d98-b340-5bbbb444cf34")]
		public global::System.Boolean CanMove
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return canMovePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CanMovePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.CanMove domain property.
		/// </summary>
		internal sealed partial class CanMovePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private CanMovePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.CanMove domain property value handler.
			/// </summary>
			public static readonly CanMovePropertyHandler Instance = new CanMovePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.CanMove domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CanMoveDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.canMovePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.canMovePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CanPaste domain property code
		
		/// <summary>
		/// CanPaste domain property Id.
		/// </summary>
		public static readonly global::System.Guid CanPasteDomainPropertyId = new global::System.Guid(0x87268f1f, 0xacd0, 0x4865, 0xa3, 0x55, 0x3b, 0xbf, 0x8f, 0x34, 0x01, 0xa4);
		
		/// <summary>
		/// Storage for CanPaste
		/// </summary>
		private global::System.Boolean canPastePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of CanPaste domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Can Paste
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/CanPaste.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/CanPaste.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/CanPaste.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("87268f1f-acd0-4865-a355-3bbf8f3401a4")]
		public global::System.Boolean CanPaste
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return canPastePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CanPastePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.CanPaste domain property.
		/// </summary>
		internal sealed partial class CanPastePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private CanPastePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.CanPaste domain property value handler.
			/// </summary>
			public static readonly CanPastePropertyHandler Instance = new CanPastePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.CanPaste domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CanPasteDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.canPastePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.canPastePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GenerateSpecificViewModel domain property code
		
		/// <summary>
		/// GenerateSpecificViewModel domain property Id.
		/// </summary>
		public static readonly global::System.Guid GenerateSpecificViewModelDomainPropertyId = new global::System.Guid(0x8b4fa0b3, 0x2157, 0x4957, 0xb7, 0xeb, 0x63, 0x6a, 0x4e, 0xda, 0x17, 0x4f);
		
		/// <summary>
		/// Storage for GenerateSpecificViewModel
		/// </summary>
		private global::System.Boolean generateSpecificViewModelPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of GenerateSpecificViewModel domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Generate Specific View Model
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModel.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModel.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8b4fa0b3-2157-4957-b7eb-636a4eda174f")]
		public global::System.Boolean GenerateSpecificViewModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return generateSpecificViewModelPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GenerateSpecificViewModelPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.GenerateSpecificViewModel domain property.
		/// </summary>
		internal sealed partial class GenerateSpecificViewModelPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private GenerateSpecificViewModelPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.GenerateSpecificViewModel domain property value handler.
			/// </summary>
			public static readonly GenerateSpecificViewModelPropertyHandler Instance = new GenerateSpecificViewModelPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.GenerateSpecificViewModel domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GenerateSpecificViewModelDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.generateSpecificViewModelPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.generateSpecificViewModelPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GenerateSpecificViewModelProperties domain property code
		
		/// <summary>
		/// GenerateSpecificViewModelProperties domain property Id.
		/// </summary>
		public static readonly global::System.Guid GenerateSpecificViewModelPropertiesDomainPropertyId = new global::System.Guid(0x64857d34, 0xab1d, 0x4d0a, 0xb5, 0xd7, 0xeb, 0x2c, 0xfd, 0xa1, 0xb3, 0xbb);
		
		/// <summary>
		/// Storage for GenerateSpecificViewModelProperties
		/// </summary>
		private global::System.Boolean generateSpecificViewModelPropertiesPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of GenerateSpecificViewModelProperties domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Generate Specific View Model
		/// Properties
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelProperties.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelProperties.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelProperties.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("64857d34-ab1d-4d0a-b5d7-eb2cfda1b3bb")]
		public global::System.Boolean GenerateSpecificViewModelProperties
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return generateSpecificViewModelPropertiesPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GenerateSpecificViewModelPropertiesPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.GenerateSpecificViewModelProperties domain property.
		/// </summary>
		internal sealed partial class GenerateSpecificViewModelPropertiesPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private GenerateSpecificViewModelPropertiesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.GenerateSpecificViewModelProperties domain property value handler.
			/// </summary>
			public static readonly GenerateSpecificViewModelPropertiesPropertyHandler Instance = new GenerateSpecificViewModelPropertiesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.GenerateSpecificViewModelProperties domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GenerateSpecificViewModelPropertiesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.generateSpecificViewModelPropertiesPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.generateSpecificViewModelPropertiesPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GenerateSpecificViewModelReferences domain property code
		
		/// <summary>
		/// GenerateSpecificViewModelReferences domain property Id.
		/// </summary>
		public static readonly global::System.Guid GenerateSpecificViewModelReferencesDomainPropertyId = new global::System.Guid(0x39c485b1, 0x11b4, 0x4c36, 0x94, 0x02, 0xea, 0xa6, 0xe0, 0x68, 0x15, 0xda);
		
		/// <summary>
		/// Storage for GenerateSpecificViewModelReferences
		/// </summary>
		private global::System.Boolean generateSpecificViewModelReferencesPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of GenerateSpecificViewModelReferences domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Generate Specific View Model
		/// References
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelReferences.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelReferences.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelReferences.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("39c485b1-11b4-4c36-9402-eaa6e06815da")]
		public global::System.Boolean GenerateSpecificViewModelReferences
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return generateSpecificViewModelReferencesPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GenerateSpecificViewModelReferencesPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.GenerateSpecificViewModelReferences domain property.
		/// </summary>
		internal sealed partial class GenerateSpecificViewModelReferencesPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private GenerateSpecificViewModelReferencesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.GenerateSpecificViewModelReferences domain property value handler.
			/// </summary>
			public static readonly GenerateSpecificViewModelReferencesPropertyHandler Instance = new GenerateSpecificViewModelReferencesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.GenerateSpecificViewModelReferences domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GenerateSpecificViewModelReferencesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.generateSpecificViewModelReferencesPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.generateSpecificViewModelReferencesPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GenerateSpecificViewModelEmbeddings domain property code
		
		/// <summary>
		/// GenerateSpecificViewModelEmbeddings domain property Id.
		/// </summary>
		public static readonly global::System.Guid GenerateSpecificViewModelEmbeddingsDomainPropertyId = new global::System.Guid(0xd9de7618, 0xd9a1, 0x490d, 0xa5, 0xef, 0x41, 0x64, 0x51, 0xf2, 0xeb, 0xe6);
		
		/// <summary>
		/// Storage for GenerateSpecificViewModelEmbeddings
		/// </summary>
		private global::System.Boolean generateSpecificViewModelEmbeddingsPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of GenerateSpecificViewModelEmbeddings domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Generate Specific View Model
		/// Embeddings
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelEmbeddings.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelEmbeddings.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelEmbeddings.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("d9de7618-d9a1-490d-a5ef-416451f2ebe6")]
		public global::System.Boolean GenerateSpecificViewModelEmbeddings
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return generateSpecificViewModelEmbeddingsPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GenerateSpecificViewModelEmbeddingsPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.GenerateSpecificViewModelEmbeddings domain property.
		/// </summary>
		internal sealed partial class GenerateSpecificViewModelEmbeddingsPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private GenerateSpecificViewModelEmbeddingsPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.GenerateSpecificViewModelEmbeddings domain property value handler.
			/// </summary>
			public static readonly GenerateSpecificViewModelEmbeddingsPropertyHandler Instance = new GenerateSpecificViewModelEmbeddingsPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.GenerateSpecificViewModelEmbeddings domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GenerateSpecificViewModelEmbeddingsDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.generateSpecificViewModelEmbeddingsPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.generateSpecificViewModelEmbeddingsPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GenerateSpecificViewModelOppositeReferences domain property code
		
		/// <summary>
		/// GenerateSpecificViewModelOppositeReferences domain property Id.
		/// </summary>
		public static readonly global::System.Guid GenerateSpecificViewModelOppositeReferencesDomainPropertyId = new global::System.Guid(0xcded9af2, 0x4fdc, 0x4178, 0xa8, 0xa4, 0x95, 0x85, 0xce, 0xda, 0xa7, 0x8a);
		
		/// <summary>
		/// Storage for GenerateSpecificViewModelOppositeReferences
		/// </summary>
		private global::System.Boolean generateSpecificViewModelOppositeReferencesPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of GenerateSpecificViewModelOppositeReferences domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainClass.Generate Specific View Model
		/// Opposite References
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelOppositeReferences.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelOppositeReferences.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainClass/GenerateSpecificViewModelOppositeReferences.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("cded9af2-4fdc-4178-a8a4-9585cedaa78a")]
		public global::System.Boolean GenerateSpecificViewModelOppositeReferences
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return generateSpecificViewModelOppositeReferencesPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GenerateSpecificViewModelOppositeReferencesPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainClass.GenerateSpecificViewModelOppositeReferences domain property.
		/// </summary>
		internal sealed partial class GenerateSpecificViewModelOppositeReferencesPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainClassBase, global::System.Boolean>
		{
			private GenerateSpecificViewModelOppositeReferencesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainClass.GenerateSpecificViewModelOppositeReferences domain property value handler.
			/// </summary>
			public static readonly GenerateSpecificViewModelOppositeReferencesPropertyHandler Instance = new GenerateSpecificViewModelOppositeReferencesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainClass.GenerateSpecificViewModelOppositeReferences domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GenerateSpecificViewModelOppositeReferencesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.generateSpecificViewModelOppositeReferencesPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.generateSpecificViewModelOppositeReferencesPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BaseClass opposite domain role accessor
		/// <summary>
		/// Gets or sets BaseClass.
		/// Description for Tum.PDE.LanguageDSL.DomainClassReferencesBaseClass.DerivedClass
		/// </summary>
		public virtual DomainClass BaseClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainClassReferencesBaseClass.DerivedClassDomainRoleId) as DomainClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainClassReferencesBaseClass.DerivedClassDomainRoleId, value);
			}
		}
		#endregion
		#region DerivedClasses opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DerivedClasses.
		/// Description for Tum.PDE.LanguageDSL.DomainClassReferencesBaseClass.BaseClass
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainClass> DerivedClasses
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainClass>, DomainClass>(global::Tum.PDE.LanguageDSL.DomainClassReferencesBaseClass.BaseClassDomainRoleId);
			}
		}
		#endregion
		#region ShapeClasses opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ShapeClasses.
		/// Description for Tum.PDE.LanguageDSL.ShapeClassReferencesDomainClass.DomainClass
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<PresentationDomainClassElement> ShapeClasses
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<PresentationDomainClassElement>, PresentationDomainClassElement>(global::Tum.PDE.LanguageDSL.ShapeClassReferencesDomainClass.DomainClassDomainRoleId);
			}
		}
		#endregion
		#region SerializedDomainClass opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializedDomainClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedDomainClassReferencesDomainClass.DomainClass
		/// </summary>
		public virtual SerializedDomainClass SerializedDomainClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainClassReferencesDomainClass.DomainClassDomainRoleId) as SerializedDomainClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainClassReferencesDomainClass.DomainClassDomainRoleId, value);
			}
		}
		#endregion
		#region ModelContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ModelContext.
		/// Description for Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.DomainClass
		/// </summary>
		public virtual LibraryModelContext ModelContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.DomainClassDomainRoleId) as LibraryModelContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.DomainClassDomainRoleId, value);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass DomainClass
	/// Description for Tum.PDE.LanguageDSL.DomainClass
	/// </summary>
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
			
	public partial class DomainClass : DomainClassBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainClass(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainClass(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass DomainRole
	/// Description for Tum.PDE.LanguageDSL.DomainRole
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[global::System.ComponentModel.TypeDescriptionProvider(typeof(DomainRoleTypeDescriptionProvider))]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("49e74ec6-6331-4e1e-8c50-6dfa774e17ea")]
	public partial class DomainRole : NamedDomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainRole domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x49e74ec6, 0x6331, 0x4e1e, 0x8c, 0x50, 0x6d, 0xfa, 0x77, 0x4e, 0x17, 0xea);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainRole(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainRole(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Multiplicity domain property code
		
		/// <summary>
		/// Multiplicity domain property Id.
		/// </summary>
		public static readonly global::System.Guid MultiplicityDomainPropertyId = new global::System.Guid(0x13d00637, 0x432f, 0x44a7, 0x8d, 0xa0, 0x29, 0xbc, 0xca, 0x0b, 0x90, 0xd8);
		
		/// <summary>
		/// Storage for Multiplicity
		/// </summary>
		private Multiplicity multiplicityPropertyStorage = Multiplicity.ZeroMany;
		
		/// <summary>
		/// Gets or sets the value of Multiplicity domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Multiplicity
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/Multiplicity.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/Multiplicity.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/Multiplicity.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("13d00637-432f-44a7-8da0-29bcca0b90d8")]
		public Multiplicity Multiplicity
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return multiplicityPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				MultiplicityPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.Multiplicity domain property.
		/// </summary>
		internal sealed partial class MultiplicityPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, Multiplicity>
		{
			private MultiplicityPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.Multiplicity domain property value handler.
			/// </summary>
			public static readonly MultiplicityPropertyHandler Instance = new MultiplicityPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.Multiplicity domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return MultiplicityDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed Multiplicity GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.multiplicityPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, Multiplicity newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				Multiplicity oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.multiplicityPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropertyName domain property code
		
		/// <summary>
		/// PropertyName domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropertyNameDomainPropertyId = new global::System.Guid(0x2f1b915b, 0x5af0, 0x4e60, 0xac, 0x00, 0xd2, 0xba, 0x91, 0x86, 0x88, 0x3f);
		
		/// <summary>
		/// Storage for PropertyName
		/// </summary>
		private global::System.String propertyNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of PropertyName domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Property Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/PropertyName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/PropertyName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/PropertyName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2f1b915b-5af0-4e60-ac00-d2ba9186883f")]
		public global::System.String PropertyName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propertyNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropertyNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.PropertyName domain property.
		/// </summary>
		internal sealed partial class PropertyNamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, global::System.String>
		{
			private PropertyNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.PropertyName domain property value handler.
			/// </summary>
			public static readonly PropertyNamePropertyHandler Instance = new PropertyNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.PropertyName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropertyNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propertyNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propertyNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropertyDisplayName domain property code
		
		/// <summary>
		/// PropertyDisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropertyDisplayNameDomainPropertyId = new global::System.Guid(0x9c51a91e, 0x8301, 0x4085, 0xb3, 0x60, 0x4a, 0xec, 0x57, 0x6f, 0x69, 0x32);
		
		/// <summary>
		/// Storage for PropertyDisplayName
		/// </summary>
		private global::System.String propertyDisplayNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of PropertyDisplayName domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Property Display Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/PropertyDisplayName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/PropertyDisplayName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/PropertyDisplayName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9c51a91e-8301-4085-b360-4aec576f6932")]
		public global::System.String PropertyDisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propertyDisplayNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropertyDisplayNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.PropertyDisplayName domain property.
		/// </summary>
		internal sealed partial class PropertyDisplayNamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, global::System.String>
		{
			private PropertyDisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.PropertyDisplayName domain property value handler.
			/// </summary>
			public static readonly PropertyDisplayNamePropertyHandler Instance = new PropertyDisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.PropertyDisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropertyDisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propertyDisplayNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propertyDisplayNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsPropertyNameTracking domain property code
		
		/// <summary>
		/// IsPropertyNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsPropertyNameTrackingDomainPropertyId = new global::System.Guid(0x375a598b, 0x7909, 0x40f6, 0xbd, 0xc6, 0x7e, 0x90, 0xd8, 0xd2, 0xa7, 0x90);
		
		/// <summary>
		/// Storage for IsPropertyNameTracking
		/// </summary>
		private TrackingEnum isPropertyNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsPropertyNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Is Property Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("375a598b-7909-40f6-bdc6-7e90d8d2a790")]
		public TrackingEnum IsPropertyNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isPropertyNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsPropertyNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.IsPropertyNameTracking domain property.
		/// </summary>
		internal sealed partial class IsPropertyNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, TrackingEnum>
		{
			private IsPropertyNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.IsPropertyNameTracking domain property value handler.
			/// </summary>
			public static readonly IsPropertyNameTrackingPropertyHandler Instance = new IsPropertyNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.IsPropertyNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsPropertyNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isPropertyNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isPropertyNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsPropertyDisplayNameTracking domain property code
		
		/// <summary>
		/// IsPropertyDisplayNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsPropertyDisplayNameTrackingDomainPropertyId = new global::System.Guid(0xe819177a, 0xb7f4, 0x448b, 0x9c, 0x74, 0xa8, 0xc1, 0x23, 0x2d, 0x12, 0x52);
		
		/// <summary>
		/// Storage for IsPropertyDisplayNameTracking
		/// </summary>
		private TrackingEnum isPropertyDisplayNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsPropertyDisplayNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Is Property Display Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyDisplayNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyDisplayNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyDisplayNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("e819177a-b7f4-448b-9c74-a8c1232d1252")]
		public TrackingEnum IsPropertyDisplayNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isPropertyDisplayNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsPropertyDisplayNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.IsPropertyDisplayNameTracking domain property.
		/// </summary>
		internal sealed partial class IsPropertyDisplayNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, TrackingEnum>
		{
			private IsPropertyDisplayNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.IsPropertyDisplayNameTracking domain property value handler.
			/// </summary>
			public static readonly IsPropertyDisplayNameTrackingPropertyHandler Instance = new IsPropertyDisplayNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.IsPropertyDisplayNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsPropertyDisplayNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isPropertyDisplayNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isPropertyDisplayNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Category domain property code
		
		/// <summary>
		/// Category domain property Id.
		/// </summary>
		public static readonly global::System.Guid CategoryDomainPropertyId = new global::System.Guid(0x4331c932, 0x2aba, 0x4e47, 0x9e, 0x17, 0x95, 0xff, 0x8c, 0xcf, 0x83, 0x50);
		
		/// <summary>
		/// Storage for Category
		/// </summary>
		private global::System.String categoryPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Category domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Category
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/Category.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/Category.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/Category.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("4331c932-2aba-4e47-9e17-95ff8ccf8350")]
		public global::System.String Category
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return categoryPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CategoryPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.Category domain property.
		/// </summary>
		internal sealed partial class CategoryPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, global::System.String>
		{
			private CategoryPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.Category domain property value handler.
			/// </summary>
			public static readonly CategoryPropertyHandler Instance = new CategoryPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.Category domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CategoryDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.categoryPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.categoryPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropertyGetterAccessModifier domain property code
		
		/// <summary>
		/// PropertyGetterAccessModifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropertyGetterAccessModifierDomainPropertyId = new global::System.Guid(0x9d7bae03, 0x7e29, 0x4413, 0x88, 0x0e, 0x59, 0x1c, 0xdf, 0x57, 0x55, 0xb4);
		
		/// <summary>
		/// Storage for PropertyGetterAccessModifier
		/// </summary>
		private AccessModifier propertyGetterAccessModifierPropertyStorage = AccessModifier.Public;
		
		/// <summary>
		/// Gets or sets the value of PropertyGetterAccessModifier domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Property Getter Access Modifier
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/PropertyGetterAccessModifier.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/PropertyGetterAccessModifier.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/PropertyGetterAccessModifier.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AccessModifier.Public)]
		[DslModeling::DomainObjectId("9d7bae03-7e29-4413-880e-591cdf5755b4")]
		public AccessModifier PropertyGetterAccessModifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propertyGetterAccessModifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropertyGetterAccessModifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.PropertyGetterAccessModifier domain property.
		/// </summary>
		internal sealed partial class PropertyGetterAccessModifierPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, AccessModifier>
		{
			private PropertyGetterAccessModifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.PropertyGetterAccessModifier domain property value handler.
			/// </summary>
			public static readonly PropertyGetterAccessModifierPropertyHandler Instance = new PropertyGetterAccessModifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.PropertyGetterAccessModifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropertyGetterAccessModifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AccessModifier GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propertyGetterAccessModifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, AccessModifier newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AccessModifier oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propertyGetterAccessModifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropertySetterAccessModifier domain property code
		
		/// <summary>
		/// PropertySetterAccessModifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropertySetterAccessModifierDomainPropertyId = new global::System.Guid(0x78f53368, 0xeb27, 0x4a5f, 0x91, 0x3a, 0x97, 0xd4, 0xda, 0xfd, 0x78, 0xd9);
		
		/// <summary>
		/// Storage for PropertySetterAccessModifier
		/// </summary>
		private AccessModifier propertySetterAccessModifierPropertyStorage = AccessModifier.Public;
		
		/// <summary>
		/// Gets or sets the value of PropertySetterAccessModifier domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Property Setter Access Modifier
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/PropertySetterAccessModifier.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/PropertySetterAccessModifier.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/PropertySetterAccessModifier.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AccessModifier.Public)]
		[DslModeling::DomainObjectId("78f53368-eb27-4a5f-913a-97d4dafd78d9")]
		public AccessModifier PropertySetterAccessModifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propertySetterAccessModifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropertySetterAccessModifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.PropertySetterAccessModifier domain property.
		/// </summary>
		internal sealed partial class PropertySetterAccessModifierPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, AccessModifier>
		{
			private PropertySetterAccessModifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.PropertySetterAccessModifier domain property value handler.
			/// </summary>
			public static readonly PropertySetterAccessModifierPropertyHandler Instance = new PropertySetterAccessModifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.PropertySetterAccessModifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropertySetterAccessModifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AccessModifier GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propertySetterAccessModifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, AccessModifier newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AccessModifier oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propertySetterAccessModifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsPropertyBrowsable domain property code
		
		/// <summary>
		/// IsPropertyBrowsable domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsPropertyBrowsableDomainPropertyId = new global::System.Guid(0x33a8d594, 0x1aab, 0x4965, 0x8a, 0xd0, 0xb8, 0xd2, 0xb5, 0x91, 0x4c, 0x78);
		
		/// <summary>
		/// Storage for IsPropertyBrowsable
		/// </summary>
		private global::System.Boolean isPropertyBrowsablePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsPropertyBrowsable domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Is Property Browsable
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyBrowsable.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyBrowsable.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyBrowsable.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("33a8d594-1aab-4965-8ad0-b8d2b5914c78")]
		public global::System.Boolean IsPropertyBrowsable
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isPropertyBrowsablePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsPropertyBrowsablePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.IsPropertyBrowsable domain property.
		/// </summary>
		internal sealed partial class IsPropertyBrowsablePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, global::System.Boolean>
		{
			private IsPropertyBrowsablePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.IsPropertyBrowsable domain property value handler.
			/// </summary>
			public static readonly IsPropertyBrowsablePropertyHandler Instance = new IsPropertyBrowsablePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.IsPropertyBrowsable domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsPropertyBrowsableDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isPropertyBrowsablePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isPropertyBrowsablePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsPropertyGenerator domain property code
		
		/// <summary>
		/// IsPropertyGenerator domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsPropertyGeneratorDomainPropertyId = new global::System.Guid(0xe740b39a, 0x0aa3, 0x4348, 0xa6, 0x81, 0x27, 0x19, 0x3d, 0x5c, 0xfa, 0x9a);
		
		/// <summary>
		/// Storage for IsPropertyGenerator
		/// </summary>
		private global::System.Boolean isPropertyGeneratorPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsPropertyGenerator domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Is Property Generator
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyGenerator.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyGenerator.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyGenerator.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("e740b39a-0aa3-4348-a681-27193d5cfa9a")]
		public global::System.Boolean IsPropertyGenerator
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isPropertyGeneratorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsPropertyGeneratorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.IsPropertyGenerator domain property.
		/// </summary>
		internal sealed partial class IsPropertyGeneratorPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, global::System.Boolean>
		{
			private IsPropertyGeneratorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.IsPropertyGenerator domain property value handler.
			/// </summary>
			public static readonly IsPropertyGeneratorPropertyHandler Instance = new IsPropertyGeneratorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.IsPropertyGenerator domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsPropertyGeneratorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isPropertyGeneratorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isPropertyGeneratorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropagatesDelete domain property code
		
		/// <summary>
		/// PropagatesDelete domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropagatesDeleteDomainPropertyId = new global::System.Guid(0x6b4ae336, 0x924c, 0x4fca, 0xa2, 0x27, 0x7b, 0xd8, 0xf2, 0xd7, 0xa6, 0x07);
		
		/// <summary>
		/// Storage for PropagatesDelete
		/// </summary>
		private global::System.Boolean propagatesDeletePropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of PropagatesDelete domain property.
		/// If True, an element playing this role in a link is deleted when the link is
		/// deleted.
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/PropagatesDelete.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/PropagatesDelete.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/PropagatesDelete.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6b4ae336-924c-4fca-a227-7bd8f2d7a607")]
		public global::System.Boolean PropagatesDelete
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propagatesDeletePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropagatesDeletePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.PropagatesDelete domain property.
		/// </summary>
		internal sealed partial class PropagatesDeletePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, global::System.Boolean>
		{
			private PropagatesDeletePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.PropagatesDelete domain property value handler.
			/// </summary>
			public static readonly PropagatesDeletePropertyHandler Instance = new PropagatesDeletePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.PropagatesDelete domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropagatesDeleteDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propagatesDeletePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propagatesDeletePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsNameTracking domain property code
		
		/// <summary>
		/// IsNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsNameTrackingDomainPropertyId = new global::System.Guid(0x43dd086f, 0x2a69, 0x4970, 0x8b, 0xb2, 0x30, 0x76, 0xf7, 0x3d, 0x01, 0x95);
		
		/// <summary>
		/// Storage for IsNameTracking
		/// </summary>
		private TrackingEnum isNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Is Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/IsNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/IsNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/IsNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("43dd086f-2a69-4970-8bb2-3076f73d0195")]
		public TrackingEnum IsNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.IsNameTracking domain property.
		/// </summary>
		internal sealed partial class IsNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, TrackingEnum>
		{
			private IsNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.IsNameTracking domain property value handler.
			/// </summary>
			public static readonly IsNameTrackingPropertyHandler Instance = new IsNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.IsNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsPropertyUIReadOnly domain property code
		
		/// <summary>
		/// IsPropertyUIReadOnly domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsPropertyUIReadOnlyDomainPropertyId = new global::System.Guid(0xc8d25682, 0x99e8, 0x4d3d, 0x9b, 0xa3, 0x53, 0x4c, 0x54, 0xe9, 0xa0, 0x18);
		
		/// <summary>
		/// Storage for IsPropertyUIReadOnly
		/// </summary>
		private global::System.Boolean isPropertyUIReadOnlyPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsPropertyUIReadOnly domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainRole.Is Property UI Read Only
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyUIReadOnly.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyUIReadOnly.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainRole/IsPropertyUIReadOnly.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c8d25682-99e8-4d3d-9ba3-534c54e9a018")]
		public global::System.Boolean IsPropertyUIReadOnly
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isPropertyUIReadOnlyPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsPropertyUIReadOnlyPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainRole.IsPropertyUIReadOnly domain property.
		/// </summary>
		internal sealed partial class IsPropertyUIReadOnlyPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainRole, global::System.Boolean>
		{
			private IsPropertyUIReadOnlyPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainRole.IsPropertyUIReadOnly domain property value handler.
			/// </summary>
			public static readonly IsPropertyUIReadOnlyPropertyHandler Instance = new IsPropertyUIReadOnlyPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainRole.IsPropertyUIReadOnly domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsPropertyUIReadOnlyDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isPropertyUIReadOnlyPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainRole element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isPropertyUIReadOnlyPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Relationship opposite domain role accessor
		/// <summary>
		/// Gets or sets Relationship.
		/// Description for Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.Role
		/// </summary>
		public virtual DomainRelationship Relationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.RoleDomainRoleId) as DomainRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.RoleDomainRoleId, value);
			}
		}
		#endregion
		#region Opposite opposite domain role accessor
		/// <summary>
		/// Gets or sets Opposite.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainRoleReferencesOpposite.SourceDomainRole
		/// </summary>
		public virtual DomainRole Opposite
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRoleReferencesOpposite.SourceDomainRoleDomainRoleId) as DomainRole;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRoleReferencesOpposite.SourceDomainRoleDomainRoleId, value);
			}
		}
		#endregion
		#region RolePlayer opposite domain role accessor
		/// <summary>
		/// Gets or sets RolePlayer.
		/// Description for Tum.PDE.LanguageDSL.DomainRoleReferencesRolePlayer.DomainRole
		/// </summary>
		public virtual AttributedDomainElement RolePlayer
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRoleReferencesRolePlayer.DomainRoleDomainRoleId) as AttributedDomainElement;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRoleReferencesRolePlayer.DomainRoleDomainRoleId, value);
			}
		}
		#endregion
		#region SerializedDomainRoles opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SerializedDomainRoles.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesDomainRole.DomainRole
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SerializedDomainRole> SerializedDomainRoles
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SerializedDomainRole>, SerializedDomainRole>(global::Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesDomainRole.DomainRoleDomainRoleId);
			}
		}
		#endregion
		#region CustomPropertyGridEditor opposite domain role accessor
		/// <summary>
		/// Gets or sets CustomPropertyGridEditor.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainRoleReferencesCustomPropertyGridEditor.DomainRole
		/// </summary>
		public virtual PropertyGridEditor CustomPropertyGridEditor
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRoleReferencesCustomPropertyGridEditor.DomainRoleDomainRoleId) as PropertyGridEditor;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainRoleReferencesCustomPropertyGridEditor.DomainRoleDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass EmbeddingRelationship
	/// Description for Tum.PDE.LanguageDSL.EmbeddingRelationship
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EmbeddingRelationship.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EmbeddingRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("3e569f62-2995-477f-9f68-514268e1c9c0")]
	public partial class EmbeddingRelationship : DomainRelationship
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EmbeddingRelationship domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3e569f62, 0x2995, 0x477f, 0x9f, 0x68, 0x51, 0x42, 0x68, 0xe1, 0xc9, 0xc0);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EmbeddingRelationship(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EmbeddingRelationship(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region PropagatesCopyToChild domain property code
		
		/// <summary>
		/// PropagatesCopyToChild domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropagatesCopyToChildDomainPropertyId = new global::System.Guid(0xa981b88e, 0xd83d, 0x49e0, 0x99, 0x64, 0x57, 0x08, 0x85, 0x35, 0xf7, 0x58);
		
		/// <summary>
		/// Storage for PropagatesCopyToChild
		/// </summary>
		private global::System.Boolean propagatesCopyToChildPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of PropagatesCopyToChild domain property.
		/// Description for Tum.PDE.LanguageDSL.EmbeddingRelationship.Propagates Copy To
		/// Child
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EmbeddingRelationship/PropagatesCopyToChild.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EmbeddingRelationship/PropagatesCopyToChild.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EmbeddingRelationship/PropagatesCopyToChild.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("a981b88e-d83d-49e0-9964-57088535f758")]
		public global::System.Boolean PropagatesCopyToChild
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propagatesCopyToChildPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropagatesCopyToChildPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EmbeddingRelationship.PropagatesCopyToChild domain property.
		/// </summary>
		internal sealed partial class PropagatesCopyToChildPropertyHandler : DslModeling::DomainPropertyValueHandler<EmbeddingRelationship, global::System.Boolean>
		{
			private PropagatesCopyToChildPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EmbeddingRelationship.PropagatesCopyToChild domain property value handler.
			/// </summary>
			public static readonly PropagatesCopyToChildPropertyHandler Instance = new PropagatesCopyToChildPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EmbeddingRelationship.PropagatesCopyToChild domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropagatesCopyToChildDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(EmbeddingRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propagatesCopyToChildPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EmbeddingRelationship element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propagatesCopyToChildPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializedEmbeddingRelationship opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializedEmbeddingRelationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedEmbeddingRelationshipReferencesEmbeddingRelationship.EmbeddingRelationship
		/// </summary>
		public virtual SerializedEmbeddingRelationship SerializedEmbeddingRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedEmbeddingRelationshipReferencesEmbeddingRelationship.EmbeddingRelationshipDomainRoleId) as SerializedEmbeddingRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedEmbeddingRelationshipReferencesEmbeddingRelationship.EmbeddingRelationshipDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ReferenceRelationship
	/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("7ce64682-be80-4515-83e5-2eed688e8cd7")]
	public partial class ReferenceRelationship : DomainRelationship
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ReferenceRelationship domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7ce64682, 0xbe80, 0x4515, 0x83, 0xe5, 0x2e, 0xed, 0x68, 0x8e, 0x8c, 0xd7);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ReferenceRelationship(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ReferenceRelationship(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region SerializationAttributeName domain property code
		
		/// <summary>
		/// SerializationAttributeName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationAttributeNameDomainPropertyId = new global::System.Guid(0xc85d2d0f, 0x4828, 0x4428, 0xa4, 0x1d, 0x09, 0x87, 0x58, 0xd0, 0x96, 0x56);
		
		/// <summary>
		/// Storage for SerializationAttributeName
		/// </summary>
		private global::System.String serializationAttributeNamePropertyStorage = "link";
		
		/// <summary>
		/// Gets or sets the value of SerializationAttributeName domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship.Serialization
		/// Attribute Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationAttributeName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationAttributeName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationAttributeName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("link")]
		[DslModeling::DomainObjectId("c85d2d0f-4828-4428-a41d-098758d09656")]
		public global::System.String SerializationAttributeName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationAttributeNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationAttributeNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRelationship.SerializationAttributeName domain property.
		/// </summary>
		internal sealed partial class SerializationAttributeNamePropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRelationship, global::System.String>
		{
			private SerializationAttributeNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRelationship.SerializationAttributeName domain property value handler.
			/// </summary>
			public static readonly SerializationAttributeNamePropertyHandler Instance = new SerializationAttributeNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRelationship.SerializationAttributeName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationAttributeNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ReferenceRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationAttributeNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRelationship element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationAttributeNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationTargetName domain property code
		
		/// <summary>
		/// SerializationTargetName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationTargetNameDomainPropertyId = new global::System.Guid(0xba52bf04, 0xf96d, 0x4062, 0xb3, 0xa0, 0x36, 0xda, 0x3d, 0x8b, 0x72, 0x20);
		
		/// <summary>
		/// Storage for SerializationTargetName
		/// </summary>
		private global::System.String serializationTargetNamePropertyStorage = "TargetRef";
		
		/// <summary>
		/// Gets or sets the value of SerializationTargetName domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship.Serialization Target
		/// Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationTargetName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationTargetName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationTargetName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("TargetRef")]
		[DslModeling::DomainObjectId("ba52bf04-f96d-4062-b3a0-36da3d8b7220")]
		public global::System.String SerializationTargetName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationTargetNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationTargetNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRelationship.SerializationTargetName domain property.
		/// </summary>
		internal sealed partial class SerializationTargetNamePropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRelationship, global::System.String>
		{
			private SerializationTargetNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRelationship.SerializationTargetName domain property value handler.
			/// </summary>
			public static readonly SerializationTargetNamePropertyHandler Instance = new SerializationTargetNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRelationship.SerializationTargetName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationTargetNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ReferenceRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationTargetNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRelationship element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationTargetNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationSourceName domain property code
		
		/// <summary>
		/// SerializationSourceName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationSourceNameDomainPropertyId = new global::System.Guid(0x524aed9b, 0xb8b5, 0x4c2c, 0x93, 0x20, 0xd8, 0x78, 0x20, 0xd6, 0x2c, 0xda);
		
		/// <summary>
		/// Storage for SerializationSourceName
		/// </summary>
		private global::System.String serializationSourceNamePropertyStorage = "SourceRef";
		
		/// <summary>
		/// Gets or sets the value of SerializationSourceName domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship.Serialization Source
		/// Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationSourceName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationSourceName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship/SerializationSourceName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("SourceRef")]
		[DslModeling::DomainObjectId("524aed9b-b8b5-4c2c-9320-d87820d62cda")]
		public global::System.String SerializationSourceName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationSourceNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationSourceNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRelationship.SerializationSourceName domain property.
		/// </summary>
		internal sealed partial class SerializationSourceNamePropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRelationship, global::System.String>
		{
			private SerializationSourceNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRelationship.SerializationSourceName domain property value handler.
			/// </summary>
			public static readonly SerializationSourceNamePropertyHandler Instance = new SerializationSourceNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRelationship.SerializationSourceName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationSourceNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ReferenceRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationSourceNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRelationship element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationSourceNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropagatesCopyToTarget domain property code
		
		/// <summary>
		/// PropagatesCopyToTarget domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropagatesCopyToTargetDomainPropertyId = new global::System.Guid(0x2686aa09, 0x14a5, 0x4015, 0x9a, 0xd9, 0x18, 0xc6, 0x27, 0x4d, 0x8b, 0xa2);
		
		/// <summary>
		/// Storage for PropagatesCopyToTarget
		/// </summary>
		private global::System.Boolean propagatesCopyToTargetPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of PropagatesCopyToTarget domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship.Propagates Copy To
		/// Target
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyToTarget.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyToTarget.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyToTarget.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("2686aa09-14a5-4015-9ad9-18c6274d8ba2")]
		public global::System.Boolean PropagatesCopyToTarget
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propagatesCopyToTargetPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropagatesCopyToTargetPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRelationship.PropagatesCopyToTarget domain property.
		/// </summary>
		internal sealed partial class PropagatesCopyToTargetPropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRelationship, global::System.Boolean>
		{
			private PropagatesCopyToTargetPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRelationship.PropagatesCopyToTarget domain property value handler.
			/// </summary>
			public static readonly PropagatesCopyToTargetPropertyHandler Instance = new PropagatesCopyToTargetPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRelationship.PropagatesCopyToTarget domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropagatesCopyToTargetDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ReferenceRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propagatesCopyToTargetPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRelationship element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propagatesCopyToTargetPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropagatesCopyToSource domain property code
		
		/// <summary>
		/// PropagatesCopyToSource domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropagatesCopyToSourceDomainPropertyId = new global::System.Guid(0x2588218f, 0xca28, 0x4aec, 0xaf, 0x92, 0x9a, 0xb0, 0x1c, 0xf5, 0xac, 0xd4);
		
		/// <summary>
		/// Storage for PropagatesCopyToSource
		/// </summary>
		private global::System.Boolean propagatesCopyToSourcePropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of PropagatesCopyToSource domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship.Propagates Copy To
		/// Source
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyToSource.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyToSource.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyToSource.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2588218f-ca28-4aec-af92-9ab01cf5acd4")]
		public global::System.Boolean PropagatesCopyToSource
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propagatesCopyToSourcePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropagatesCopyToSourcePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRelationship.PropagatesCopyToSource domain property.
		/// </summary>
		internal sealed partial class PropagatesCopyToSourcePropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRelationship, global::System.Boolean>
		{
			private PropagatesCopyToSourcePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRelationship.PropagatesCopyToSource domain property value handler.
			/// </summary>
			public static readonly PropagatesCopyToSourcePropertyHandler Instance = new PropagatesCopyToSourcePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRelationship.PropagatesCopyToSource domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropagatesCopyToSourceDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ReferenceRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propagatesCopyToSourcePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRelationship element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propagatesCopyToSourcePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropagatesCopyOnDeniedElementCopy domain property code
		
		/// <summary>
		/// PropagatesCopyOnDeniedElementCopy domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropagatesCopyOnDeniedElementCopyDomainPropertyId = new global::System.Guid(0x0f3bc43f, 0x8ea7, 0x4048, 0x9d, 0x0b, 0x27, 0xee, 0x48, 0xbf, 0x29, 0xb1);
		
		/// <summary>
		/// Storage for PropagatesCopyOnDeniedElementCopy
		/// </summary>
		private global::System.Boolean propagatesCopyOnDeniedElementCopyPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of PropagatesCopyOnDeniedElementCopy domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship.Propagates Copy On
		/// Denied Element Copy
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyOnDeniedElementCopy.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyOnDeniedElementCopy.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship/PropagatesCopyOnDeniedElementCopy.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("0f3bc43f-8ea7-4048-9d0b-27ee48bf29b1")]
		public global::System.Boolean PropagatesCopyOnDeniedElementCopy
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propagatesCopyOnDeniedElementCopyPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropagatesCopyOnDeniedElementCopyPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRelationship.PropagatesCopyOnDeniedElementCopy domain property.
		/// </summary>
		internal sealed partial class PropagatesCopyOnDeniedElementCopyPropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRelationship, global::System.Boolean>
		{
			private PropagatesCopyOnDeniedElementCopyPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRelationship.PropagatesCopyOnDeniedElementCopy domain property value handler.
			/// </summary>
			public static readonly PropagatesCopyOnDeniedElementCopyPropertyHandler Instance = new PropagatesCopyOnDeniedElementCopyPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRelationship.PropagatesCopyOnDeniedElementCopy domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropagatesCopyOnDeniedElementCopyDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ReferenceRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propagatesCopyOnDeniedElementCopyPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRelationship element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propagatesCopyOnDeniedElementCopyPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsSerializationTargetNameTracking domain property code
		
		/// <summary>
		/// IsSerializationTargetNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsSerializationTargetNameTrackingDomainPropertyId = new global::System.Guid(0xab5f339d, 0x8692, 0x434e, 0x81, 0xf6, 0x32, 0x78, 0xc3, 0xfc, 0xe0, 0xa2);
		
		/// <summary>
		/// Storage for IsSerializationTargetNameTracking
		/// </summary>
		private TrackingEnum isSerializationTargetNameTrackingPropertyStorage = TrackingEnum.False;
		
		/// <summary>
		/// Gets or sets the value of IsSerializationTargetNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship.Is Serialization
		/// Target Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship/IsSerializationTargetNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ReferenceRelationship/IsSerializationTargetNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship/IsSerializationTargetNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.False)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("ab5f339d-8692-434e-81f6-3278c3fce0a2")]
		public TrackingEnum IsSerializationTargetNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isSerializationTargetNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsSerializationTargetNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRelationship.IsSerializationTargetNameTracking domain property.
		/// </summary>
		internal sealed partial class IsSerializationTargetNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRelationship, TrackingEnum>
		{
			private IsSerializationTargetNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRelationship.IsSerializationTargetNameTracking domain property value handler.
			/// </summary>
			public static readonly IsSerializationTargetNameTrackingPropertyHandler Instance = new IsSerializationTargetNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRelationship.IsSerializationTargetNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsSerializationTargetNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(ReferenceRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isSerializationTargetNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRelationship element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isSerializationTargetNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsSerializationSourceNameTracking domain property code
		
		/// <summary>
		/// IsSerializationSourceNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsSerializationSourceNameTrackingDomainPropertyId = new global::System.Guid(0xe20ec2e6, 0x2817, 0x4789, 0x95, 0x58, 0x3e, 0x8c, 0xe2, 0xcc, 0x61, 0xa2);
		
		/// <summary>
		/// Storage for IsSerializationSourceNameTracking
		/// </summary>
		private TrackingEnum isSerializationSourceNameTrackingPropertyStorage = TrackingEnum.False;
		
		/// <summary>
		/// Gets or sets the value of IsSerializationSourceNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRelationship.Is Serialization
		/// Source Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRelationship/IsSerializationSourceNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ReferenceRelationship/IsSerializationSourceNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRelationship/IsSerializationSourceNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.False)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("e20ec2e6-2817-4789-9558-3e8ce2cc61a2")]
		public TrackingEnum IsSerializationSourceNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isSerializationSourceNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsSerializationSourceNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRelationship.IsSerializationSourceNameTracking domain property.
		/// </summary>
		internal sealed partial class IsSerializationSourceNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRelationship, TrackingEnum>
		{
			private IsSerializationSourceNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRelationship.IsSerializationSourceNameTracking domain property value handler.
			/// </summary>
			public static readonly IsSerializationSourceNameTrackingPropertyHandler Instance = new IsSerializationSourceNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRelationship.IsSerializationSourceNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsSerializationSourceNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(ReferenceRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isSerializationSourceNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRelationship element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isSerializationSourceNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ReferenceRSNode opposite domain role accessor
		/// <summary>
		/// Gets or sets ReferenceRSNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceRelationship.ReferenceRelationship
		/// </summary>
		public virtual ReferenceRSNode ReferenceRSNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceRelationship.ReferenceRelationshipDomainRoleId) as ReferenceRSNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceRelationship.ReferenceRelationshipDomainRoleId, value);
			}
		}
		#endregion
		#region SerializedReferenceRelationship opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializedReferenceRelationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedReferenceRelationshipReferencesReferenceRelationship.ReferenceRelationship
		/// </summary>
		public virtual SerializedReferenceRelationship SerializedReferenceRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedReferenceRelationshipReferencesReferenceRelationship.ReferenceRelationshipDomainRoleId) as SerializedReferenceRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedReferenceRelationshipReferencesReferenceRelationship.ReferenceRelationshipDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass DomainModelTreeView
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainModelTreeView.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainModelTreeView.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f8164594-4d3c-4671-83c8-7ccb19fcbc1d")]
	public abstract partial class DomainModelTreeViewBase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainModelTreeView domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf8164594, 0x4d3c, 0x4671, 0x83, 0xc8, 0x7c, 0xcb, 0x19, 0xfc, 0xbc, 0x1d);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DomainModelTreeViewBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region RootNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RootNodes.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainModelTreeViewReferencesRootNodes.DomainModelTreeView
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<RootNode> RootNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<RootNode>, RootNode>(global::Tum.PDE.LanguageDSL.DomainModelTreeViewReferencesRootNodes.DomainModelTreeViewDomainRoleId);
			}
		}
		#endregion
		#region ModelTreeNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ModelTreeNodes.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.DomainModelTreeView
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ModelTreeNode> ModelTreeNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ModelTreeNode>, ModelTreeNode>(global::Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.DomainModelTreeViewDomainRoleId);
			}
		}
		#endregion
		#region ViewContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ViewContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.DomainModelTreeView
		/// </summary>
		public virtual ViewContext ViewContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.DomainModelTreeViewDomainRoleId) as ViewContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.DomainModelTreeViewDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.ModelTreeNode.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.ModelTreeNode sourceModelTreeNode1 = sourceElement as global::Tum.PDE.LanguageDSL.ModelTreeNode;
			if (sourceModelTreeNode1 != null)
			{
				// Create link for path DomainModelTreeViewHasModelTreeNodes.ModelTreeNodes
				this.ModelTreeNodes.Add(sourceModelTreeNode1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.ModelTreeNode sourceModelTreeNode1 = sourceElement as global::Tum.PDE.LanguageDSL.ModelTreeNode;
			if (sourceModelTreeNode1 != null)
			{
				// Delete link for path DomainModelTreeViewHasModelTreeNodes.ModelTreeNodes
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.GetLinks((global::Tum.PDE.LanguageDSL.DomainModelTreeView)this, sourceModelTreeNode1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.DomainModelTreeViewDomainRoleId, global::Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.ModelTreeNodeDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass DomainModelTreeView
	/// Description for Tum.PDE.LanguageDSL.DomainModelTreeView
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class DomainModelTreeView : DomainModelTreeViewBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainModelTreeView(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainModelTreeView(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass RootNode
	/// Description for Tum.PDE.LanguageDSL.RootNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RootNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RootNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("9357c0b3-5d2e-4b0f-8eb0-2c078dbd912d")]
	public partial class RootNode : TreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// RootNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x9357c0b3, 0x5d2e, 0x4b0f, 0x8e, 0xb0, 0x2c, 0x07, 0x8d, 0xbd, 0x91, 0x2d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public RootNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public RootNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DomainModelTreeView opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainModelTreeView.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainModelTreeViewReferencesRootNodes.RootNode
		/// </summary>
		public virtual DomainModelTreeView DomainModelTreeView
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainModelTreeViewReferencesRootNodes.RootNodeDomainRoleId) as DomainModelTreeView;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainModelTreeViewReferencesRootNodes.RootNodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass TreeNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TreeNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TreeNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("4dc441a0-16e7-4cc6-886d-a52caf556213")]
	public abstract partial class TreeNodeBase : ModelTreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TreeNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x4dc441a0, 0x16e7, 0x4cc6, 0x88, 0x6d, 0xa5, 0x2c, 0xaf, 0x55, 0x62, 0x13);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected TreeNodeBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsEmbeddingTreeExpanded domain property code
		
		/// <summary>
		/// IsEmbeddingTreeExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsEmbeddingTreeExpandedDomainPropertyId = new global::System.Guid(0x16c4eb6a, 0x01be, 0x41f6, 0x9a, 0xe8, 0x70, 0xa0, 0x2e, 0x26, 0xc7, 0xe2);
		
		/// <summary>
		/// Storage for IsEmbeddingTreeExpanded
		/// </summary>
		private global::System.Boolean isEmbeddingTreeExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsEmbeddingTreeExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.TreeNode.Is Embedding Tree Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TreeNode/IsEmbeddingTreeExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TreeNode/IsEmbeddingTreeExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("16c4eb6a-01be-41f6-9ae8-70a02e26c7e2")]
		public global::System.Boolean IsEmbeddingTreeExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isEmbeddingTreeExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsEmbeddingTreeExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TreeNode.IsEmbeddingTreeExpanded domain property.
		/// </summary>
		internal sealed partial class IsEmbeddingTreeExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<TreeNodeBase, global::System.Boolean>
		{
			private IsEmbeddingTreeExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TreeNode.IsEmbeddingTreeExpanded domain property value handler.
			/// </summary>
			public static readonly IsEmbeddingTreeExpandedPropertyHandler Instance = new IsEmbeddingTreeExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TreeNode.IsEmbeddingTreeExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsEmbeddingTreeExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(TreeNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isEmbeddingTreeExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TreeNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isEmbeddingTreeExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsInheritanceTreeExpanded domain property code
		
		/// <summary>
		/// IsInheritanceTreeExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsInheritanceTreeExpandedDomainPropertyId = new global::System.Guid(0x01cb77e1, 0x9f33, 0x4948, 0xb2, 0x74, 0xff, 0xdc, 0x3f, 0xc5, 0x2f, 0xc0);
		
		/// <summary>
		/// Storage for IsInheritanceTreeExpanded
		/// </summary>
		private global::System.Boolean isInheritanceTreeExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsInheritanceTreeExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.TreeNode.Is Inheritance Tree Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TreeNode/IsInheritanceTreeExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TreeNode/IsInheritanceTreeExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("01cb77e1-9f33-4948-b274-ffdc3fc52fc0")]
		public global::System.Boolean IsInheritanceTreeExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isInheritanceTreeExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsInheritanceTreeExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TreeNode.IsInheritanceTreeExpanded domain property.
		/// </summary>
		internal sealed partial class IsInheritanceTreeExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<TreeNodeBase, global::System.Boolean>
		{
			private IsInheritanceTreeExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TreeNode.IsInheritanceTreeExpanded domain property value handler.
			/// </summary>
			public static readonly IsInheritanceTreeExpandedPropertyHandler Instance = new IsInheritanceTreeExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TreeNode.IsInheritanceTreeExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsInheritanceTreeExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(TreeNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isInheritanceTreeExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TreeNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isInheritanceTreeExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsReferenceTreeExpanded domain property code
		
		/// <summary>
		/// IsReferenceTreeExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsReferenceTreeExpandedDomainPropertyId = new global::System.Guid(0x5507a915, 0x7660, 0x44d1, 0xb5, 0x27, 0x67, 0xa8, 0xae, 0xff, 0x67, 0x72);
		
		/// <summary>
		/// Storage for IsReferenceTreeExpanded
		/// </summary>
		private global::System.Boolean isReferenceTreeExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsReferenceTreeExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.TreeNode.Is Reference Tree Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TreeNode/IsReferenceTreeExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TreeNode/IsReferenceTreeExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("5507a915-7660-44d1-b527-67a8aeff6772")]
		public global::System.Boolean IsReferenceTreeExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isReferenceTreeExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsReferenceTreeExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TreeNode.IsReferenceTreeExpanded domain property.
		/// </summary>
		internal sealed partial class IsReferenceTreeExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<TreeNodeBase, global::System.Boolean>
		{
			private IsReferenceTreeExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TreeNode.IsReferenceTreeExpanded domain property value handler.
			/// </summary>
			public static readonly IsReferenceTreeExpandedPropertyHandler Instance = new IsReferenceTreeExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TreeNode.IsReferenceTreeExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsReferenceTreeExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(TreeNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isReferenceTreeExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TreeNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isReferenceTreeExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsShapeMappingTreeExpanded domain property code
		
		/// <summary>
		/// IsShapeMappingTreeExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsShapeMappingTreeExpandedDomainPropertyId = new global::System.Guid(0x53064547, 0xdad8, 0x47a8, 0xa7, 0x62, 0x4a, 0x7c, 0x5c, 0x9a, 0x51, 0x0c);
		
		/// <summary>
		/// Storage for IsShapeMappingTreeExpanded
		/// </summary>
		private global::System.Boolean isShapeMappingTreeExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsShapeMappingTreeExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.TreeNode.Is Shape Mapping Tree Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TreeNode/IsShapeMappingTreeExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TreeNode/IsShapeMappingTreeExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("53064547-dad8-47a8-a762-4a7c5c9a510c")]
		public global::System.Boolean IsShapeMappingTreeExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isShapeMappingTreeExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsShapeMappingTreeExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TreeNode.IsShapeMappingTreeExpanded domain property.
		/// </summary>
		internal sealed partial class IsShapeMappingTreeExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<TreeNodeBase, global::System.Boolean>
		{
			private IsShapeMappingTreeExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TreeNode.IsShapeMappingTreeExpanded domain property value handler.
			/// </summary>
			public static readonly IsShapeMappingTreeExpandedPropertyHandler Instance = new IsShapeMappingTreeExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TreeNode.IsShapeMappingTreeExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsShapeMappingTreeExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(TreeNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isShapeMappingTreeExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TreeNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isShapeMappingTreeExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsElementHolder domain property code
		
		/// <summary>
		/// IsElementHolder domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsElementHolderDomainPropertyId = new global::System.Guid(0x05edb8ab, 0x451a, 0x4de5, 0xb3, 0x3d, 0x79, 0x87, 0x46, 0xcf, 0x4f, 0xe6);
		
		/// <summary>
		/// Storage for IsElementHolder
		/// </summary>
		private global::System.Boolean isElementHolderPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsElementHolder domain property.
		/// Description for Tum.PDE.LanguageDSL.TreeNode.Is Element Holder
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TreeNode/IsElementHolder.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TreeNode/IsElementHolder.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("05edb8ab-451a-4de5-b33d-798746cf4fe6")]
		public global::System.Boolean IsElementHolder
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isElementHolderPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsElementHolderPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TreeNode.IsElementHolder domain property.
		/// </summary>
		internal sealed partial class IsElementHolderPropertyHandler : DslModeling::DomainPropertyValueHandler<TreeNodeBase, global::System.Boolean>
		{
			private IsElementHolderPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TreeNode.IsElementHolder domain property value handler.
			/// </summary>
			public static readonly IsElementHolderPropertyHandler Instance = new IsElementHolderPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TreeNode.IsElementHolder domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsElementHolderDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(TreeNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isElementHolderPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TreeNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isElementHolderPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsExpanded domain property code
		
		/// <summary>
		/// IsExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsExpandedDomainPropertyId = new global::System.Guid(0x4b568a54, 0x91db, 0x44fc, 0xa3, 0xa0, 0xaa, 0x8c, 0x4e, 0x69, 0xd8, 0x46);
		
		/// <summary>
		/// Storage for IsExpanded
		/// </summary>
		private global::System.Boolean isExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.TreeNode.Is Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TreeNode/IsExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TreeNode/IsExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("4b568a54-91db-44fc-a3a0-aa8c4e69d846")]
		public global::System.Boolean IsExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TreeNode.IsExpanded domain property.
		/// </summary>
		internal sealed partial class IsExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<TreeNodeBase, global::System.Boolean>
		{
			private IsExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TreeNode.IsExpanded domain property value handler.
			/// </summary>
			public static readonly IsExpandedPropertyHandler Instance = new IsExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TreeNode.IsExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(TreeNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TreeNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DomainElement opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainElement.
		/// Description for Tum.PDE.LanguageDSL.TreeNodeReferencesDomainElement.TreeNode
		/// </summary>
		public virtual AttributedDomainElement DomainElement
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesDomainElement.TreeNodeDomainRoleId) as AttributedDomainElement;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesDomainElement.TreeNodeDomainRoleId, value);
			}
		}
		#endregion
		#region EmbeddingRSNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EmbeddingRSNodes.
		/// Description for Tum.PDE.LanguageDSL.TreeNodeReferencesEmbeddingRSNodes.TreeNode
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EmbeddingRSNode> EmbeddingRSNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EmbeddingRSNode>, EmbeddingRSNode>(global::Tum.PDE.LanguageDSL.TreeNodeReferencesEmbeddingRSNodes.TreeNodeDomainRoleId);
			}
		}
		#endregion
		#region InheritanceNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of InheritanceNodes.
		/// Description for Tum.PDE.LanguageDSL.TreeNodeReferencesInheritanceNodes.TreeNode
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<InheritanceNode> InheritanceNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<InheritanceNode>, InheritanceNode>(global::Tum.PDE.LanguageDSL.TreeNodeReferencesInheritanceNodes.TreeNodeDomainRoleId);
			}
		}
		#endregion
		#region ReferenceRSNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ReferenceRSNodes.
		/// Description for Tum.PDE.LanguageDSL.TreeNodeReferencesReferenceRSNodes.TreeNode
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ReferenceRSNode> ReferenceRSNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ReferenceRSNode>, ReferenceRSNode>(global::Tum.PDE.LanguageDSL.TreeNodeReferencesReferenceRSNodes.TreeNodeDomainRoleId);
			}
		}
		#endregion
		#region ShapeClassNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ShapeClassNodes.
		/// Description for Tum.PDE.LanguageDSL.TreeNodeReferencesShapeClassNodes.TreeNode
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ShapeClassNode> ShapeClassNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ShapeClassNode>, ShapeClassNode>(global::Tum.PDE.LanguageDSL.TreeNodeReferencesShapeClassNodes.TreeNodeDomainRoleId);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass TreeNode
	/// Description for Tum.PDE.LanguageDSL.TreeNode
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public abstract partial class TreeNode : TreeNodeBase
	{
		#region Constructors
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected TreeNode(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass EmbeddingRSNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EmbeddingRSNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EmbeddingRSNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("1bb74086-f9b8-44df-b85d-130a3153a1a8")]
	public abstract partial class EmbeddingRSNodeBase : ModelTreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EmbeddingRSNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1bb74086, 0xf9b8, 0x44df, 0xb8, 0x5d, 0x13, 0x0a, 0x31, 0x53, 0xa1, 0xa8);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected EmbeddingRSNodeBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsExpanded domain property code
		
		/// <summary>
		/// IsExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsExpandedDomainPropertyId = new global::System.Guid(0x3560d0c8, 0xcaf3, 0x4180, 0xba, 0x2f, 0xb8, 0x02, 0xe0, 0x90, 0x7e, 0x0b);
		
		/// <summary>
		/// Storage for IsExpanded
		/// </summary>
		private global::System.Boolean isExpandedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.EmbeddingRSNode.Is Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EmbeddingRSNode/IsExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EmbeddingRSNode/IsExpanded.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EmbeddingRSNode/IsExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3560d0c8-caf3-4180-ba2f-b802e0907e0b")]
		public global::System.Boolean IsExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EmbeddingRSNode.IsExpanded domain property.
		/// </summary>
		internal sealed partial class IsExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<EmbeddingRSNodeBase, global::System.Boolean>
		{
			private IsExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EmbeddingRSNode.IsExpanded domain property value handler.
			/// </summary>
			public static readonly IsExpandedPropertyHandler Instance = new IsExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EmbeddingRSNode.IsExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(EmbeddingRSNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EmbeddingRSNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Relationship opposite domain role accessor
		/// <summary>
		/// Gets or sets Relationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesRelationship.EmbeddingRSNode
		/// </summary>
		public virtual DomainRelationship Relationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesRelationship.EmbeddingRSNodeDomainRoleId) as DomainRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesRelationship.EmbeddingRSNodeDomainRoleId, value);
			}
		}
		#endregion
		#region TreeNode opposite domain role accessor
		/// <summary>
		/// Gets or sets TreeNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.TreeNodeReferencesEmbeddingRSNodes.EmbeddingRSNode
		/// </summary>
		public virtual TreeNode TreeNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesEmbeddingRSNodes.EmbeddingRSNodeDomainRoleId) as TreeNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesEmbeddingRSNodes.EmbeddingRSNodeDomainRoleId, value);
			}
		}
		#endregion
		#region EmbeddingNode opposite domain role accessor
		/// <summary>
		/// Gets or sets EmbeddingNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesEmbeddingNode.EmbeddingRSNode
		/// </summary>
		public virtual EmbeddingNode EmbeddingNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesEmbeddingNode.EmbeddingRSNodeDomainRoleId) as EmbeddingNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesEmbeddingNode.EmbeddingRSNodeDomainRoleId, value);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass EmbeddingRSNode
	/// Description for Tum.PDE.LanguageDSL.EmbeddingRSNode
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class EmbeddingRSNode : EmbeddingRSNodeBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EmbeddingRSNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EmbeddingRSNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass EmbeddingNode
	/// Description for Tum.PDE.LanguageDSL.EmbeddingNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EmbeddingNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EmbeddingNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("09745d7b-25bc-41e8-8208-386f82c528ae")]
	public partial class EmbeddingNode : TreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EmbeddingNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x09745d7b, 0x25bc, 0x41e8, 0x82, 0x08, 0x38, 0x6f, 0x82, 0xc5, 0x28, 0xae);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EmbeddingNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EmbeddingNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region EmbeddingRSNode opposite domain role accessor
		/// <summary>
		/// Gets or sets EmbeddingRSNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesEmbeddingNode.EmbeddingNode
		/// </summary>
		public virtual EmbeddingRSNode EmbeddingRSNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesEmbeddingNode.EmbeddingNodeDomainRoleId) as EmbeddingRSNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingRSNodeReferencesEmbeddingNode.EmbeddingNodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass InheritanceNode
	/// Description for Tum.PDE.LanguageDSL.InheritanceNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.InheritanceNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.InheritanceNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("936f2196-dd2a-4fea-a586-691400918b70")]
	public partial class InheritanceNode : TreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// InheritanceNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x936f2196, 0xdd2a, 0x4fea, 0xa5, 0x86, 0x69, 0x14, 0x00, 0x91, 0x8b, 0x70);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public InheritanceNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public InheritanceNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region InhRelationshipId domain property code
		
		/// <summary>
		/// InhRelationshipId domain property Id.
		/// </summary>
		public static readonly global::System.Guid InhRelationshipIdDomainPropertyId = new global::System.Guid(0x37515607, 0x5e17, 0x43ed, 0xbe, 0xba, 0x13, 0x69, 0x9d, 0x7f, 0xc4, 0x06);
		
		/// <summary>
		/// Storage for InhRelationshipId
		/// </summary>
		private global::System.Guid inhRelationshipIdPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of InhRelationshipId domain property.
		/// Description for Tum.PDE.LanguageDSL.InheritanceNode.Inh Relationship Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.InheritanceNode/InhRelationshipId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.InheritanceNode/InhRelationshipId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("37515607-5e17-43ed-beba-13699d7fc406")]
		public global::System.Guid InhRelationshipId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return inhRelationshipIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				InhRelationshipIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the InheritanceNode.InhRelationshipId domain property.
		/// </summary>
		internal sealed partial class InhRelationshipIdPropertyHandler : DslModeling::DomainPropertyValueHandler<InheritanceNode, global::System.Guid>
		{
			private InhRelationshipIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the InheritanceNode.InhRelationshipId domain property value handler.
			/// </summary>
			public static readonly InhRelationshipIdPropertyHandler Instance = new InhRelationshipIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the InheritanceNode.InhRelationshipId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return InhRelationshipIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(InheritanceNode element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.inhRelationshipIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(InheritanceNode element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.inhRelationshipIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TreeNode opposite domain role accessor
		/// <summary>
		/// Gets or sets TreeNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.TreeNodeReferencesInheritanceNodes.InheritanceNode
		/// </summary>
		public virtual TreeNode TreeNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesInheritanceNodes.InheritanceNodeDomainRoleId) as TreeNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesInheritanceNodes.InheritanceNodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass ReferenceRSNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRSNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRSNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("b499418c-c05f-4cab-bb3c-f17a40a401c5")]
	public abstract partial class ReferenceRSNodeBase : ModelTreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ReferenceRSNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb499418c, 0xc05f, 0x4cab, 0xbb, 0x3c, 0xf1, 0x7a, 0x40, 0xa4, 0x01, 0xc5);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ReferenceRSNodeBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsShapeMappingTreeExpanded domain property code
		
		/// <summary>
		/// IsShapeMappingTreeExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsShapeMappingTreeExpandedDomainPropertyId = new global::System.Guid(0x3a380724, 0x63a5, 0x4d3f, 0xa8, 0x3d, 0x2f, 0x9c, 0xf0, 0x45, 0x89, 0x36);
		
		/// <summary>
		/// Storage for IsShapeMappingTreeExpanded
		/// </summary>
		private global::System.Boolean isShapeMappingTreeExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsShapeMappingTreeExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRSNode.Is Shape Mapping Tree
		/// Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRSNode/IsShapeMappingTreeExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRSNode/IsShapeMappingTreeExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("3a380724-63a5-4d3f-a83d-2f9cf0458936")]
		public global::System.Boolean IsShapeMappingTreeExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isShapeMappingTreeExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsShapeMappingTreeExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRSNode.IsShapeMappingTreeExpanded domain property.
		/// </summary>
		internal sealed partial class IsShapeMappingTreeExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRSNodeBase, global::System.Boolean>
		{
			private IsShapeMappingTreeExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRSNode.IsShapeMappingTreeExpanded domain property value handler.
			/// </summary>
			public static readonly IsShapeMappingTreeExpandedPropertyHandler Instance = new IsShapeMappingTreeExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRSNode.IsShapeMappingTreeExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsShapeMappingTreeExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ReferenceRSNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isShapeMappingTreeExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRSNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isShapeMappingTreeExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsExpanded domain property code
		
		/// <summary>
		/// IsExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsExpandedDomainPropertyId = new global::System.Guid(0x2e456735, 0x06e9, 0x4cf2, 0xa0, 0x6f, 0x5f, 0x6f, 0x1b, 0x04, 0x8d, 0x2c);
		
		/// <summary>
		/// Storage for IsExpanded
		/// </summary>
		private global::System.Boolean isExpandedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.ReferenceRSNode.Is Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceRSNode/IsExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceRSNode/IsExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2e456735-06e9-4cf2-a06f-5f6f1b048d2c")]
		public global::System.Boolean IsExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReferenceRSNode.IsExpanded domain property.
		/// </summary>
		internal sealed partial class IsExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<ReferenceRSNodeBase, global::System.Boolean>
		{
			private IsExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReferenceRSNode.IsExpanded domain property value handler.
			/// </summary>
			public static readonly IsExpandedPropertyHandler Instance = new IsExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReferenceRSNode.IsExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ReferenceRSNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReferenceRSNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ReferenceRelationship opposite domain role accessor
		/// <summary>
		/// Gets or sets ReferenceRelationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceRelationship.ReferenceRSNode
		/// </summary>
		public virtual ReferenceRelationship ReferenceRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceRelationship.ReferenceRSNodeDomainRoleId) as ReferenceRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceRelationship.ReferenceRSNodeDomainRoleId, value);
			}
		}
		#endregion
		#region TreeNode opposite domain role accessor
		/// <summary>
		/// Gets or sets TreeNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.TreeNodeReferencesReferenceRSNodes.ReferenceRSNode
		/// </summary>
		public virtual TreeNode TreeNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesReferenceRSNodes.ReferenceRSNodeDomainRoleId) as TreeNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesReferenceRSNodes.ReferenceRSNodeDomainRoleId, value);
			}
		}
		#endregion
		#region ReferenceNode opposite domain role accessor
		/// <summary>
		/// Gets or sets ReferenceNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceNode.ReferenceRSNode
		/// </summary>
		public virtual ReferenceNode ReferenceNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceNode.ReferenceRSNodeDomainRoleId) as ReferenceNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceNode.ReferenceRSNodeDomainRoleId, value);
			}
		}
		#endregion
		#region ShapeRelationshipNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ShapeRelationshipNodes.
		/// Description for
		/// Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesShapeRelationshipNodes.ReferenceRSNode
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ShapeRelationshipNode> ShapeRelationshipNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ShapeRelationshipNode>, ShapeRelationshipNode>(global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesShapeRelationshipNodes.ReferenceRSNodeDomainRoleId);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass ReferenceRSNode
	/// Description for Tum.PDE.LanguageDSL.ReferenceRSNode
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class ReferenceRSNode : ReferenceRSNodeBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ReferenceRSNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ReferenceRSNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ReferenceNode
	/// Description for Tum.PDE.LanguageDSL.ReferenceNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ReferenceNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ReferenceNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("27dc98d4-1a96-4d84-8958-abd13dbbb771")]
	public partial class ReferenceNode : TreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ReferenceNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x27dc98d4, 0x1a96, 0x4d84, 0x89, 0x58, 0xab, 0xd1, 0x3d, 0xbb, 0xb7, 0x71);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ReferenceNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ReferenceNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ReferenceRSNode opposite domain role accessor
		/// <summary>
		/// Gets or sets ReferenceRSNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceNode.ReferenceNode
		/// </summary>
		public virtual ReferenceRSNode ReferenceRSNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceNode.ReferenceNodeDomainRoleId) as ReferenceRSNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesReferenceNode.ReferenceNodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass ShapeClassNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClassNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClassNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("fae8225e-f874-421b-9336-3b3ef6c382b2")]
	public abstract partial class ShapeClassNodeBase : ModelTreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ShapeClassNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xfae8225e, 0xf874, 0x421b, 0x93, 0x36, 0x3b, 0x3e, 0xf6, 0xc3, 0x82, 0xb2);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ShapeClassNodeBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TreeNode opposite domain role accessor
		/// <summary>
		/// Gets or sets TreeNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.TreeNodeReferencesShapeClassNodes.ShapeClassNode
		/// </summary>
		public virtual TreeNode TreeNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesShapeClassNodes.ShapeClassNodeDomainRoleId) as TreeNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.TreeNodeReferencesShapeClassNodes.ShapeClassNodeDomainRoleId, value);
			}
		}
		#endregion
		#region ShapeClass opposite domain role accessor
		/// <summary>
		/// Gets or sets ShapeClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.ShapeClassNodeReferencesShapeClass.ShapeClassNode
		/// </summary>
		public virtual PresentationDomainClassElement ShapeClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassNodeReferencesShapeClass.ShapeClassNodeDomainRoleId) as PresentationDomainClassElement;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassNodeReferencesShapeClass.ShapeClassNodeDomainRoleId, value);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass ShapeClassNode
	/// Description for Tum.PDE.LanguageDSL.ShapeClassNode
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class ShapeClassNode : ShapeClassNodeBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ShapeClassNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ShapeClassNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ShapeRelationshipNode
	/// Description for Tum.PDE.LanguageDSL.ShapeRelationshipNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeRelationshipNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeRelationshipNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ac6e7bf0-0b2b-4764-a333-0d7f229bde43")]
	public partial class ShapeRelationshipNode : ModelTreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ShapeRelationshipNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xac6e7bf0, 0x0b2b, 0x4764, 0xa3, 0x33, 0x0d, 0x7f, 0x22, 0x9b, 0xde, 0x43);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ShapeRelationshipNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ShapeRelationshipNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region RelationshipShapeClass opposite domain role accessor
		/// <summary>
		/// Gets or sets RelationshipShapeClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.ShapeRelationshipNodeReferencesRelationshipShapeClass.ShapeRelationshipNode
		/// </summary>
		public virtual RelationshipShapeClass RelationshipShapeClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeRelationshipNodeReferencesRelationshipShapeClass.ShapeRelationshipNodeDomainRoleId) as RelationshipShapeClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeRelationshipNodeReferencesRelationshipShapeClass.ShapeRelationshipNodeDomainRoleId, value);
			}
		}
		#endregion
		#region ReferenceRSNode opposite domain role accessor
		/// <summary>
		/// Gets or sets ReferenceRSNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesShapeRelationshipNodes.ShapeRelationshipNode
		/// </summary>
		public virtual ReferenceRSNode ReferenceRSNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesShapeRelationshipNodes.ShapeRelationshipNodeDomainRoleId) as ReferenceRSNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ReferenceRSNodeReferencesShapeRelationshipNodes.ShapeRelationshipNodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass DomainType
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainType.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[global::System.ComponentModel.TypeDescriptionProvider(typeof(DomainTypeBaseTypeDescriptionProvider))]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainType.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("7d9d4097-7342-48ec-af25-787df6595c6a")]
	public abstract partial class DomainTypeBase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainType domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7d9d4097, 0x7342, 0x48ec, 0xaf, 0x25, 0x78, 0x7d, 0xf6, 0x59, 0x5c, 0x6a);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DomainTypeBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Namespace domain property code
		
		/// <summary>
		/// Namespace domain property Id.
		/// </summary>
		public static readonly global::System.Guid NamespaceDomainPropertyId = new global::System.Guid(0x6b5516e6, 0x257d, 0x4242, 0xac, 0xa7, 0x3c, 0x23, 0x0f, 0xf0, 0x0c, 0x46);
		
		/// <summary>
		/// Storage for Namespace
		/// </summary>
		private global::System.String namespacePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Namespace domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainType.Namespace
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainType/Namespace.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainType/Namespace.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainType/Namespace.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("")]
		[DslModeling::DomainObjectId("6b5516e6-257d-4242-aca7-3c230ff00c46")]
		public global::System.String Namespace
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namespacePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamespacePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainType.Namespace domain property.
		/// </summary>
		internal sealed partial class NamespacePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainTypeBase, global::System.String>
		{
			private NamespacePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainType.Namespace domain property value handler.
			/// </summary>
			public static readonly NamespacePropertyHandler Instance = new NamespacePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainType.Namespace domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NamespaceDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainTypeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namespacePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainTypeBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namespacePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationStyle domain property code
		
		/// <summary>
		/// SerializationStyle domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationStyleDomainPropertyId = new global::System.Guid(0x3f836ca9, 0xc006, 0x4732, 0xa7, 0x2a, 0x53, 0x85, 0xcc, 0x7e, 0xe0, 0x09);
		
		/// <summary>
		/// Storage for SerializationStyle
		/// </summary>
		private SerializationStyle serializationStylePropertyStorage = SerializationStyle.Normal;
		
		/// <summary>
		/// Gets or sets the value of SerializationStyle domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainType.Serialization Style
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainType/SerializationStyle.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainType/SerializationStyle.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainType/SerializationStyle.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(SerializationStyle.Normal)]
		[DslModeling::DomainObjectId("3f836ca9-c006-4732-a72a-5385cc7ee009")]
		public SerializationStyle SerializationStyle
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationStylePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationStylePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainType.SerializationStyle domain property.
		/// </summary>
		internal sealed partial class SerializationStylePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainTypeBase, SerializationStyle>
		{
			private SerializationStylePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainType.SerializationStyle domain property value handler.
			/// </summary>
			public static readonly SerializationStylePropertyHandler Instance = new SerializationStylePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainType.SerializationStyle domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationStyleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed SerializationStyle GetValue(DomainTypeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationStylePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainTypeBase element, SerializationStyle newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				SerializationStyle oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationStylePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x243bd4da, 0x9b66, 0x4a8b, 0x9e, 0x1d, 0x8a, 0x2f, 0x2e, 0xcc, 0xc3, 0xe3);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainType.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainType/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainType/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainType/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("243bd4da-9b66-4a8b-9e1d-8a2f2eccc3e3")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainType.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainTypeBase, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainType.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainType.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainTypeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainTypeBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0xc923b222, 0xc0fc, 0x44c7, 0x98, 0x63, 0xa3, 0x9f, 0x5e, 0x32, 0x27, 0xdd);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainType.Description
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainType/Description.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainType/Description.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainType/Description.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c923b222-c0fc-44c7-9863-a39f5e3227dd")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainType.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainTypeBase, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainType.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainType.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainTypeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainTypeBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0x98f0d5cb, 0xecc3, 0x43c4, 0xad, 0x97, 0xb4, 0xd8, 0x8a, 0xca, 0x0c, 0x63);
		
		/// <summary>
		/// Storage for DisplayName
		/// </summary>
		private global::System.String displayNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainType.Display Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainType/DisplayName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainType/DisplayName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainType/DisplayName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("98f0d5cb-ecc3-43c4-ad97-b4d88aca0c63")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return displayNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DisplayNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainType.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::DomainPropertyValueHandler<DomainTypeBase, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainType.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainType.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DomainTypeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.displayNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainTypeBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.displayNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsDisplayNameTracking domain property code
		
		/// <summary>
		/// IsDisplayNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsDisplayNameTrackingDomainPropertyId = new global::System.Guid(0x000db4dc, 0x1cc7, 0x4ab3, 0x95, 0x43, 0x09, 0x29, 0x54, 0x1e, 0x3c, 0xf1);
		
		/// <summary>
		/// Storage for IsDisplayNameTracking
		/// </summary>
		private TrackingEnum isDisplayNameTrackingPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsDisplayNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainType.Is Display Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainType/IsDisplayNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainType/IsDisplayNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainType/IsDisplayNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("000db4dc-1cc7-4ab3-9543-0929541e3cf1")]
		public TrackingEnum IsDisplayNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isDisplayNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsDisplayNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainType.IsDisplayNameTracking domain property.
		/// </summary>
		internal sealed partial class IsDisplayNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainTypeBase, TrackingEnum>
		{
			private IsDisplayNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainType.IsDisplayNameTracking domain property value handler.
			/// </summary>
			public static readonly IsDisplayNameTrackingPropertyHandler Instance = new IsDisplayNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainType.IsDisplayNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsDisplayNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(DomainTypeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isDisplayNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainTypeBase element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isDisplayNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region RequiresSerializationConversion domain property code
		
		/// <summary>
		/// RequiresSerializationConversion domain property Id.
		/// </summary>
		public static readonly global::System.Guid RequiresSerializationConversionDomainPropertyId = new global::System.Guid(0xd9b1f45e, 0x1d2c, 0x46cc, 0x93, 0xff, 0x99, 0xbd, 0x10, 0x30, 0x05, 0xa3);
		
		/// <summary>
		/// Storage for RequiresSerializationConversion
		/// </summary>
		private global::System.Boolean requiresSerializationConversionPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of RequiresSerializationConversion domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainType.Requires Serialization Conversion
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainType/RequiresSerializationConversion.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainType/RequiresSerializationConversion.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainType/RequiresSerializationConversion.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d9b1f45e-1d2c-46cc-93ff-99bd103005a3")]
		public global::System.Boolean RequiresSerializationConversion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return requiresSerializationConversionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				RequiresSerializationConversionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainType.RequiresSerializationConversion domain property.
		/// </summary>
		internal sealed partial class RequiresSerializationConversionPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainTypeBase, global::System.Boolean>
		{
			private RequiresSerializationConversionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainType.RequiresSerializationConversion domain property value handler.
			/// </summary>
			public static readonly RequiresSerializationConversionPropertyHandler Instance = new RequiresSerializationConversionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainType.RequiresSerializationConversion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return RequiresSerializationConversionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainTypeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.requiresSerializationConversionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainTypeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.requiresSerializationConversionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MetaModel opposite domain role accessor
		/// <summary>
		/// Gets or sets MetaModel.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.DomainType
		/// </summary>
		public virtual MetaModel MetaModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.DomainTypeDomainRoleId) as MetaModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.DomainTypeDomainRoleId, value);
			}
		}
		#endregion
		#region PropertyGridEditor opposite domain role accessor
		/// <summary>
		/// Gets or sets PropertyGridEditor.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainTypeReferencesPropertyGridEditor.DomainType
		/// </summary>
		public virtual PropertyGridEditor PropertyGridEditor
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainTypeReferencesPropertyGridEditor.DomainTypeDomainRoleId) as PropertyGridEditor;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainTypeReferencesPropertyGridEditor.DomainTypeDomainRoleId, value);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass DomainType
	/// Description for Tum.PDE.LanguageDSL.DomainType
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public abstract partial class DomainType : DomainTypeBase
	{
		#region Constructors
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DomainType(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass ExternalType
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ExternalType.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ExternalType.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("b438e655-8a4e-458f-87e4-4c1ba55b8483")]
	public abstract partial class ExternalTypeBase : DomainType
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ExternalType domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb438e655, 0x8a4e, 0x458f, 0x87, 0xe4, 0x4c, 0x1b, 0xa5, 0x5b, 0x84, 0x83);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ExternalTypeBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
	/// <summary>
	/// DomainClass ExternalType
	/// Description for Tum.PDE.LanguageDSL.ExternalType
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class ExternalType : ExternalTypeBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExternalType(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExternalType(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass DomainEnumeration
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainEnumeration.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainEnumeration.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("21eb35bf-2b56-4fee-8f44-872eaef72259")]
	public abstract partial class DomainEnumerationBase : DomainType
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DomainEnumeration domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x21eb35bf, 0x2b56, 0x4fee, 0x8f, 0x44, 0x87, 0x2e, 0xae, 0xf7, 0x22, 0x59);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DomainEnumerationBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region AccessModifier domain property code
		
		/// <summary>
		/// AccessModifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid AccessModifierDomainPropertyId = new global::System.Guid(0x6b6bd2a1, 0xd780, 0x4280, 0xbb, 0xde, 0x3f, 0x69, 0xc9, 0x94, 0xdf, 0xe2);
		
		/// <summary>
		/// Storage for AccessModifier
		/// </summary>
		private AccessModifier accessModifierPropertyStorage = AccessModifier.Public;
		
		/// <summary>
		/// Gets or sets the value of AccessModifier domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainEnumeration.Access Modifier
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainEnumeration/AccessModifier.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainEnumeration/AccessModifier.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainEnumeration/AccessModifier.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AccessModifier.Public)]
		[DslModeling::DomainObjectId("6b6bd2a1-d780-4280-bbde-3f69c994dfe2")]
		public AccessModifier AccessModifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return accessModifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				AccessModifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainEnumeration.AccessModifier domain property.
		/// </summary>
		internal sealed partial class AccessModifierPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainEnumerationBase, AccessModifier>
		{
			private AccessModifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainEnumeration.AccessModifier domain property value handler.
			/// </summary>
			public static readonly AccessModifierPropertyHandler Instance = new AccessModifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainEnumeration.AccessModifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AccessModifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AccessModifier GetValue(DomainEnumerationBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.accessModifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainEnumerationBase element, AccessModifier newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AccessModifier oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.accessModifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsFlags domain property code
		
		/// <summary>
		/// IsFlags domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsFlagsDomainPropertyId = new global::System.Guid(0xae314cb0, 0x488e, 0x4144, 0x95, 0x48, 0xa9, 0x93, 0x1d, 0x0e, 0xe5, 0x39);
		
		/// <summary>
		/// Storage for IsFlags
		/// </summary>
		private global::System.Boolean isFlagsPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsFlags domain property.
		/// Description for Tum.PDE.LanguageDSL.DomainEnumeration.Is Flags
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DomainEnumeration/IsFlags.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DomainEnumeration/IsFlags.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DomainEnumeration/IsFlags.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ae314cb0-488e-4144-9548-a9931d0ee539")]
		public global::System.Boolean IsFlags
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isFlagsPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsFlagsPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DomainEnumeration.IsFlags domain property.
		/// </summary>
		internal sealed partial class IsFlagsPropertyHandler : DslModeling::DomainPropertyValueHandler<DomainEnumerationBase, global::System.Boolean>
		{
			private IsFlagsPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DomainEnumeration.IsFlags domain property value handler.
			/// </summary>
			public static readonly IsFlagsPropertyHandler Instance = new IsFlagsPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DomainEnumeration.IsFlags domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsFlagsDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DomainEnumerationBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isFlagsPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DomainEnumerationBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isFlagsPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Literals opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Literals.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.DomainEnumeration
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EnumerationLiteral> Literals
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EnumerationLiteral>, EnumerationLiteral>(global::Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.DomainEnumerationDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.EnumerationLiteral.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.EnumerationLiteral sourceEnumerationLiteral1 = sourceElement as global::Tum.PDE.LanguageDSL.EnumerationLiteral;
			if (sourceEnumerationLiteral1 != null)
			{
				// Create link for path DomainEnumerationHasLiterals.Literals
				this.Literals.Add(sourceEnumerationLiteral1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.EnumerationLiteral sourceEnumerationLiteral1 = sourceElement as global::Tum.PDE.LanguageDSL.EnumerationLiteral;
			if (sourceEnumerationLiteral1 != null)
			{
				// Delete link for path DomainEnumerationHasLiterals.Literals
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.GetLinks((global::Tum.PDE.LanguageDSL.DomainEnumeration)this, sourceEnumerationLiteral1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.DomainEnumerationDomainRoleId, global::Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.EnumerationLiteralDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass DomainEnumeration
	/// Description for Tum.PDE.LanguageDSL.DomainEnumeration
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class DomainEnumeration : DomainEnumerationBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainEnumeration(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DomainEnumeration(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass EnumerationLiteral
	/// Description for Tum.PDE.LanguageDSL.EnumerationLiteral
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EnumerationLiteral.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EnumerationLiteral.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("21833341-940d-4e08-917a-6f562772b29f")]
	public partial class EnumerationLiteral : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EnumerationLiteral domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x21833341, 0x940d, 0x4e08, 0x91, 0x7a, 0x6f, 0x56, 0x27, 0x72, 0xb2, 0x9f);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EnumerationLiteral(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EnumerationLiteral(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0xa164078a, 0xadfe, 0x4528, 0xb6, 0xd6, 0x14, 0xf4, 0xb9, 0xc4, 0x4f, 0xb3);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.EnumerationLiteral.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("a164078a-adfe-4528-b6d6-14f4b9c44fb3")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EnumerationLiteral.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<EnumerationLiteral, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EnumerationLiteral.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EnumerationLiteral.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EnumerationLiteral element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EnumerationLiteral element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0x235cde82, 0x6b28, 0x4a67, 0xa5, 0x38, 0x98, 0x99, 0xa2, 0x15, 0x22, 0x86);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for Tum.PDE.LanguageDSL.EnumerationLiteral.Description
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Description.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Description.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Description.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("235cde82-6b28-4a67-a538-9899a2152286")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EnumerationLiteral.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<EnumerationLiteral, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EnumerationLiteral.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EnumerationLiteral.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EnumerationLiteral element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EnumerationLiteral element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Value domain property code
		
		/// <summary>
		/// Value domain property Id.
		/// </summary>
		public static readonly global::System.Guid ValueDomainPropertyId = new global::System.Guid(0xbe07da5b, 0xebb7, 0x482d, 0xa7, 0xc9, 0xc3, 0x5d, 0xd2, 0xce, 0x01, 0xb2);
		
		/// <summary>
		/// Storage for Value
		/// </summary>
		private global::System.String valuePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Value domain property.
		/// Description for Tum.PDE.LanguageDSL.EnumerationLiteral.Value
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Value.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Value.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EnumerationLiteral/Value.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("be07da5b-ebb7-482d-a7c9-c35dd2ce01b2")]
		public global::System.String Value
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return valuePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ValuePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EnumerationLiteral.Value domain property.
		/// </summary>
		internal sealed partial class ValuePropertyHandler : DslModeling::DomainPropertyValueHandler<EnumerationLiteral, global::System.String>
		{
			private ValuePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EnumerationLiteral.Value domain property value handler.
			/// </summary>
			public static readonly ValuePropertyHandler Instance = new ValuePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EnumerationLiteral.Value domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ValueDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EnumerationLiteral element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.valuePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EnumerationLiteral element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.valuePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DisplayName domain property code
		
		/// <summary>
		/// DisplayName domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisplayNameDomainPropertyId = new global::System.Guid(0x0ef6bd4d, 0x501e, 0x4833, 0xb9, 0xac, 0x7e, 0x4c, 0xf1, 0x55, 0x6b, 0x62);
		
		/// <summary>
		/// Storage for DisplayName
		/// </summary>
		private global::System.String displayNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of DisplayName domain property.
		/// Description for Tum.PDE.LanguageDSL.EnumerationLiteral.Display Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EnumerationLiteral/DisplayName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EnumerationLiteral/DisplayName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EnumerationLiteral/DisplayName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0ef6bd4d-501e-4833-b9ac-7e4cf1556b62")]
		public global::System.String DisplayName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return displayNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DisplayNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EnumerationLiteral.DisplayName domain property.
		/// </summary>
		internal sealed partial class DisplayNamePropertyHandler : DslModeling::DomainPropertyValueHandler<EnumerationLiteral, global::System.String>
		{
			private DisplayNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EnumerationLiteral.DisplayName domain property value handler.
			/// </summary>
			public static readonly DisplayNamePropertyHandler Instance = new DisplayNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EnumerationLiteral.DisplayName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisplayNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EnumerationLiteral element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.displayNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EnumerationLiteral element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.displayNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsDisplayNameTracking domain property code
		
		/// <summary>
		/// IsDisplayNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsDisplayNameTrackingDomainPropertyId = new global::System.Guid(0x9bc33ccf, 0x2aec, 0x420d, 0xbb, 0x98, 0x2a, 0xda, 0x12, 0x04, 0xec, 0x36);
		
		/// <summary>
		/// Storage for IsDisplayNameTracking
		/// </summary>
		private TrackingEnum isDisplayNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsDisplayNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.EnumerationLiteral.Is Display Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EnumerationLiteral/IsDisplayNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EnumerationLiteral/IsDisplayNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EnumerationLiteral/IsDisplayNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("9bc33ccf-2aec-420d-bb98-2ada1204ec36")]
		public TrackingEnum IsDisplayNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isDisplayNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsDisplayNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EnumerationLiteral.IsDisplayNameTracking domain property.
		/// </summary>
		internal sealed partial class IsDisplayNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<EnumerationLiteral, TrackingEnum>
		{
			private IsDisplayNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EnumerationLiteral.IsDisplayNameTracking domain property value handler.
			/// </summary>
			public static readonly IsDisplayNameTrackingPropertyHandler Instance = new IsDisplayNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EnumerationLiteral.IsDisplayNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsDisplayNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(EnumerationLiteral element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isDisplayNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EnumerationLiteral element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isDisplayNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationName domain property code
		
		/// <summary>
		/// SerializationName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationNameDomainPropertyId = new global::System.Guid(0x06d17f35, 0x3a86, 0x49ad, 0x8b, 0xfd, 0x4e, 0x64, 0x56, 0xb4, 0x2d, 0xda);
		
		/// <summary>
		/// Storage for SerializationName
		/// </summary>
		private global::System.String serializationNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SerializationName domain property.
		/// Description for Tum.PDE.LanguageDSL.EnumerationLiteral.Serialization Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EnumerationLiteral/SerializationName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EnumerationLiteral/SerializationName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EnumerationLiteral/SerializationName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("06d17f35-3a86-49ad-8bfd-4e6456b42dda")]
		public global::System.String SerializationName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EnumerationLiteral.SerializationName domain property.
		/// </summary>
		internal sealed partial class SerializationNamePropertyHandler : DslModeling::DomainPropertyValueHandler<EnumerationLiteral, global::System.String>
		{
			private SerializationNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EnumerationLiteral.SerializationName domain property value handler.
			/// </summary>
			public static readonly SerializationNamePropertyHandler Instance = new SerializationNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EnumerationLiteral.SerializationName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EnumerationLiteral element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EnumerationLiteral element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsSerializationNameTracking domain property code
		
		/// <summary>
		/// IsSerializationNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsSerializationNameTrackingDomainPropertyId = new global::System.Guid(0xd3fab988, 0x0812, 0x499e, 0x9e, 0x0b, 0x9f, 0xd2, 0x60, 0x4c, 0x05, 0xee);
		
		/// <summary>
		/// Storage for IsSerializationNameTracking
		/// </summary>
		private TrackingEnum isSerializationNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsSerializationNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.EnumerationLiteral.Is Serialization Name
		/// Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EnumerationLiteral/IsSerializationNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.EnumerationLiteral/IsSerializationNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EnumerationLiteral/IsSerializationNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("d3fab988-0812-499e-9e0b-9fd2604c05ee")]
		public TrackingEnum IsSerializationNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isSerializationNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsSerializationNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EnumerationLiteral.IsSerializationNameTracking domain property.
		/// </summary>
		internal sealed partial class IsSerializationNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<EnumerationLiteral, TrackingEnum>
		{
			private IsSerializationNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EnumerationLiteral.IsSerializationNameTracking domain property value handler.
			/// </summary>
			public static readonly IsSerializationNameTrackingPropertyHandler Instance = new IsSerializationNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EnumerationLiteral.IsSerializationNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsSerializationNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(EnumerationLiteral element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isSerializationNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EnumerationLiteral element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isSerializationNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DomainEnumeration opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainEnumeration.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.EnumerationLiteral
		/// </summary>
		public virtual DomainEnumeration DomainEnumeration
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.EnumerationLiteralDomainRoleId) as DomainEnumeration;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.EnumerationLiteralDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass DiagramClass
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("062ecb95-5e81-4ca8-b43d-b0505202603b")]
	public abstract partial class DiagramClassBase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DiagramClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x062ecb95, 0x5e81, 0x4ca8, 0xb4, 0x3d, 0xb0, 0x50, 0x52, 0x02, 0x60, 0x3b);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DiagramClassBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0xaba80568, 0xa75a, 0x4152, 0x8b, 0x07, 0x16, 0xae, 0xaf, 0x85, 0x94, 0x1a);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.DiagramClass.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramClass/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DiagramClass/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramClass/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("aba80568-a75a-4152-8b07-16aeaf85941a")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DiagramClass.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<DiagramClassBase, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DiagramClass.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DiagramClass.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DiagramClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DiagramClassBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Title domain property code
		
		/// <summary>
		/// Title domain property Id.
		/// </summary>
		public static readonly global::System.Guid TitleDomainPropertyId = new global::System.Guid(0x960eb93f, 0x2e08, 0x48b2, 0xb6, 0xe0, 0x6e, 0xf1, 0xfd, 0x0f, 0x47, 0x0a);
		
		/// <summary>
		/// Storage for Title
		/// </summary>
		private global::System.String titlePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Title domain property.
		/// Description for Tum.PDE.LanguageDSL.DiagramClass.Title
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramClass/Title.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DiagramClass/Title.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramClass/Title.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("960eb93f-2e08-48b2-b6e0-6ef1fd0f470a")]
		public global::System.String Title
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return titlePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TitlePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DiagramClass.Title domain property.
		/// </summary>
		internal sealed partial class TitlePropertyHandler : DslModeling::DomainPropertyValueHandler<DiagramClassBase, global::System.String>
		{
			private TitlePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DiagramClass.Title domain property value handler.
			/// </summary>
			public static readonly TitlePropertyHandler Instance = new TitlePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DiagramClass.Title domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TitleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(DiagramClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.titlePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DiagramClassBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.titlePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsCustom domain property code
		
		/// <summary>
		/// IsCustom domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsCustomDomainPropertyId = new global::System.Guid(0x27fd4b35, 0x2e59, 0x48d9, 0xbd, 0x0d, 0x40, 0x36, 0xf2, 0x3a, 0x88, 0xc4);
		
		/// <summary>
		/// Storage for IsCustom
		/// </summary>
		private global::System.Boolean isCustomPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsCustom domain property.
		/// Description for Tum.PDE.LanguageDSL.DiagramClass.Is Custom
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramClass/IsCustom.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DiagramClass/IsCustom.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramClass/IsCustom.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("27fd4b35-2e59-48d9-bd0d-4036f23a88c4")]
		public global::System.Boolean IsCustom
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isCustomPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsCustomPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DiagramClass.IsCustom domain property.
		/// </summary>
		internal sealed partial class IsCustomPropertyHandler : DslModeling::DomainPropertyValueHandler<DiagramClassBase, global::System.Boolean>
		{
			private IsCustomPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DiagramClass.IsCustom domain property value handler.
			/// </summary>
			public static readonly IsCustomPropertyHandler Instance = new IsCustomPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DiagramClass.IsCustom domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsCustomDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DiagramClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isCustomPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DiagramClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isCustomPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region VisualizationBehavior domain property code
		
		/// <summary>
		/// VisualizationBehavior domain property Id.
		/// </summary>
		public static readonly global::System.Guid VisualizationBehaviorDomainPropertyId = new global::System.Guid(0xd2d714af, 0x4270, 0x4ddf, 0x8f, 0x13, 0x42, 0x53, 0x96, 0xa4, 0xea, 0x41);
		
		/// <summary>
		/// Storage for VisualizationBehavior
		/// </summary>
		private DiagramVisualizationBehavior visualizationBehaviorPropertyStorage = DiagramVisualizationBehavior.Extended;
		
		/// <summary>
		/// Gets or sets the value of VisualizationBehavior domain property.
		/// Description for Tum.PDE.LanguageDSL.DiagramClass.Visualization Behavior
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramClass/VisualizationBehavior.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.DiagramClass/VisualizationBehavior.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramClass/VisualizationBehavior.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(DiagramVisualizationBehavior.Extended)]
		[DslModeling::DomainObjectId("d2d714af-4270-4ddf-8f13-425396a4ea41")]
		public DiagramVisualizationBehavior VisualizationBehavior
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return visualizationBehaviorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				VisualizationBehaviorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DiagramClass.VisualizationBehavior domain property.
		/// </summary>
		internal sealed partial class VisualizationBehaviorPropertyHandler : DslModeling::DomainPropertyValueHandler<DiagramClassBase, DiagramVisualizationBehavior>
		{
			private VisualizationBehaviorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DiagramClass.VisualizationBehavior domain property value handler.
			/// </summary>
			public static readonly VisualizationBehaviorPropertyHandler Instance = new VisualizationBehaviorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DiagramClass.VisualizationBehavior domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return VisualizationBehaviorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed DiagramVisualizationBehavior GetValue(DiagramClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.visualizationBehaviorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DiagramClassBase element, DiagramVisualizationBehavior newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				DiagramVisualizationBehavior oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.visualizationBehaviorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DiagramClassView opposite domain role accessor
		/// <summary>
		/// Gets or sets DiagramClassView.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramClassViewReferencesDiagramClass.DiagramClass
		/// </summary>
		public virtual DiagramClassView DiagramClassView
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramClassViewReferencesDiagramClass.DiagramClassDomainRoleId) as DiagramClassView;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramClassViewReferencesDiagramClass.DiagramClassDomainRoleId, value);
			}
		}
		#endregion
		#region PresentationElements opposite domain role accessor
		
		/// <summary>
		/// Gets a list of PresentationElements.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.DiagramClass
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<PresentationElementClass> PresentationElements
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<PresentationElementClass>, PresentationElementClass>(global::Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.DiagramClassDomainRoleId);
			}
		}
		#endregion
		#region ModelContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ModelContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.DiagramClass
		/// </summary>
		public virtual LibraryModelContext ModelContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.DiagramClassDomainRoleId) as LibraryModelContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.DiagramClassDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.PresentationElementClass.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.PresentationElementClass sourcePresentationElementClass1 = sourceElement as global::Tum.PDE.LanguageDSL.PresentationElementClass;
			if (sourcePresentationElementClass1 != null)
			{
				// Create link for path DiagramClassHasPresentationElements.PresentationElements
				this.PresentationElements.Add(sourcePresentationElementClass1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.PresentationElementClass sourcePresentationElementClass1 = sourceElement as global::Tum.PDE.LanguageDSL.PresentationElementClass;
			if (sourcePresentationElementClass1 != null)
			{
				// Delete link for path DiagramClassHasPresentationElements.PresentationElements
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.GetLinks((global::Tum.PDE.LanguageDSL.DiagramClass)this, sourcePresentationElementClass1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.DiagramClassDomainRoleId, global::Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.PresentationElementClassDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass DiagramClass
	/// Description for Tum.PDE.LanguageDSL.DiagramClass
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class DiagramClass : DiagramClassBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DiagramClass(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DiagramClass(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass DiagramClassView
	/// Description for Tum.PDE.LanguageDSL.DiagramClassView
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramClassView.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramClassView.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("8d6eb420-78c9-47b5-8c01-e44e09895fed")]
	public partial class DiagramClassView : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DiagramClassView domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8d6eb420, 0x78c9, 0x47b5, 0x8c, 0x01, 0xe4, 0x4e, 0x09, 0x89, 0x5f, 0xed);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DiagramClassView(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DiagramClassView(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsExpanded domain property code
		
		/// <summary>
		/// IsExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsExpandedDomainPropertyId = new global::System.Guid(0xc4606acf, 0x80fe, 0x4624, 0x9e, 0x18, 0xee, 0xa5, 0x63, 0xe5, 0x57, 0xc2);
		
		/// <summary>
		/// Storage for IsExpanded
		/// </summary>
		private global::System.Boolean isExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.DiagramClassView.Is Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramClassView/IsExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramClassView/IsExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("c4606acf-80fe-4624-9e18-eea563e557c2")]
		public global::System.Boolean IsExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the DiagramClassView.IsExpanded domain property.
		/// </summary>
		internal sealed partial class IsExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<DiagramClassView, global::System.Boolean>
		{
			private IsExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the DiagramClassView.IsExpanded domain property value handler.
			/// </summary>
			public static readonly IsExpandedPropertyHandler Instance = new IsExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the DiagramClassView.IsExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(DiagramClassView element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(DiagramClassView element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DiagramClass opposite domain role accessor
		/// <summary>
		/// Gets or sets DiagramClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramClassViewReferencesDiagramClass.DiagramClassView
		/// </summary>
		public virtual DiagramClass DiagramClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramClassViewReferencesDiagramClass.DiagramClassViewDomainRoleId) as DiagramClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramClassViewReferencesDiagramClass.DiagramClassViewDomainRoleId, value);
			}
		}
		#endregion
		#region RootDiagramNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RootDiagramNodes.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.DiagramClassView
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<RootDiagramNode> RootDiagramNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<RootDiagramNode>, RootDiagramNode>(global::Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.DiagramClassViewDomainRoleId);
			}
		}
		#endregion
		#region DiagramView opposite domain role accessor
		/// <summary>
		/// Gets or sets DiagramView.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.DiagramClassView
		/// </summary>
		public virtual DiagramView DiagramView
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.DiagramClassViewDomainRoleId) as DiagramView;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.DiagramClassViewDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.RootDiagramNode.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.RootDiagramNode sourceRootDiagramNode1 = sourceElement as global::Tum.PDE.LanguageDSL.RootDiagramNode;
			if (sourceRootDiagramNode1 != null)
			{
				// Create link for path DiagramClassViewHasRootDiagramNodes.RootDiagramNodes
				this.RootDiagramNodes.Add(sourceRootDiagramNode1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.RootDiagramNode sourceRootDiagramNode1 = sourceElement as global::Tum.PDE.LanguageDSL.RootDiagramNode;
			if (sourceRootDiagramNode1 != null)
			{
				// Delete link for path DiagramClassViewHasRootDiagramNodes.RootDiagramNodes
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.GetLinks((global::Tum.PDE.LanguageDSL.DiagramClassView)this, sourceRootDiagramNode1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.DiagramClassViewDomainRoleId, global::Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.RootDiagramNodeDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass PresentationElementClass
	/// Description for Tum.PDE.LanguageDSL.PresentationElementClass
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PresentationElementClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PresentationElementClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("316511e2-97f6-494c-9e5b-39cd91f50f6f")]
	public abstract partial class PresentationElementClass : AttributedDomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// PresentationElementClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x316511e2, 0x97f6, 0x494c, 0x9e, 0x5b, 0x39, 0xcd, 0x91, 0xf5, 0x0f, 0x6f);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected PresentationElementClass(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region GeneratePropertiesVM domain property code
		
		/// <summary>
		/// GeneratePropertiesVM domain property Id.
		/// </summary>
		public static readonly global::System.Guid GeneratePropertiesVMDomainPropertyId = new global::System.Guid(0xc51f1744, 0x2190, 0x4356, 0xb0, 0x70, 0xf4, 0x3b, 0x62, 0xe3, 0x67, 0x57);
		
		/// <summary>
		/// Storage for GeneratePropertiesVM
		/// </summary>
		private global::System.Boolean generatePropertiesVMPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of GeneratePropertiesVM domain property.
		/// Description for Tum.PDE.LanguageDSL.PresentationElementClass.Generate Properties
		/// VM
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PresentationElementClass/GeneratePropertiesVM.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.PresentationElementClass/GeneratePropertiesVM.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PresentationElementClass/GeneratePropertiesVM.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("c51f1744-2190-4356-b070-f43b62e36757")]
		public global::System.Boolean GeneratePropertiesVM
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return generatePropertiesVMPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GeneratePropertiesVMPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the PresentationElementClass.GeneratePropertiesVM domain property.
		/// </summary>
		internal sealed partial class GeneratePropertiesVMPropertyHandler : DslModeling::DomainPropertyValueHandler<PresentationElementClass, global::System.Boolean>
		{
			private GeneratePropertiesVMPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the PresentationElementClass.GeneratePropertiesVM domain property value handler.
			/// </summary>
			public static readonly GeneratePropertiesVMPropertyHandler Instance = new GeneratePropertiesVMPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the PresentationElementClass.GeneratePropertiesVM domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GeneratePropertiesVMDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(PresentationElementClass element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.generatePropertiesVMPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(PresentationElementClass element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.generatePropertiesVMPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region GenerateShapePropertiesVM domain property code
		
		/// <summary>
		/// GenerateShapePropertiesVM domain property Id.
		/// </summary>
		public static readonly global::System.Guid GenerateShapePropertiesVMDomainPropertyId = new global::System.Guid(0x3e7b67ce, 0xafa2, 0x400b, 0xb7, 0xfd, 0x90, 0x9d, 0x9e, 0x0c, 0xff, 0x3c);
		
		/// <summary>
		/// Storage for GenerateShapePropertiesVM
		/// </summary>
		private global::System.Boolean generateShapePropertiesVMPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of GenerateShapePropertiesVM domain property.
		/// Description for Tum.PDE.LanguageDSL.PresentationElementClass.Generate Shape
		/// Properties VM
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PresentationElementClass/GenerateShapePropertiesVM.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.PresentationElementClass/GenerateShapePropertiesVM.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PresentationElementClass/GenerateShapePropertiesVM.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3e7b67ce-afa2-400b-b7fd-909d9e0cff3c")]
		public global::System.Boolean GenerateShapePropertiesVM
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return generateShapePropertiesVMPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GenerateShapePropertiesVMPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the PresentationElementClass.GenerateShapePropertiesVM domain property.
		/// </summary>
		internal sealed partial class GenerateShapePropertiesVMPropertyHandler : DslModeling::DomainPropertyValueHandler<PresentationElementClass, global::System.Boolean>
		{
			private GenerateShapePropertiesVMPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the PresentationElementClass.GenerateShapePropertiesVM domain property value handler.
			/// </summary>
			public static readonly GenerateShapePropertiesVMPropertyHandler Instance = new GenerateShapePropertiesVMPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the PresentationElementClass.GenerateShapePropertiesVM domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GenerateShapePropertiesVMDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(PresentationElementClass element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.generateShapePropertiesVMPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(PresentationElementClass element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.generateShapePropertiesVMPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DiagramClass opposite domain role accessor
		/// <summary>
		/// Gets or sets DiagramClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.PresentationElementClass
		/// </summary>
		public virtual DiagramClass DiagramClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.PresentationElementClassDomainRoleId) as DiagramClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.PresentationElementClassDomainRoleId, value);
			}
		}
		#endregion
		#region DiagramTreeNode opposite domain role accessor
		/// <summary>
		/// Gets or sets DiagramTreeNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramTreeNodeReferencesPresentationElementClass.PresentationElementClass
		/// </summary>
		public virtual DiagramTreeNode DiagramTreeNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramTreeNodeReferencesPresentationElementClass.PresentationElementClassDomainRoleId) as DiagramTreeNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramTreeNodeReferencesPresentationElementClass.PresentationElementClassDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass ShapeClass
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f2a50461-68e0-434b-8041-76cb95f1c8e5")]
	public abstract partial class ShapeClassBase : PresentationDomainClassElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ShapeClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf2a50461, 0x68e0, 0x434b, 0x80, 0x41, 0x76, 0xcb, 0x95, 0xf1, 0xc8, 0xe5);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ShapeClassBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DefaultWidth domain property code
		
		/// <summary>
		/// DefaultWidth domain property Id.
		/// </summary>
		public static readonly global::System.Guid DefaultWidthDomainPropertyId = new global::System.Guid(0xb0e8f0c7, 0xfa14, 0x43fe, 0x98, 0x05, 0x06, 0x39, 0x07, 0x5b, 0x03, 0x6f);
		
		/// <summary>
		/// Storage for DefaultWidth
		/// </summary>
		private global::System.Double defaultWidthPropertyStorage = 150D;
		
		/// <summary>
		/// Gets or sets the value of DefaultWidth domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Default Width
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/DefaultWidth.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/DefaultWidth.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/DefaultWidth.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(150D)]
		[DslModeling::DomainObjectId("b0e8f0c7-fa14-43fe-9805-0639075b036f")]
		public global::System.Double DefaultWidth
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return defaultWidthPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DefaultWidthPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.DefaultWidth domain property.
		/// </summary>
		internal sealed partial class DefaultWidthPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Double>
		{
			private DefaultWidthPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.DefaultWidth domain property value handler.
			/// </summary>
			public static readonly DefaultWidthPropertyHandler Instance = new DefaultWidthPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.DefaultWidth domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DefaultWidthDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.defaultWidthPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Double newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Double oldValue = GetValue(element);
				// double type precision is guaranteed only to 15th digit.
				if (global::System.Math.Abs(newValue - oldValue) > 1e-15)
				{
					ValueChanging(element, oldValue, newValue);
					element.defaultWidthPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DefaultHeight domain property code
		
		/// <summary>
		/// DefaultHeight domain property Id.
		/// </summary>
		public static readonly global::System.Guid DefaultHeightDomainPropertyId = new global::System.Guid(0x37949dfb, 0x8351, 0x411b, 0x93, 0xa3, 0xf6, 0xab, 0xe0, 0x04, 0x62, 0x0c);
		
		/// <summary>
		/// Storage for DefaultHeight
		/// </summary>
		private global::System.Double defaultHeightPropertyStorage = 50D;
		
		/// <summary>
		/// Gets or sets the value of DefaultHeight domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Default Height
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/DefaultHeight.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/DefaultHeight.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/DefaultHeight.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(50D)]
		[DslModeling::DomainObjectId("37949dfb-8351-411b-93a3-f6abe004620c")]
		public global::System.Double DefaultHeight
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return defaultHeightPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DefaultHeightPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.DefaultHeight domain property.
		/// </summary>
		internal sealed partial class DefaultHeightPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Double>
		{
			private DefaultHeightPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.DefaultHeight domain property value handler.
			/// </summary>
			public static readonly DefaultHeightPropertyHandler Instance = new DefaultHeightPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.DefaultHeight domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DefaultHeightDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.defaultHeightPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Double newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Double oldValue = GetValue(element);
				// double type precision is guaranteed only to 15th digit.
				if (global::System.Math.Abs(newValue - oldValue) > 1e-15)
				{
					ValueChanging(element, oldValue, newValue);
					element.defaultHeightPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsFixedWidth domain property code
		
		/// <summary>
		/// IsFixedWidth domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsFixedWidthDomainPropertyId = new global::System.Guid(0x55ab9bac, 0x2caa, 0x4f62, 0xbe, 0xe2, 0x59, 0xbd, 0x03, 0xe5, 0x21, 0xf9);
		
		/// <summary>
		/// Storage for IsFixedWidth
		/// </summary>
		private global::System.Boolean isFixedWidthPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsFixedWidth domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Is Fixed Width
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/IsFixedWidth.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/IsFixedWidth.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/IsFixedWidth.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("55ab9bac-2caa-4f62-bee2-59bd03e521f9")]
		public global::System.Boolean IsFixedWidth
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isFixedWidthPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsFixedWidthPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.IsFixedWidth domain property.
		/// </summary>
		internal sealed partial class IsFixedWidthPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Boolean>
		{
			private IsFixedWidthPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.IsFixedWidth domain property value handler.
			/// </summary>
			public static readonly IsFixedWidthPropertyHandler Instance = new IsFixedWidthPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.IsFixedWidth domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsFixedWidthDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isFixedWidthPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isFixedWidthPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsFixedHeight domain property code
		
		/// <summary>
		/// IsFixedHeight domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsFixedHeightDomainPropertyId = new global::System.Guid(0x1060a8a2, 0x169c, 0x4bd3, 0x94, 0x27, 0xb6, 0x13, 0xe4, 0x8d, 0x8a, 0xcc);
		
		/// <summary>
		/// Storage for IsFixedHeight
		/// </summary>
		private global::System.Boolean isFixedHeightPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsFixedHeight domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Is Fixed Height
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/IsFixedHeight.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/IsFixedHeight.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/IsFixedHeight.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1060a8a2-169c-4bd3-9427-b613e48d8acc")]
		public global::System.Boolean IsFixedHeight
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isFixedHeightPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsFixedHeightPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.IsFixedHeight domain property.
		/// </summary>
		internal sealed partial class IsFixedHeightPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Boolean>
		{
			private IsFixedHeightPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.IsFixedHeight domain property value handler.
			/// </summary>
			public static readonly IsFixedHeightPropertyHandler Instance = new IsFixedHeightPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.IsFixedHeight domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsFixedHeightDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isFixedHeightPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isFixedHeightPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsRelativeChild domain property code
		
		/// <summary>
		/// IsRelativeChild domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsRelativeChildDomainPropertyId = new global::System.Guid(0xf2d4acef, 0xaa56, 0x4d55, 0xae, 0xa2, 0x06, 0x40, 0x6e, 0xd3, 0x44, 0xd3);
		
		/// <summary>
		/// Storage for IsRelativeChild
		/// </summary>
		private global::System.Boolean isRelativeChildPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsRelativeChild domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Is Relative Child
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/IsRelativeChild.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/IsRelativeChild.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/IsRelativeChild.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f2d4acef-aa56-4d55-aea2-06406ed344d3")]
		public global::System.Boolean IsRelativeChild
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isRelativeChildPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsRelativeChildPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.IsRelativeChild domain property.
		/// </summary>
		internal sealed partial class IsRelativeChildPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Boolean>
		{
			private IsRelativeChildPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.IsRelativeChild domain property value handler.
			/// </summary>
			public static readonly IsRelativeChildPropertyHandler Instance = new IsRelativeChildPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.IsRelativeChild domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsRelativeChildDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isRelativeChildPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isRelativeChildPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region RelativeChildBehaviour domain property code
		
		/// <summary>
		/// RelativeChildBehaviour domain property Id.
		/// </summary>
		public static readonly global::System.Guid RelativeChildBehaviourDomainPropertyId = new global::System.Guid(0xa2d1b5f5, 0x2039, 0x45f7, 0x9b, 0x19, 0xa4, 0x3e, 0x6a, 0x6f, 0xfc, 0xc7);
		
		/// <summary>
		/// Storage for RelativeChildBehaviour
		/// </summary>
		private RelativeChildBehaviour relativeChildBehaviourPropertyStorage = RelativeChildBehaviour.PositionRelativeToParent;
		
		/// <summary>
		/// Gets or sets the value of RelativeChildBehaviour domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Relative Child Behaviour
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/RelativeChildBehaviour.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/RelativeChildBehaviour.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/RelativeChildBehaviour.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(RelativeChildBehaviour.PositionRelativeToParent)]
		[DslModeling::DomainObjectId("a2d1b5f5-2039-45f7-9b19-a43e6a6ffcc7")]
		public RelativeChildBehaviour RelativeChildBehaviour
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return relativeChildBehaviourPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				RelativeChildBehaviourPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.RelativeChildBehaviour domain property.
		/// </summary>
		internal sealed partial class RelativeChildBehaviourPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, RelativeChildBehaviour>
		{
			private RelativeChildBehaviourPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.RelativeChildBehaviour domain property value handler.
			/// </summary>
			public static readonly RelativeChildBehaviourPropertyHandler Instance = new RelativeChildBehaviourPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.RelativeChildBehaviour domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return RelativeChildBehaviourDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed RelativeChildBehaviour GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.relativeChildBehaviourPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, RelativeChildBehaviour newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				RelativeChildBehaviour oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.relativeChildBehaviourPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsAutoGenerated domain property code
		
		/// <summary>
		/// IsAutoGenerated domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsAutoGeneratedDomainPropertyId = new global::System.Guid(0x7ea8e7d1, 0xb300, 0x4bc3, 0x8c, 0x57, 0x3a, 0xf7, 0x8e, 0x83, 0xa0, 0xa4);
		
		/// <summary>
		/// Storage for IsAutoGenerated
		/// </summary>
		private global::System.Boolean isAutoGeneratedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsAutoGenerated domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Is Auto Generated
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/IsAutoGenerated.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/IsAutoGenerated.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/IsAutoGenerated.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("7ea8e7d1-b300-4bc3-8c57-3af78e83a0a4")]
		public global::System.Boolean IsAutoGenerated
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isAutoGeneratedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsAutoGeneratedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.IsAutoGenerated domain property.
		/// </summary>
		internal sealed partial class IsAutoGeneratedPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Boolean>
		{
			private IsAutoGeneratedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.IsAutoGenerated domain property value handler.
			/// </summary>
			public static readonly IsAutoGeneratedPropertyHandler Instance = new IsAutoGeneratedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.IsAutoGenerated domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsAutoGeneratedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isAutoGeneratedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isAutoGeneratedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BorderThickness domain property code
		
		/// <summary>
		/// BorderThickness domain property Id.
		/// </summary>
		public static readonly global::System.Guid BorderThicknessDomainPropertyId = new global::System.Guid(0xdba80fc8, 0x813e, 0x46b1, 0xbf, 0xf7, 0x4e, 0x53, 0xa0, 0xe7, 0xba, 0xf6);
		
		/// <summary>
		/// Storage for BorderThickness
		/// </summary>
		private global::System.Double borderThicknessPropertyStorage = 1D;
		
		/// <summary>
		/// Gets or sets the value of BorderThickness domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Border Thickness
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/BorderThickness.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/BorderThickness.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/BorderThickness.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(1D)]
		[DslModeling::DomainObjectId("dba80fc8-813e-46b1-bff7-4e53a0e7baf6")]
		public global::System.Double BorderThickness
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return borderThicknessPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BorderThicknessPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.BorderThickness domain property.
		/// </summary>
		internal sealed partial class BorderThicknessPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Double>
		{
			private BorderThicknessPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.BorderThickness domain property value handler.
			/// </summary>
			public static readonly BorderThicknessPropertyHandler Instance = new BorderThicknessPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.BorderThickness domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BorderThicknessDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.borderThicknessPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Double newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Double oldValue = GetValue(element);
				// double type precision is guaranteed only to 15th digit.
				if (global::System.Math.Abs(newValue - oldValue) > 1e-15)
				{
					ValueChanging(element, oldValue, newValue);
					element.borderThicknessPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BackgroundBrush domain property code
		
		/// <summary>
		/// BackgroundBrush domain property Id.
		/// </summary>
		public static readonly global::System.Guid BackgroundBrushDomainPropertyId = new global::System.Guid(0x381b9e50, 0xd93b, 0x4c20, 0xbb, 0x71, 0x17, 0xd5, 0x3b, 0x7d, 0x7d, 0x99);
		
		/// <summary>
		/// Storage for BackgroundBrush
		/// </summary>
		private global::System.Drawing.Color backgroundBrushPropertyStorage = DslModeling::SerializationUtilities.GetValue<global::System.Drawing.Color>("White");
		
		/// <summary>
		/// Gets or sets the value of BackgroundBrush domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Background Brush
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/BackgroundBrush.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/BackgroundBrush.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/BackgroundBrush.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(typeof(global::System.Drawing.Color), "White")]
		[DslModeling::DomainObjectId("381b9e50-d93b-4c20-bb71-17d53b7d7d99")]
		public global::System.Drawing.Color BackgroundBrush
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return backgroundBrushPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BackgroundBrushPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.BackgroundBrush domain property.
		/// </summary>
		internal sealed partial class BackgroundBrushPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Drawing.Color>
		{
			private BackgroundBrushPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.BackgroundBrush domain property value handler.
			/// </summary>
			public static readonly BackgroundBrushPropertyHandler Instance = new BackgroundBrushPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.BackgroundBrush domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BackgroundBrushDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Drawing.Color GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.backgroundBrushPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Drawing.Color newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Drawing.Color oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.backgroundBrushPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BorderBrush domain property code
		
		/// <summary>
		/// BorderBrush domain property Id.
		/// </summary>
		public static readonly global::System.Guid BorderBrushDomainPropertyId = new global::System.Guid(0x3c94a1b2, 0x7fdf, 0x4bde, 0xb7, 0x96, 0xc6, 0x3b, 0x4e, 0xfc, 0x5e, 0x86);
		
		/// <summary>
		/// Storage for BorderBrush
		/// </summary>
		private global::System.Drawing.Color borderBrushPropertyStorage = DslModeling::SerializationUtilities.GetValue<global::System.Drawing.Color>("Black");
		
		/// <summary>
		/// Gets or sets the value of BorderBrush domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Border Brush
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/BorderBrush.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/BorderBrush.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/BorderBrush.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(typeof(global::System.Drawing.Color), "Black")]
		[DslModeling::DomainObjectId("3c94a1b2-7fdf-4bde-b796-c63b4efc5e86")]
		public global::System.Drawing.Color BorderBrush
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return borderBrushPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BorderBrushPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.BorderBrush domain property.
		/// </summary>
		internal sealed partial class BorderBrushPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Drawing.Color>
		{
			private BorderBrushPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.BorderBrush domain property value handler.
			/// </summary>
			public static readonly BorderBrushPropertyHandler Instance = new BorderBrushPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.BorderBrush domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BorderBrushDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Drawing.Color GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.borderBrushPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Drawing.Color newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Drawing.Color oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.borderBrushPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BorderOuterBrush domain property code
		
		/// <summary>
		/// BorderOuterBrush domain property Id.
		/// </summary>
		public static readonly global::System.Guid BorderOuterBrushDomainPropertyId = new global::System.Guid(0xb779f807, 0xe8ba, 0x4763, 0xb9, 0xc7, 0xb2, 0xbc, 0x0c, 0xd2, 0x57, 0x91);
		
		/// <summary>
		/// Storage for BorderOuterBrush
		/// </summary>
		private global::System.Drawing.Color borderOuterBrushPropertyStorage = DslModeling::SerializationUtilities.GetValue<global::System.Drawing.Color>("White");
		
		/// <summary>
		/// Gets or sets the value of BorderOuterBrush domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Border Outer Brush
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/BorderOuterBrush.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/BorderOuterBrush.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/BorderOuterBrush.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(typeof(global::System.Drawing.Color), "White")]
		[DslModeling::DomainObjectId("b779f807-e8ba-4763-b9c7-b2bc0cd25791")]
		public global::System.Drawing.Color BorderOuterBrush
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return borderOuterBrushPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BorderOuterBrushPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.BorderOuterBrush domain property.
		/// </summary>
		internal sealed partial class BorderOuterBrushPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Drawing.Color>
		{
			private BorderOuterBrushPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.BorderOuterBrush domain property value handler.
			/// </summary>
			public static readonly BorderOuterBrushPropertyHandler Instance = new BorderOuterBrushPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.BorderOuterBrush domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BorderOuterBrushDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Drawing.Color GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.borderOuterBrushPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Drawing.Color newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Drawing.Color oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.borderOuterBrushPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BorderOuterSize domain property code
		
		/// <summary>
		/// BorderOuterSize domain property Id.
		/// </summary>
		public static readonly global::System.Guid BorderOuterSizeDomainPropertyId = new global::System.Guid(0x162a361f, 0x22ba, 0x4815, 0x84, 0x1a, 0xbb, 0xa6, 0xee, 0x83, 0xd0, 0x56);
		
		/// <summary>
		/// Storage for BorderOuterSize
		/// </summary>
		private global::System.Double borderOuterSizePropertyStorage = 3D;
		
		/// <summary>
		/// Gets or sets the value of BorderOuterSize domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Border Outer Size
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/BorderOuterSize.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/BorderOuterSize.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/BorderOuterSize.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(3D)]
		[DslModeling::DomainObjectId("162a361f-22ba-4815-841a-bba6ee83d056")]
		public global::System.Double BorderOuterSize
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return borderOuterSizePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BorderOuterSizePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.BorderOuterSize domain property.
		/// </summary>
		internal sealed partial class BorderOuterSizePropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Double>
		{
			private BorderOuterSizePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.BorderOuterSize domain property value handler.
			/// </summary>
			public static readonly BorderOuterSizePropertyHandler Instance = new BorderOuterSizePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.BorderOuterSize domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BorderOuterSizeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.borderOuterSizePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Double newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Double oldValue = GetValue(element);
				// double type precision is guaranteed only to 15th digit.
				if (global::System.Math.Abs(newValue - oldValue) > 1e-15)
				{
					ValueChanging(element, oldValue, newValue);
					element.borderOuterSizePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BorderCornerRadius domain property code
		
		/// <summary>
		/// BorderCornerRadius domain property Id.
		/// </summary>
		public static readonly global::System.Guid BorderCornerRadiusDomainPropertyId = new global::System.Guid(0x853fdcb1, 0x1724, 0x4808, 0x90, 0x62, 0x3d, 0xa9, 0xe2, 0xbe, 0xa6, 0xa6);
		
		/// <summary>
		/// Storage for BorderCornerRadius
		/// </summary>
		private global::System.Double borderCornerRadiusPropertyStorage = 1D;
		
		/// <summary>
		/// Gets or sets the value of BorderCornerRadius domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Border Corner Radius
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/BorderCornerRadius.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/BorderCornerRadius.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/BorderCornerRadius.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(1D)]
		[DslModeling::DomainObjectId("853fdcb1-1724-4808-9062-3da9e2bea6a6")]
		public global::System.Double BorderCornerRadius
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return borderCornerRadiusPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BorderCornerRadiusPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.BorderCornerRadius domain property.
		/// </summary>
		internal sealed partial class BorderCornerRadiusPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Double>
		{
			private BorderCornerRadiusPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.BorderCornerRadius domain property value handler.
			/// </summary>
			public static readonly BorderCornerRadiusPropertyHandler Instance = new BorderCornerRadiusPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.BorderCornerRadius domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BorderCornerRadiusDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.borderCornerRadiusPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Double newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Double oldValue = GetValue(element);
				// double type precision is guaranteed only to 15th digit.
				if (global::System.Math.Abs(newValue - oldValue) > 1e-15)
				{
					ValueChanging(element, oldValue, newValue);
					element.borderCornerRadiusPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BorderIsHitTestVisible domain property code
		
		/// <summary>
		/// BorderIsHitTestVisible domain property Id.
		/// </summary>
		public static readonly global::System.Guid BorderIsHitTestVisibleDomainPropertyId = new global::System.Guid(0x65e2afd6, 0xfb6a, 0x4e3e, 0x87, 0xe0, 0x72, 0xfa, 0x2f, 0xc6, 0x0c, 0x95);
		
		/// <summary>
		/// Storage for BorderIsHitTestVisible
		/// </summary>
		private global::System.Boolean borderIsHitTestVisiblePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of BorderIsHitTestVisible domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Border Is Hit Test Visible
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/BorderIsHitTestVisible.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/BorderIsHitTestVisible.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/BorderIsHitTestVisible.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("65e2afd6-fb6a-4e3e-87e0-72fa2fc60c95")]
		public global::System.Boolean BorderIsHitTestVisible
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return borderIsHitTestVisiblePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BorderIsHitTestVisiblePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.BorderIsHitTestVisible domain property.
		/// </summary>
		internal sealed partial class BorderIsHitTestVisiblePropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Boolean>
		{
			private BorderIsHitTestVisiblePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.BorderIsHitTestVisible domain property value handler.
			/// </summary>
			public static readonly BorderIsHitTestVisiblePropertyHandler Instance = new BorderIsHitTestVisiblePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.BorderIsHitTestVisible domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BorderIsHitTestVisibleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.borderIsHitTestVisiblePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.borderIsHitTestVisiblePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BorderFocusable domain property code
		
		/// <summary>
		/// BorderFocusable domain property Id.
		/// </summary>
		public static readonly global::System.Guid BorderFocusableDomainPropertyId = new global::System.Guid(0xa0baa39d, 0x44bf, 0x4529, 0xb0, 0xb3, 0x9e, 0xd8, 0x02, 0xea, 0xe6, 0x3f);
		
		/// <summary>
		/// Storage for BorderFocusable
		/// </summary>
		private global::System.Boolean borderFocusablePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of BorderFocusable domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Border Focusable
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/BorderFocusable.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/BorderFocusable.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/BorderFocusable.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("a0baa39d-44bf-4529-b0b3-9ed802eae63f")]
		public global::System.Boolean BorderFocusable
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return borderFocusablePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BorderFocusablePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.BorderFocusable domain property.
		/// </summary>
		internal sealed partial class BorderFocusablePropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Boolean>
		{
			private BorderFocusablePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.BorderFocusable domain property value handler.
			/// </summary>
			public static readonly BorderFocusablePropertyHandler Instance = new BorderFocusablePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.BorderFocusable domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BorderFocusableDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.borderFocusablePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.borderFocusablePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MenuIconUri domain property code
		
		/// <summary>
		/// MenuIconUri domain property Id.
		/// </summary>
		public static readonly global::System.Guid MenuIconUriDomainPropertyId = new global::System.Guid(0xdacf000b, 0x0a55, 0x4d33, 0x8c, 0x10, 0x91, 0x39, 0xe3, 0x5e, 0x8c, 0x85);
		
		/// <summary>
		/// Storage for MenuIconUri
		/// </summary>
		private global::System.String menuIconUriPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of MenuIconUri domain property.
		/// Absolute Uri to an menu icon that should be used in the insert menu bar to
		/// represent this shape.
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/MenuIconUri.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/MenuIconUri.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/MenuIconUri.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("dacf000b-0a55-4d33-8c10-9139e35e8c85")]
		public global::System.String MenuIconUri
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return menuIconUriPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				MenuIconUriPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.MenuIconUri domain property.
		/// </summary>
		internal sealed partial class MenuIconUriPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.String>
		{
			private MenuIconUriPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.MenuIconUri domain property value handler.
			/// </summary>
			public static readonly MenuIconUriPropertyHandler Instance = new MenuIconUriPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.MenuIconUri domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return MenuIconUriDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.menuIconUriPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.menuIconUriPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region UseInDependencyView domain property code
		
		/// <summary>
		/// UseInDependencyView domain property Id.
		/// </summary>
		public static readonly global::System.Guid UseInDependencyViewDomainPropertyId = new global::System.Guid(0x1d5817ea, 0xaf7c, 0x4d99, 0x83, 0x53, 0xdb, 0xc7, 0x68, 0x9d, 0x87, 0xf0);
		
		/// <summary>
		/// Storage for UseInDependencyView
		/// </summary>
		private global::System.Boolean useInDependencyViewPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of UseInDependencyView domain property.
		/// Description for Tum.PDE.LanguageDSL.ShapeClass.Use In Dependency View
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ShapeClass/UseInDependencyView.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ShapeClass/UseInDependencyView.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ShapeClass/UseInDependencyView.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1d5817ea-af7c-4d99-8353-dbc7689d87f0")]
		public global::System.Boolean UseInDependencyView
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return useInDependencyViewPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UseInDependencyViewPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ShapeClass.UseInDependencyView domain property.
		/// </summary>
		internal sealed partial class UseInDependencyViewPropertyHandler : DslModeling::DomainPropertyValueHandler<ShapeClassBase, global::System.Boolean>
		{
			private UseInDependencyViewPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ShapeClass.UseInDependencyView domain property value handler.
			/// </summary>
			public static readonly UseInDependencyViewPropertyHandler Instance = new UseInDependencyViewPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ShapeClass.UseInDependencyView domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UseInDependencyViewDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.useInDependencyViewPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.useInDependencyViewPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Children opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Children.
		/// Description for Tum.PDE.LanguageDSL.ShapeClassReferencesChildren.Parent
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ShapeClass> Children
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ShapeClass>, ShapeClass>(global::Tum.PDE.LanguageDSL.ShapeClassReferencesChildren.ParentDomainRoleId);
			}
		}
		#endregion
		#region Parent opposite domain role accessor
		/// <summary>
		/// Gets or sets Parent.
		/// Description for Tum.PDE.LanguageDSL.ShapeClassReferencesChildren.Child
		/// </summary>
		public virtual ShapeClass Parent
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassReferencesChildren.ChildDomainRoleId) as ShapeClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassReferencesChildren.ChildDomainRoleId, value);
			}
		}
		#endregion
		#region BaseShape opposite domain role accessor
		/// <summary>
		/// Gets or sets BaseShape.
		/// Description for Tum.PDE.LanguageDSL.ShapeClassReferencesBaseShape.DerivedShape
		/// </summary>
		public virtual ShapeClass BaseShape
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassReferencesBaseShape.DerivedShapeDomainRoleId) as ShapeClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassReferencesBaseShape.DerivedShapeDomainRoleId, value);
			}
		}
		#endregion
		#region DerivedShapes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DerivedShapes.
		/// Description for Tum.PDE.LanguageDSL.ShapeClassReferencesBaseShape.BaseShape
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ShapeClass> DerivedShapes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ShapeClass>, ShapeClass>(global::Tum.PDE.LanguageDSL.ShapeClassReferencesBaseShape.BaseShapeDomainRoleId);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass ShapeClass
	/// Description for Tum.PDE.LanguageDSL.ShapeClass
	/// </summary>
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
			
	public partial class ShapeClass : ShapeClassBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ShapeClass(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ShapeClass(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass RelationshipShapeClass
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RelationshipShapeClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelationshipShapeClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ba10b812-d4f3-4048-8b4f-1df5ce5a85b7")]
	public abstract partial class RelationshipShapeClassBase : PresentationElementClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// RelationshipShapeClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xba10b812, 0xd4f3, 0x4048, 0x8b, 0x4f, 0x1d, 0xf5, 0xce, 0x5a, 0x85, 0xb7);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected RelationshipShapeClassBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsAutoGenerated domain property code
		
		/// <summary>
		/// IsAutoGenerated domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsAutoGeneratedDomainPropertyId = new global::System.Guid(0x3516b91f, 0xf90d, 0x4878, 0x9c, 0x15, 0x9b, 0x3b, 0x63, 0xbd, 0x3d, 0xdb);
		
		/// <summary>
		/// Storage for IsAutoGenerated
		/// </summary>
		private global::System.Boolean isAutoGeneratedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsAutoGenerated domain property.
		/// Description for Tum.PDE.LanguageDSL.RelationshipShapeClass.Is Auto Generated
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/IsAutoGenerated.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/IsAutoGenerated.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/IsAutoGenerated.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("3516b91f-f90d-4878-9c15-9b3b63bd3ddb")]
		public global::System.Boolean IsAutoGenerated
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isAutoGeneratedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsAutoGeneratedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the RelationshipShapeClass.IsAutoGenerated domain property.
		/// </summary>
		internal sealed partial class IsAutoGeneratedPropertyHandler : DslModeling::DomainPropertyValueHandler<RelationshipShapeClassBase, global::System.Boolean>
		{
			private IsAutoGeneratedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the RelationshipShapeClass.IsAutoGenerated domain property value handler.
			/// </summary>
			public static readonly IsAutoGeneratedPropertyHandler Instance = new IsAutoGeneratedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the RelationshipShapeClass.IsAutoGenerated domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsAutoGeneratedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(RelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isAutoGeneratedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(RelationshipShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isAutoGeneratedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region StartAnchorStyle domain property code
		
		/// <summary>
		/// StartAnchorStyle domain property Id.
		/// </summary>
		public static readonly global::System.Guid StartAnchorStyleDomainPropertyId = new global::System.Guid(0xdadf5124, 0xcd8e, 0x4bab, 0xae, 0xdf, 0x66, 0x90, 0x20, 0xf1, 0x0a, 0x5e);
		
		/// <summary>
		/// Storage for StartAnchorStyle
		/// </summary>
		private AnchorStyle startAnchorStylePropertyStorage = AnchorStyle.None;
		
		/// <summary>
		/// Gets or sets the value of StartAnchorStyle domain property.
		/// Description for Tum.PDE.LanguageDSL.RelationshipShapeClass.Start Anchor Style
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/StartAnchorStyle.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/StartAnchorStyle.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/StartAnchorStyle.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AnchorStyle.None)]
		[DslModeling::DomainObjectId("dadf5124-cd8e-4bab-aedf-669020f10a5e")]
		public AnchorStyle StartAnchorStyle
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return startAnchorStylePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				StartAnchorStylePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the RelationshipShapeClass.StartAnchorStyle domain property.
		/// </summary>
		internal sealed partial class StartAnchorStylePropertyHandler : DslModeling::DomainPropertyValueHandler<RelationshipShapeClassBase, AnchorStyle>
		{
			private StartAnchorStylePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the RelationshipShapeClass.StartAnchorStyle domain property value handler.
			/// </summary>
			public static readonly StartAnchorStylePropertyHandler Instance = new StartAnchorStylePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the RelationshipShapeClass.StartAnchorStyle domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return StartAnchorStyleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AnchorStyle GetValue(RelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.startAnchorStylePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(RelationshipShapeClassBase element, AnchorStyle newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AnchorStyle oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.startAnchorStylePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EndAnchorStyle domain property code
		
		/// <summary>
		/// EndAnchorStyle domain property Id.
		/// </summary>
		public static readonly global::System.Guid EndAnchorStyleDomainPropertyId = new global::System.Guid(0x02315616, 0x34d9, 0x4957, 0x94, 0x32, 0x9a, 0xf4, 0xc3, 0xd5, 0x73, 0xbe);
		
		/// <summary>
		/// Storage for EndAnchorStyle
		/// </summary>
		private AnchorStyle endAnchorStylePropertyStorage = AnchorStyle.None;
		
		/// <summary>
		/// Gets or sets the value of EndAnchorStyle domain property.
		/// Description for Tum.PDE.LanguageDSL.RelationshipShapeClass.End Anchor Style
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/EndAnchorStyle.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/EndAnchorStyle.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/EndAnchorStyle.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AnchorStyle.None)]
		[DslModeling::DomainObjectId("02315616-34d9-4957-9432-9af4c3d573be")]
		public AnchorStyle EndAnchorStyle
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return endAnchorStylePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EndAnchorStylePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the RelationshipShapeClass.EndAnchorStyle domain property.
		/// </summary>
		internal sealed partial class EndAnchorStylePropertyHandler : DslModeling::DomainPropertyValueHandler<RelationshipShapeClassBase, AnchorStyle>
		{
			private EndAnchorStylePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the RelationshipShapeClass.EndAnchorStyle domain property value handler.
			/// </summary>
			public static readonly EndAnchorStylePropertyHandler Instance = new EndAnchorStylePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the RelationshipShapeClass.EndAnchorStyle domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EndAnchorStyleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AnchorStyle GetValue(RelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.endAnchorStylePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(RelationshipShapeClassBase element, AnchorStyle newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AnchorStyle oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.endAnchorStylePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region StrokeThickness domain property code
		
		/// <summary>
		/// StrokeThickness domain property Id.
		/// </summary>
		public static readonly global::System.Guid StrokeThicknessDomainPropertyId = new global::System.Guid(0xc1dc003e, 0x81ef, 0x402f, 0x88, 0x6b, 0x03, 0x2e, 0xa3, 0xde, 0x2e, 0x6f);
		
		/// <summary>
		/// Storage for StrokeThickness
		/// </summary>
		private global::System.Double strokeThicknessPropertyStorage = 1D;
		
		/// <summary>
		/// Gets or sets the value of StrokeThickness domain property.
		/// Description for Tum.PDE.LanguageDSL.RelationshipShapeClass.Stroke Thickness
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/StrokeThickness.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/StrokeThickness.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/StrokeThickness.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(1D)]
		[DslModeling::DomainObjectId("c1dc003e-81ef-402f-886b-032ea3de2e6f")]
		public global::System.Double StrokeThickness
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return strokeThicknessPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				StrokeThicknessPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the RelationshipShapeClass.StrokeThickness domain property.
		/// </summary>
		internal sealed partial class StrokeThicknessPropertyHandler : DslModeling::DomainPropertyValueHandler<RelationshipShapeClassBase, global::System.Double>
		{
			private StrokeThicknessPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the RelationshipShapeClass.StrokeThickness domain property value handler.
			/// </summary>
			public static readonly StrokeThicknessPropertyHandler Instance = new StrokeThicknessPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the RelationshipShapeClass.StrokeThickness domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return StrokeThicknessDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(RelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.strokeThicknessPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(RelationshipShapeClassBase element, global::System.Double newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Double oldValue = GetValue(element);
				// double type precision is guaranteed only to 15th digit.
				if (global::System.Math.Abs(newValue - oldValue) > 1e-15)
				{
					ValueChanging(element, oldValue, newValue);
					element.strokeThicknessPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Stroke domain property code
		
		/// <summary>
		/// Stroke domain property Id.
		/// </summary>
		public static readonly global::System.Guid StrokeDomainPropertyId = new global::System.Guid(0xe844a992, 0x1deb, 0x4cd0, 0x81, 0xbe, 0xca, 0xe1, 0xd4, 0x7c, 0xfd, 0x86);
		
		/// <summary>
		/// Storage for Stroke
		/// </summary>
		private global::System.Drawing.Color strokePropertyStorage = DslModeling::SerializationUtilities.GetValue<global::System.Drawing.Color>("Gray");
		
		/// <summary>
		/// Gets or sets the value of Stroke domain property.
		/// Description for Tum.PDE.LanguageDSL.RelationshipShapeClass.Stroke
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/Stroke.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/Stroke.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelationshipShapeClass/Stroke.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(typeof(global::System.Drawing.Color), "Gray")]
		[DslModeling::DomainObjectId("e844a992-1deb-4cd0-81be-cae1d47cfd86")]
		public global::System.Drawing.Color Stroke
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return strokePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				StrokePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the RelationshipShapeClass.Stroke domain property.
		/// </summary>
		internal sealed partial class StrokePropertyHandler : DslModeling::DomainPropertyValueHandler<RelationshipShapeClassBase, global::System.Drawing.Color>
		{
			private StrokePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the RelationshipShapeClass.Stroke domain property value handler.
			/// </summary>
			public static readonly StrokePropertyHandler Instance = new StrokePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the RelationshipShapeClass.Stroke domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return StrokeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Drawing.Color GetValue(RelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.strokePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(RelationshipShapeClassBase element, global::System.Drawing.Color newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Drawing.Color oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.strokePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ShapeRelationshipNode opposite domain role accessor
		/// <summary>
		/// Gets or sets ShapeRelationshipNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.ShapeRelationshipNodeReferencesRelationshipShapeClass.RelationshipShapeClass
		/// </summary>
		public virtual ShapeRelationshipNode ShapeRelationshipNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeRelationshipNodeReferencesRelationshipShapeClass.RelationshipShapeClassDomainRoleId) as ShapeRelationshipNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeRelationshipNodeReferencesRelationshipShapeClass.RelationshipShapeClassDomainRoleId, value);
			}
		}
		#endregion
		#region ReferenceRelationship opposite domain role accessor
		/// <summary>
		/// Gets or sets ReferenceRelationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.RelationshipShapeClassReferencesReferenceRelationship.RelationshipShapeClass
		/// </summary>
		public virtual DomainRelationship ReferenceRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.RelationshipShapeClassReferencesReferenceRelationship.RelationshipShapeClassDomainRoleId) as DomainRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.RelationshipShapeClassReferencesReferenceRelationship.RelationshipShapeClassDomainRoleId, value);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass RelationshipShapeClass
	/// Description for Tum.PDE.LanguageDSL.RelationshipShapeClass
	/// </summary>
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
			
	public partial class RelationshipShapeClass : RelationshipShapeClassBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public RelationshipShapeClass(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public RelationshipShapeClass(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass GeneratedDomainElement
	/// Description for Tum.PDE.LanguageDSL.GeneratedDomainElement
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.GeneratedDomainElement.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.GeneratedDomainElement.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("150e1bd7-0f5d-4852-899a-021ed03fefe9")]
	public abstract partial class GeneratedDomainElement : NamedDomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// GeneratedDomainElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x150e1bd7, 0x0f5d, 0x4852, 0x89, 0x9a, 0x02, 0x1e, 0xd0, 0x3f, 0xef, 0xe9);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected GeneratedDomainElement(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region GeneratesDoubleDerived domain property code
		
		/// <summary>
		/// GeneratesDoubleDerived domain property Id.
		/// </summary>
		public static readonly global::System.Guid GeneratesDoubleDerivedDomainPropertyId = new global::System.Guid(0x428af4d6, 0xac29, 0x4f26, 0x88, 0x62, 0x9e, 0x06, 0xdc, 0xaf, 0x93, 0x7c);
		
		/// <summary>
		/// Storage for GeneratesDoubleDerived
		/// </summary>
		private global::System.Boolean generatesDoubleDerivedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of GeneratesDoubleDerived domain property.
		/// Description for Tum.PDE.LanguageDSL.GeneratedDomainElement.Generates Double
		/// Derived
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/GeneratesDoubleDerived.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/GeneratesDoubleDerived.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/GeneratesDoubleDerived.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("428af4d6-ac29-4f26-8862-9e06dcaf937c")]
		public global::System.Boolean GeneratesDoubleDerived
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return generatesDoubleDerivedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				GeneratesDoubleDerivedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the GeneratedDomainElement.GeneratesDoubleDerived domain property.
		/// </summary>
		internal sealed partial class GeneratesDoubleDerivedPropertyHandler : DslModeling::DomainPropertyValueHandler<GeneratedDomainElement, global::System.Boolean>
		{
			private GeneratesDoubleDerivedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the GeneratedDomainElement.GeneratesDoubleDerived domain property value handler.
			/// </summary>
			public static readonly GeneratesDoubleDerivedPropertyHandler Instance = new GeneratesDoubleDerivedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the GeneratedDomainElement.GeneratesDoubleDerived domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return GeneratesDoubleDerivedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(GeneratedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.generatesDoubleDerivedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(GeneratedDomainElement element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.generatesDoubleDerivedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region HasCustomConstructor domain property code
		
		/// <summary>
		/// HasCustomConstructor domain property Id.
		/// </summary>
		public static readonly global::System.Guid HasCustomConstructorDomainPropertyId = new global::System.Guid(0xf3504032, 0x1129, 0x46a2, 0xa2, 0x63, 0x26, 0x05, 0x3a, 0xe3, 0x1e, 0x62);
		
		/// <summary>
		/// Storage for HasCustomConstructor
		/// </summary>
		private global::System.Boolean hasCustomConstructorPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of HasCustomConstructor domain property.
		/// Description for Tum.PDE.LanguageDSL.GeneratedDomainElement.Has Custom
		/// Constructor
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/HasCustomConstructor.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/HasCustomConstructor.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/HasCustomConstructor.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f3504032-1129-46a2-a263-26053ae31e62")]
		public global::System.Boolean HasCustomConstructor
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return hasCustomConstructorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				HasCustomConstructorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the GeneratedDomainElement.HasCustomConstructor domain property.
		/// </summary>
		internal sealed partial class HasCustomConstructorPropertyHandler : DslModeling::DomainPropertyValueHandler<GeneratedDomainElement, global::System.Boolean>
		{
			private HasCustomConstructorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the GeneratedDomainElement.HasCustomConstructor domain property value handler.
			/// </summary>
			public static readonly HasCustomConstructorPropertyHandler Instance = new HasCustomConstructorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the GeneratedDomainElement.HasCustomConstructor domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return HasCustomConstructorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(GeneratedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.hasCustomConstructorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(GeneratedDomainElement element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.hasCustomConstructorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region AccessModifier domain property code
		
		/// <summary>
		/// AccessModifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid AccessModifierDomainPropertyId = new global::System.Guid(0x9554f9b3, 0x8587, 0x4aeb, 0x9a, 0x67, 0x67, 0x80, 0xb3, 0x09, 0x05, 0xbd);
		
		/// <summary>
		/// Storage for AccessModifier
		/// </summary>
		private AccessModifier accessModifierPropertyStorage = AccessModifier.Public;
		
		/// <summary>
		/// Gets or sets the value of AccessModifier domain property.
		/// Description for Tum.PDE.LanguageDSL.GeneratedDomainElement.Access Modifier
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/AccessModifier.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/AccessModifier.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/AccessModifier.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AccessModifier.Public)]
		[DslModeling::DomainObjectId("9554f9b3-8587-4aeb-9a67-6780b30905bd")]
		public AccessModifier AccessModifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return accessModifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				AccessModifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the GeneratedDomainElement.AccessModifier domain property.
		/// </summary>
		internal sealed partial class AccessModifierPropertyHandler : DslModeling::DomainPropertyValueHandler<GeneratedDomainElement, AccessModifier>
		{
			private AccessModifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the GeneratedDomainElement.AccessModifier domain property value handler.
			/// </summary>
			public static readonly AccessModifierPropertyHandler Instance = new AccessModifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the GeneratedDomainElement.AccessModifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AccessModifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AccessModifier GetValue(GeneratedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.accessModifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(GeneratedDomainElement element, AccessModifier newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AccessModifier oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.accessModifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region InheritanceModifier domain property code
		
		/// <summary>
		/// InheritanceModifier domain property Id.
		/// </summary>
		public static readonly global::System.Guid InheritanceModifierDomainPropertyId = new global::System.Guid(0xc55506b1, 0x10fc, 0x45ca, 0xb9, 0x49, 0x19, 0xb0, 0x84, 0xf4, 0xbb, 0x85);
		
		/// <summary>
		/// Storage for InheritanceModifier
		/// </summary>
		private InheritanceModifier inheritanceModifierPropertyStorage = InheritanceModifier.None;
		
		/// <summary>
		/// Gets or sets the value of InheritanceModifier domain property.
		/// Description for Tum.PDE.LanguageDSL.GeneratedDomainElement.Inheritance Modifier
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/InheritanceModifier.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/InheritanceModifier.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/InheritanceModifier.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(InheritanceModifier.None)]
		[DslModeling::DomainObjectId("c55506b1-10fc-45ca-b949-19b084f4bb85")]
		public InheritanceModifier InheritanceModifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return inheritanceModifierPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				InheritanceModifierPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the GeneratedDomainElement.InheritanceModifier domain property.
		/// </summary>
		internal sealed partial class InheritanceModifierPropertyHandler : DslModeling::DomainPropertyValueHandler<GeneratedDomainElement, InheritanceModifier>
		{
			private InheritanceModifierPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the GeneratedDomainElement.InheritanceModifier domain property value handler.
			/// </summary>
			public static readonly InheritanceModifierPropertyHandler Instance = new InheritanceModifierPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the GeneratedDomainElement.InheritanceModifier domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return InheritanceModifierDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed InheritanceModifier GetValue(GeneratedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.inheritanceModifierPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(GeneratedDomainElement element, InheritanceModifier newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				InheritanceModifier oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.inheritanceModifierPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Namespace domain property code
		
		/// <summary>
		/// Namespace domain property Id.
		/// </summary>
		public static readonly global::System.Guid NamespaceDomainPropertyId = new global::System.Guid(0x3afd39f2, 0x7ca6, 0x44bb, 0xa8, 0x65, 0x26, 0x41, 0x43, 0x28, 0x56, 0x83);
		
		/// <summary>
		/// Storage for Namespace
		/// </summary>
		private global::System.String namespacePropertyStorage = "DslEditor.Model";
		
		/// <summary>
		/// Gets or sets the value of Namespace domain property.
		/// Description for Tum.PDE.LanguageDSL.GeneratedDomainElement.Namespace
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/Namespace.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/Namespace.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.GeneratedDomainElement/Namespace.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("DslEditor.Model")]
		[DslModeling::DomainObjectId("3afd39f2-7ca6-44bb-a865-264143285683")]
		public global::System.String Namespace
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namespacePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamespacePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the GeneratedDomainElement.Namespace domain property.
		/// </summary>
		internal sealed partial class NamespacePropertyHandler : DslModeling::DomainPropertyValueHandler<GeneratedDomainElement, global::System.String>
		{
			private NamespacePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the GeneratedDomainElement.Namespace domain property value handler.
			/// </summary>
			public static readonly NamespacePropertyHandler Instance = new NamespacePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the GeneratedDomainElement.Namespace domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NamespaceDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(GeneratedDomainElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namespacePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(GeneratedDomainElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namespacePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass RootDiagramNode
	/// Description for Tum.PDE.LanguageDSL.RootDiagramNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RootDiagramNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RootDiagramNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("6547e247-bfa9-456c-b540-bbf76a10e1be")]
	public partial class RootDiagramNode : EmbeddingDiagramNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// RootDiagramNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x6547e247, 0xbfa9, 0x456c, 0xb5, 0x40, 0xbb, 0xf7, 0x6a, 0x10, 0xe1, 0xbe);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public RootDiagramNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public RootDiagramNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DiagramClassView opposite domain role accessor
		/// <summary>
		/// Gets or sets DiagramClassView.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.RootDiagramNode
		/// </summary>
		public virtual DiagramClassView DiagramClassView
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.RootDiagramNodeDomainRoleId) as DiagramClassView;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.RootDiagramNodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass EmbeddingDiagramNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EmbeddingDiagramNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EmbeddingDiagramNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e96b96b0-0b4b-44dd-8087-d1881990f523")]
	public abstract partial class EmbeddingDiagramNodeBase : DiagramTreeNode
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EmbeddingDiagramNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe96b96b0, 0x0b4b, 0x44dd, 0x80, 0x87, 0xd1, 0x88, 0x19, 0x90, 0xf5, 0x23);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected EmbeddingDiagramNodeBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsExpanded domain property code
		
		/// <summary>
		/// IsExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsExpandedDomainPropertyId = new global::System.Guid(0xe870b0b5, 0x1c52, 0x4443, 0xb8, 0xf2, 0x44, 0xf9, 0x95, 0xcd, 0xf7, 0x85);
		
		/// <summary>
		/// Storage for IsExpanded
		/// </summary>
		private global::System.Boolean isExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.EmbeddingDiagramNode.Is Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EmbeddingDiagramNode/IsExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EmbeddingDiagramNode/IsExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("e870b0b5-1c52-4443-b8f2-44f995cdf785")]
		public global::System.Boolean IsExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EmbeddingDiagramNode.IsExpanded domain property.
		/// </summary>
		internal sealed partial class IsExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<EmbeddingDiagramNodeBase, global::System.Boolean>
		{
			private IsExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EmbeddingDiagramNode.IsExpanded domain property value handler.
			/// </summary>
			public static readonly IsExpandedPropertyHandler Instance = new IsExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EmbeddingDiagramNode.IsExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(EmbeddingDiagramNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EmbeddingDiagramNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsChildrenTreeExpanded domain property code
		
		/// <summary>
		/// IsChildrenTreeExpanded domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsChildrenTreeExpandedDomainPropertyId = new global::System.Guid(0x3196632d, 0x5c75, 0x4bb3, 0xa7, 0x2d, 0xb7, 0xc6, 0x97, 0x77, 0xb9, 0x81);
		
		/// <summary>
		/// Storage for IsChildrenTreeExpanded
		/// </summary>
		private global::System.Boolean isChildrenTreeExpandedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsChildrenTreeExpanded domain property.
		/// Description for Tum.PDE.LanguageDSL.EmbeddingDiagramNode.Is Children Tree
		/// Expanded
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.EmbeddingDiagramNode/IsChildrenTreeExpanded.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EmbeddingDiagramNode/IsChildrenTreeExpanded.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("3196632d-5c75-4bb3-a72d-b7c69777b981")]
		public global::System.Boolean IsChildrenTreeExpanded
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isChildrenTreeExpandedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsChildrenTreeExpandedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EmbeddingDiagramNode.IsChildrenTreeExpanded domain property.
		/// </summary>
		internal sealed partial class IsChildrenTreeExpandedPropertyHandler : DslModeling::DomainPropertyValueHandler<EmbeddingDiagramNodeBase, global::System.Boolean>
		{
			private IsChildrenTreeExpandedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EmbeddingDiagramNode.IsChildrenTreeExpanded domain property value handler.
			/// </summary>
			public static readonly IsChildrenTreeExpandedPropertyHandler Instance = new IsChildrenTreeExpandedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EmbeddingDiagramNode.IsChildrenTreeExpanded domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsChildrenTreeExpandedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(EmbeddingDiagramNodeBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isChildrenTreeExpandedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EmbeddingDiagramNodeBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isChildrenTreeExpandedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EmbeddingDiagramNodes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EmbeddingDiagramNodes.
		/// Description for
		/// Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.SourceEmbeddingDiagramNode
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EmbeddingDiagramNode> EmbeddingDiagramNodes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EmbeddingDiagramNode>, EmbeddingDiagramNode>(global::Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.SourceEmbeddingDiagramNodeDomainRoleId);
			}
		}
		#endregion
		#region SourceEmbeddingDiagramNode opposite domain role accessor
		/// <summary>
		/// Gets or sets SourceEmbeddingDiagramNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.TargetEmbeddingDiagramNode
		/// </summary>
		public virtual EmbeddingDiagramNode SourceEmbeddingDiagramNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.TargetEmbeddingDiagramNodeDomainRoleId) as EmbeddingDiagramNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.TargetEmbeddingDiagramNodeDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.EmbeddingDiagramNode.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.EmbeddingDiagramNode sourceEmbeddingDiagramNode1 = sourceElement as global::Tum.PDE.LanguageDSL.EmbeddingDiagramNode;
			if (sourceEmbeddingDiagramNode1 != null)
			{
				// Create link for path EmbeddingDiagramNodeHasEmbeddingDiagramNodes.EmbeddingDiagramNodes
				this.EmbeddingDiagramNodes.Add(sourceEmbeddingDiagramNode1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.EmbeddingDiagramNode sourceEmbeddingDiagramNode1 = sourceElement as global::Tum.PDE.LanguageDSL.EmbeddingDiagramNode;
			if (sourceEmbeddingDiagramNode1 != null)
			{
				// Delete link for path EmbeddingDiagramNodeHasEmbeddingDiagramNodes.EmbeddingDiagramNodes
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.GetLinks((global::Tum.PDE.LanguageDSL.EmbeddingDiagramNode)this, sourceEmbeddingDiagramNode1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.SourceEmbeddingDiagramNodeDomainRoleId, global::Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.TargetEmbeddingDiagramNodeDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass EmbeddingDiagramNode
	/// Description for Tum.PDE.LanguageDSL.EmbeddingDiagramNode
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class EmbeddingDiagramNode : EmbeddingDiagramNodeBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EmbeddingDiagramNode(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EmbeddingDiagramNode(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass DiagramTreeNode
	/// Description for Tum.PDE.LanguageDSL.DiagramTreeNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramTreeNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramTreeNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("62549bd8-1786-49ef-b98b-920372813c22")]
	public abstract partial class DiagramTreeNode : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DiagramTreeNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x62549bd8, 0x1786, 0x49ef, 0xb9, 0x8b, 0x92, 0x03, 0x72, 0x81, 0x3c, 0x22);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DiagramTreeNode(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region PresentationElementClass opposite domain role accessor
		/// <summary>
		/// Gets or sets PresentationElementClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.DiagramTreeNodeReferencesPresentationElementClass.DiagramTreeNode
		/// </summary>
		public virtual PresentationElementClass PresentationElementClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramTreeNodeReferencesPresentationElementClass.DiagramTreeNodeDomainRoleId) as PresentationElementClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DiagramTreeNodeReferencesPresentationElementClass.DiagramTreeNodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass SerializationModel
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializationModel.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ea32ef79-30e2-47b4-90f5-2bc013322097")]
	public abstract partial class SerializationModelBase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializationModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xea32ef79, 0x30e2, 0x47b4, 0x90, 0xf5, 0x2b, 0xc0, 0x13, 0x32, 0x20, 0x97);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected SerializationModelBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region SerializedIdAttributeName domain property code
		
		/// <summary>
		/// SerializedIdAttributeName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializedIdAttributeNameDomainPropertyId = new global::System.Guid(0xe3c25fae, 0xf05c, 0x4b06, 0xa8, 0xdd, 0x02, 0x49, 0x35, 0x29, 0xcf, 0x39);
		
		/// <summary>
		/// Storage for SerializedIdAttributeName
		/// </summary>
		private global::System.String serializedIdAttributeNamePropertyStorage = "Id";
		
		/// <summary>
		/// Gets or sets the value of SerializedIdAttributeName domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializationModel.Serialized Id Attribute
		/// Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializationModel/SerializedIdAttributeName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializationModel/SerializedIdAttributeName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationModel/SerializedIdAttributeName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Id")]
		[DslModeling::DomainObjectId("e3c25fae-f05c-4b06-a8dd-02493529cf39")]
		public global::System.String SerializedIdAttributeName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializedIdAttributeNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializedIdAttributeNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializationModel.SerializedIdAttributeName domain property.
		/// </summary>
		internal sealed partial class SerializedIdAttributeNamePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializationModelBase, global::System.String>
		{
			private SerializedIdAttributeNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializationModel.SerializedIdAttributeName domain property value handler.
			/// </summary>
			public static readonly SerializedIdAttributeNamePropertyHandler Instance = new SerializedIdAttributeNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializationModel.SerializedIdAttributeName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializedIdAttributeNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SerializationModelBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializedIdAttributeNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializationModelBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializedIdAttributeNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializedDomainModel opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializedDomainModel.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializationModel
		/// </summary>
		public virtual SerializedDomainModel SerializedDomainModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializationModelDomainRoleId) as SerializedDomainModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializationModelDomainRoleId, value);
			}
		}
		#endregion
		#region Children opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Children.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationModelHasChildren.SerializationModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SerializationClass> Children
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SerializationClass>, SerializationClass>(global::Tum.PDE.LanguageDSL.SerializationModelHasChildren.SerializationModelDomainRoleId);
			}
		}
		#endregion
		#region LibraryModelContext opposite domain role accessor
		/// <summary>
		/// Gets or sets LibraryModelContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.SerializationModel
		/// </summary>
		public virtual LibraryModelContext LibraryModelContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.SerializationModelDomainRoleId) as LibraryModelContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.SerializationModelDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.SerializedDomainModel.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: SerializationModelHasSerializedDomainModel.SerializedDomainModel
					if (this.SerializedDomainModel != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.SerializationClass.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.SerializedDomainModel sourceSerializedDomainModel1 = sourceElement as global::Tum.PDE.LanguageDSL.SerializedDomainModel;
			if (sourceSerializedDomainModel1 != null)
			{
				// Create link for path SerializationModelHasSerializedDomainModel.SerializedDomainModel
				this.SerializedDomainModel = sourceSerializedDomainModel1;

				return;
			}
				
			global::Tum.PDE.LanguageDSL.SerializationClass sourceSerializationClass2 = sourceElement as global::Tum.PDE.LanguageDSL.SerializationClass;
			if (sourceSerializationClass2 != null)
			{
				// Create link for path SerializationModelHasChildren.Children
				this.Children.Add(sourceSerializationClass2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.SerializedDomainModel sourceSerializedDomainModel1 = sourceElement as global::Tum.PDE.LanguageDSL.SerializedDomainModel;
			if (sourceSerializedDomainModel1 != null)
			{
				// Delete link for path SerializationModelHasSerializedDomainModel.SerializedDomainModel
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.GetLinks((global::Tum.PDE.LanguageDSL.SerializationModel)this, sourceSerializedDomainModel1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializationModelDomainRoleId, global::Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializedDomainModelDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.SerializationClass sourceSerializationClass2 = sourceElement as global::Tum.PDE.LanguageDSL.SerializationClass;
			if (sourceSerializationClass2 != null)
			{
				// Delete link for path SerializationModelHasChildren.Children
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.SerializationModelHasChildren.GetLinks((global::Tum.PDE.LanguageDSL.SerializationModel)this, sourceSerializationClass2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.SerializationModelHasChildren.SerializationModelDomainRoleId, global::Tum.PDE.LanguageDSL.SerializationModelHasChildren.SerializationClassDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass SerializationModel
	/// Description for Tum.PDE.LanguageDSL.SerializationModel
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class SerializationModel : SerializationModelBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializationModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializationModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializedDomainModel
	/// Description for Tum.PDE.LanguageDSL.SerializedDomainModel
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainModel.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("9499bc53-1fb1-472b-97c5-04e23ad51469")]
	public partial class SerializedDomainModel : SerializedDomainClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializedDomainModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x9499bc53, 0x1fb1, 0x472b, 0x97, 0xc5, 0x04, 0xe2, 0x3a, 0xd5, 0x14, 0x69);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedDomainModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedDomainModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region SerializedIdAttributeName domain property code
		
		/// <summary>
		/// SerializedIdAttributeName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializedIdAttributeNameDomainPropertyId = new global::System.Guid(0x00edea64, 0x8ff8, 0x4fd2, 0x8d, 0xfc, 0xad, 0x11, 0xfd, 0x38, 0xa7, 0xbc);
		
		/// <summary>
		/// Storage for SerializedIdAttributeName
		/// </summary>
		private global::System.String serializedIdAttributeNamePropertyStorage = "Id";
		
		/// <summary>
		/// Gets or sets the value of SerializedIdAttributeName domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedDomainModel.Serialized Id
		/// Attribute Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainModel/SerializedIdAttributeName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedDomainModel/SerializedIdAttributeName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainModel/SerializedIdAttributeName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Id")]
		[DslModeling::DomainObjectId("00edea64-8ff8-4fd2-8dfc-ad11fd38a7bc")]
		public global::System.String SerializedIdAttributeName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializedIdAttributeNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializedIdAttributeNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedDomainModel.SerializedIdAttributeName domain property.
		/// </summary>
		internal sealed partial class SerializedIdAttributeNamePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedDomainModel, global::System.String>
		{
			private SerializedIdAttributeNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedDomainModel.SerializedIdAttributeName domain property value handler.
			/// </summary>
			public static readonly SerializedIdAttributeNamePropertyHandler Instance = new SerializedIdAttributeNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedDomainModel.SerializedIdAttributeName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializedIdAttributeNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SerializedDomainModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializedIdAttributeNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedDomainModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializedIdAttributeNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Model opposite domain role accessor
		/// <summary>
		/// Gets or sets Model.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializedDomainModel
		/// </summary>
		public virtual SerializationModel Model
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializedDomainModelDomainRoleId) as SerializationModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializedDomainModelDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializationElement
	/// Description for Tum.PDE.LanguageDSL.SerializationElement
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializationElement.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationElement.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e2bd4f79-e74f-48da-b444-8a9971a92e2a")]
	public abstract partial class SerializationElement : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializationElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe2bd4f79, 0xe74f, 0x48da, 0xb4, 0x44, 0x8a, 0x99, 0x71, 0xa9, 0x2e, 0x2a);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected SerializationElement(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ParentEmbeddedElements opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ParentEmbeddedElements.
		/// Description for Tum.PDE.LanguageDSL.SerializationClassReferencesChildren.Child
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SerializationClass> ParentEmbeddedElements
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SerializationClass>, SerializationClass>(global::Tum.PDE.LanguageDSL.SerializationClassReferencesChildren.ChildDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializedDomainClass
	/// Description for Tum.PDE.LanguageDSL.SerializedDomainClass
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("03dadad3-8ebe-4324-90d7-34ba072ca27d")]
	public partial class SerializedDomainClass : SerializationClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializedDomainClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x03dadad3, 0x8ebe, 0x4324, 0x90, 0xd7, 0x34, 0xba, 0x07, 0x2c, 0xa2, 0x7d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedDomainClass(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedDomainClass(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DomainClass opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedDomainClassReferencesDomainClass.SerializedDomainClass
		/// </summary>
		public virtual DomainClass DomainClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainClassReferencesDomainClass.SerializedDomainClassDomainRoleId) as DomainClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainClassReferencesDomainClass.SerializedDomainClassDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializedEmbeddingRelationship
	/// Description for Tum.PDE.LanguageDSL.SerializedEmbeddingRelationship
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedEmbeddingRelationship.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedEmbeddingRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0a44ab79-f97d-443f-913d-a9033954c3b1")]
	public partial class SerializedEmbeddingRelationship : SerializedRelationship
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializedEmbeddingRelationship domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0a44ab79, 0xf97d, 0x443f, 0x91, 0x3d, 0xa9, 0x03, 0x39, 0x54, 0xc3, 0xb1);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedEmbeddingRelationship(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedEmbeddingRelationship(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsTargetIncludedSubmodel domain property code
		
		/// <summary>
		/// IsTargetIncludedSubmodel domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsTargetIncludedSubmodelDomainPropertyId = new global::System.Guid(0x99127341, 0x3123, 0x4bdc, 0xaf, 0x42, 0xab, 0x29, 0xf9, 0xd6, 0xfa, 0xf9);
		
		/// <summary>
		/// Storage for IsTargetIncludedSubmodel
		/// </summary>
		private global::System.Boolean isTargetIncludedSubmodelPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsTargetIncludedSubmodel domain property.
		/// If true, the target is expected to be a domain model which is included in a
		/// different file by using the xi:include tag
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedEmbeddingRelationship/IsTargetIncludedSubmodel.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedEmbeddingRelationship/IsTargetIncludedSubmodel.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedEmbeddingRelationship/IsTargetIncludedSubmodel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("99127341-3123-4bdc-af42-ab29f9d6faf9")]
		public global::System.Boolean IsTargetIncludedSubmodel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isTargetIncludedSubmodelPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsTargetIncludedSubmodelPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedEmbeddingRelationship.IsTargetIncludedSubmodel domain property.
		/// </summary>
		internal sealed partial class IsTargetIncludedSubmodelPropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedEmbeddingRelationship, global::System.Boolean>
		{
			private IsTargetIncludedSubmodelPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedEmbeddingRelationship.IsTargetIncludedSubmodel domain property value handler.
			/// </summary>
			public static readonly IsTargetIncludedSubmodelPropertyHandler Instance = new IsTargetIncludedSubmodelPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedEmbeddingRelationship.IsTargetIncludedSubmodel domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsTargetIncludedSubmodelDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(SerializedEmbeddingRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isTargetIncludedSubmodelPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedEmbeddingRelationship element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isTargetIncludedSubmodelPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EmbeddingRelationship opposite domain role accessor
		/// <summary>
		/// Gets or sets EmbeddingRelationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedEmbeddingRelationshipReferencesEmbeddingRelationship.SerializedEmbeddingRelationship
		/// </summary>
		public virtual EmbeddingRelationship EmbeddingRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedEmbeddingRelationshipReferencesEmbeddingRelationship.SerializedEmbeddingRelationshipDomainRoleId) as EmbeddingRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedEmbeddingRelationshipReferencesEmbeddingRelationship.SerializedEmbeddingRelationshipDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializedReferenceRelationship
	/// Description for Tum.PDE.LanguageDSL.SerializedReferenceRelationship
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedReferenceRelationship.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedReferenceRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("614567aa-6f74-4ed9-9d2c-029d4c177cf9")]
	public partial class SerializedReferenceRelationship : SerializedRelationship
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializedReferenceRelationship domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x614567aa, 0x6f74, 0x4ed9, 0x9d, 0x2c, 0x02, 0x9d, 0x4c, 0x17, 0x7c, 0xf9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedReferenceRelationship(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedReferenceRelationship(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ReferenceRelationship opposite domain role accessor
		/// <summary>
		/// Gets or sets ReferenceRelationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedReferenceRelationshipReferencesReferenceRelationship.SerializedReferenceRelationship
		/// </summary>
		public virtual ReferenceRelationship ReferenceRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedReferenceRelationshipReferencesReferenceRelationship.SerializedReferenceRelationshipDomainRoleId) as ReferenceRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedReferenceRelationshipReferencesReferenceRelationship.SerializedReferenceRelationshipDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializedDomainProperty
	/// Description for Tum.PDE.LanguageDSL.SerializedDomainProperty
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainProperty.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainProperty.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("a0f7f048-2974-469d-9016-5537b30ffa82")]
	public partial class SerializedDomainProperty : SerializationAttributeElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializedDomainProperty domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa0f7f048, 0x2974, 0x469d, 0x90, 0x16, 0x55, 0x37, 0xb3, 0x0f, 0xfa, 0x82);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedDomainProperty(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedDomainProperty(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region SerializationName domain property code
		
		/// <summary>
		/// SerializationName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationNameDomainPropertyId = new global::System.Guid(0xe940daf7, 0x9728, 0x497f, 0xa5, 0x61, 0x1c, 0x4d, 0xa0, 0x12, 0xca, 0x30);
		
		/// <summary>
		/// Storage for SerializationName
		/// </summary>
		private global::System.String serializationNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SerializationName domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedDomainProperty.Serialization Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/SerializationName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/SerializationName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/SerializationName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("e940daf7-9728-497f-a561-1c4da012ca30")]
		public global::System.String SerializationName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedDomainProperty.SerializationName domain property.
		/// </summary>
		internal sealed partial class SerializationNamePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedDomainProperty, global::System.String>
		{
			private SerializationNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedDomainProperty.SerializationName domain property value handler.
			/// </summary>
			public static readonly SerializationNamePropertyHandler Instance = new SerializationNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedDomainProperty.SerializationName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SerializedDomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedDomainProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationRepresentationType domain property code
		
		/// <summary>
		/// SerializationRepresentationType domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationRepresentationTypeDomainPropertyId = new global::System.Guid(0x9620e25d, 0xcb33, 0x4b42, 0xb1, 0x53, 0xc3, 0x42, 0x29, 0x98, 0xc4, 0x66);
		
		/// <summary>
		/// Storage for SerializationRepresentationType
		/// </summary>
		private SerializationRepresentationType serializationRepresentationTypePropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of SerializationRepresentationType domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedDomainProperty.Serialization
		/// Representation Type
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/SerializationRepresentationType.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/SerializationRepresentationType.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/SerializationRepresentationType.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9620e25d-cb33-4b42-b153-c3422998c466")]
		public SerializationRepresentationType SerializationRepresentationType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationRepresentationTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationRepresentationTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedDomainProperty.SerializationRepresentationType domain property.
		/// </summary>
		internal sealed partial class SerializationRepresentationTypePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedDomainProperty, SerializationRepresentationType>
		{
			private SerializationRepresentationTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedDomainProperty.SerializationRepresentationType domain property value handler.
			/// </summary>
			public static readonly SerializationRepresentationTypePropertyHandler Instance = new SerializationRepresentationTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedDomainProperty.SerializationRepresentationType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationRepresentationTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed SerializationRepresentationType GetValue(SerializedDomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationRepresentationTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedDomainProperty element, SerializationRepresentationType newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				SerializationRepresentationType oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationRepresentationTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsSerializationNameTracking domain property code
		
		/// <summary>
		/// IsSerializationNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsSerializationNameTrackingDomainPropertyId = new global::System.Guid(0x924f2d34, 0x32b9, 0x4bc0, 0x87, 0xd9, 0x3b, 0x20, 0x8f, 0x41, 0x76, 0x1e);
		
		/// <summary>
		/// Storage for IsSerializationNameTracking
		/// </summary>
		private TrackingEnum isSerializationNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsSerializationNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedDomainProperty.Is Serialization
		/// Name Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/IsSerializationNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/IsSerializationNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/IsSerializationNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("924f2d34-32b9-4bc0-87d9-3b208f41761e")]
		public TrackingEnum IsSerializationNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isSerializationNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsSerializationNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedDomainProperty.IsSerializationNameTracking domain property.
		/// </summary>
		internal sealed partial class IsSerializationNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedDomainProperty, TrackingEnum>
		{
			private IsSerializationNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedDomainProperty.IsSerializationNameTracking domain property value handler.
			/// </summary>
			public static readonly IsSerializationNameTrackingPropertyHandler Instance = new IsSerializationNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedDomainProperty.IsSerializationNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsSerializationNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(SerializedDomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isSerializationNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedDomainProperty element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isSerializationNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region OmitProperty domain property code
		
		/// <summary>
		/// OmitProperty domain property Id.
		/// </summary>
		public static readonly global::System.Guid OmitPropertyDomainPropertyId = new global::System.Guid(0x6b25dcc0, 0xb592, 0x4807, 0xae, 0xcf, 0x3d, 0x5f, 0x71, 0x32, 0x9f, 0x3c);
		
		/// <summary>
		/// Storage for OmitProperty
		/// </summary>
		private global::System.Boolean omitPropertyPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of OmitProperty domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedDomainProperty.Omit Property
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/OmitProperty.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/OmitProperty.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainProperty/OmitProperty.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6b25dcc0-b592-4807-aecf-3d5f71329f3c")]
		public global::System.Boolean OmitProperty
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return omitPropertyPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				OmitPropertyPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedDomainProperty.OmitProperty domain property.
		/// </summary>
		internal sealed partial class OmitPropertyPropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedDomainProperty, global::System.Boolean>
		{
			private OmitPropertyPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedDomainProperty.OmitProperty domain property value handler.
			/// </summary>
			public static readonly OmitPropertyPropertyHandler Instance = new OmitPropertyPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedDomainProperty.OmitProperty domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return OmitPropertyDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(SerializedDomainProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.omitPropertyPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedDomainProperty element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.omitPropertyPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DomainProperty opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainProperty.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedDomainPropertyReferencesDomainProperty.SerializedDomainProperty
		/// </summary>
		public virtual DomainProperty DomainProperty
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainPropertyReferencesDomainProperty.SerializedDomainPropertyDomainRoleId) as DomainProperty;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainPropertyReferencesDomainProperty.SerializedDomainPropertyDomainRoleId, value);
			}
		}
		#endregion
		#region SerializationClass opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializationClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationClassHasProperties.SerializedDomainProperty
		/// </summary>
		public virtual SerializationClass SerializationClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationClassHasProperties.SerializedDomainPropertyDomainRoleId) as SerializationClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationClassHasProperties.SerializedDomainPropertyDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializationClass
	/// Description for Tum.PDE.LanguageDSL.SerializationClass
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializationClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("5252df02-8fb4-4255-971d-4cd79317724c")]
	public abstract partial class SerializationClass : SerializationElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializationClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5252df02, 0x8fb4, 0x4255, 0x97, 0x1d, 0x4c, 0xd7, 0x93, 0x17, 0x72, 0x4c);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected SerializationClass(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsSerializationNameTracking domain property code
		
		/// <summary>
		/// IsSerializationNameTracking domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsSerializationNameTrackingDomainPropertyId = new global::System.Guid(0xa5715976, 0xe41c, 0x4d24, 0xba, 0x3c, 0x64, 0xff, 0x66, 0xab, 0x9e, 0x64);
		
		/// <summary>
		/// Storage for IsSerializationNameTracking
		/// </summary>
		private TrackingEnum isSerializationNameTrackingPropertyStorage = TrackingEnum.True;
		
		/// <summary>
		/// Gets or sets the value of IsSerializationNameTracking domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializationClass.Is Serialization Name
		/// Tracking
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializationClass/IsSerializationNameTracking.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializationClass/IsSerializationNameTracking.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationClass/IsSerializationNameTracking.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(TrackingEnum.True)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("a5715976-e41c-4d24-ba3c-64ff66ab9e64")]
		public TrackingEnum IsSerializationNameTracking
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isSerializationNameTrackingPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsSerializationNameTrackingPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializationClass.IsSerializationNameTracking domain property.
		/// </summary>
		internal sealed partial class IsSerializationNameTrackingPropertyHandler : DslModeling::DomainPropertyValueHandler<SerializationClass, TrackingEnum>
		{
			private IsSerializationNameTrackingPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializationClass.IsSerializationNameTracking domain property value handler.
			/// </summary>
			public static readonly IsSerializationNameTrackingPropertyHandler Instance = new IsSerializationNameTrackingPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializationClass.IsSerializationNameTracking domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsSerializationNameTrackingDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TrackingEnum GetValue(SerializationClass element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isSerializationNameTrackingPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializationClass element, TrackingEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TrackingEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isSerializationNameTrackingPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationName domain property code
		
		/// <summary>
		/// SerializationName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationNameDomainPropertyId = new global::System.Guid(0xa4275bed, 0xdeff, 0x4d01, 0x8e, 0x75, 0x47, 0x7a, 0x43, 0xee, 0x2f, 0xb3);
		
		/// <summary>
		/// Storage for SerializationName
		/// </summary>
		private global::System.String serializationNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SerializationName domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializationClass.Serialization Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializationClass/SerializationName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializationClass/SerializationName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationClass/SerializationName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a4275bed-deff-4d01-8e75-477a43ee2fb3")]
		public global::System.String SerializationName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializationClass.SerializationName domain property.
		/// </summary>
		internal sealed partial class SerializationNamePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializationClass, global::System.String>
		{
			private SerializationNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializationClass.SerializationName domain property value handler.
			/// </summary>
			public static readonly SerializationNamePropertyHandler Instance = new SerializationNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializationClass.SerializationName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SerializationClass element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializationClass element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Children opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Children.
		/// Description for Tum.PDE.LanguageDSL.SerializationClassReferencesChildren.Parent
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SerializationElement> Children
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SerializationElement>, SerializationElement>(global::Tum.PDE.LanguageDSL.SerializationClassReferencesChildren.ParentDomainRoleId);
			}
		}
		#endregion
		#region Attributes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Attributes.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationClassReferencesAttributes.Element
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SerializationAttributeElement> Attributes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SerializationAttributeElement>, SerializationAttributeElement>(global::Tum.PDE.LanguageDSL.SerializationClassReferencesAttributes.ElementDomainRoleId);
			}
		}
		#endregion
		#region IdProperty opposite domain role accessor
		/// <summary>
		/// Gets or sets IdProperty.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializationClass
		/// </summary>
		public virtual SerializedIdProperty IdProperty
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializationClassDomainRoleId) as SerializedIdProperty;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializationClassDomainRoleId, value);
			}
		}
		#endregion
		#region SerializedDomainRole opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializedDomainRole.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesSerializationClass.SerializationClass
		/// </summary>
		public virtual SerializedDomainRole SerializedDomainRole
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesSerializationClass.SerializationClassDomainRoleId) as SerializedDomainRole;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesSerializationClass.SerializationClassDomainRoleId, value);
			}
		}
		#endregion
		#region SerializationModel opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializationModel.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationModelHasChildren.SerializationClass
		/// </summary>
		public virtual SerializationModel SerializationModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationModelHasChildren.SerializationClassDomainRoleId) as SerializationModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationModelHasChildren.SerializationClassDomainRoleId, value);
			}
		}
		#endregion
		#region Properties opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Properties.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationClassHasProperties.SerializationClass
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SerializedDomainProperty> Properties
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SerializedDomainProperty>, SerializedDomainProperty>(global::Tum.PDE.LanguageDSL.SerializationClassHasProperties.SerializationClassDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.SerializedDomainProperty.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.SerializedIdProperty.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: SerializationClassHasIdProperty.IdProperty
					if (this.IdProperty != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.SerializedDomainProperty sourceSerializedDomainProperty1 = sourceElement as global::Tum.PDE.LanguageDSL.SerializedDomainProperty;
			if (sourceSerializedDomainProperty1 != null)
			{
				// Create link for path SerializationClassHasProperties.Properties
				this.Properties.Add(sourceSerializedDomainProperty1);

				return;
			}
				
			global::Tum.PDE.LanguageDSL.SerializedIdProperty sourceSerializedIdProperty2 = sourceElement as global::Tum.PDE.LanguageDSL.SerializedIdProperty;
			if (sourceSerializedIdProperty2 != null)
			{
				// Create link for path SerializationClassHasIdProperty.IdProperty
				this.IdProperty = sourceSerializedIdProperty2;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.SerializedDomainProperty sourceSerializedDomainProperty1 = sourceElement as global::Tum.PDE.LanguageDSL.SerializedDomainProperty;
			if (sourceSerializedDomainProperty1 != null)
			{
				// Delete link for path SerializationClassHasProperties.Properties
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.SerializationClassHasProperties.GetLinks((global::Tum.PDE.LanguageDSL.SerializationClass)this, sourceSerializedDomainProperty1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.SerializationClassHasProperties.SerializationClassDomainRoleId, global::Tum.PDE.LanguageDSL.SerializationClassHasProperties.SerializedDomainPropertyDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.SerializedIdProperty sourceSerializedIdProperty2 = sourceElement as global::Tum.PDE.LanguageDSL.SerializedIdProperty;
			if (sourceSerializedIdProperty2 != null)
			{
				// Delete link for path SerializationClassHasIdProperty.IdProperty
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.GetLinks((global::Tum.PDE.LanguageDSL.SerializationClass)this, sourceSerializedIdProperty2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializationClassDomainRoleId, global::Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializedIdPropertyDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializedIdProperty
	/// Description for Tum.PDE.LanguageDSL.SerializedIdProperty
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedIdProperty.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedIdProperty.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f47aabf7-6d3d-4b0e-95f3-c714ad611cf4")]
	public partial class SerializedIdProperty : SerializationAttributeElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializedIdProperty domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf47aabf7, 0x6d3d, 0x4b0e, 0x95, 0xf3, 0xc7, 0x14, 0xad, 0x61, 0x1c, 0xf4);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedIdProperty(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedIdProperty(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0xf8c74823, 0x186d, 0x48a9, 0xa3, 0xf0, 0x8b, 0x94, 0x84, 0x33, 0x59, 0xf3);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = "Id";
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedIdProperty.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedIdProperty/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedIdProperty/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedIdProperty/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Id")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("f8c74823-186d-48a9-a3f0-8b94843359f3")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedIdProperty.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedIdProperty, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedIdProperty.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedIdProperty.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SerializedIdProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedIdProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationName domain property code
		
		/// <summary>
		/// SerializationName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationNameDomainPropertyId = new global::System.Guid(0x7ac6784f, 0x2b81, 0x4c89, 0x95, 0xb6, 0x5f, 0x7c, 0x60, 0x5a, 0x5b, 0xc1);
		
		/// <summary>
		/// Storage for SerializationName
		/// </summary>
		private global::System.String serializationNamePropertyStorage = "Id";
		
		/// <summary>
		/// Gets or sets the value of SerializationName domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedIdProperty.Serialization Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedIdProperty/SerializationName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedIdProperty/SerializationName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedIdProperty/SerializationName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Id")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("7ac6784f-2b81-4c89-95b6-5f7c605a5bc1")]
		public global::System.String SerializationName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedIdProperty.SerializationName domain property.
		/// </summary>
		internal sealed partial class SerializationNamePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedIdProperty, global::System.String>
		{
			private SerializationNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedIdProperty.SerializationName domain property value handler.
			/// </summary>
			public static readonly SerializationNamePropertyHandler Instance = new SerializationNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedIdProperty.SerializationName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SerializedIdProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedIdProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region OmitIdProperty domain property code
		
		/// <summary>
		/// OmitIdProperty domain property Id.
		/// </summary>
		public static readonly global::System.Guid OmitIdPropertyDomainPropertyId = new global::System.Guid(0xbe9b0871, 0x6566, 0x44ed, 0xaf, 0x05, 0x02, 0xec, 0x16, 0x00, 0xd0, 0xcf);
		
		/// <summary>
		/// Storage for OmitIdProperty
		/// </summary>
		private global::System.Boolean omitIdPropertyPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of OmitIdProperty domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedIdProperty.Omit Id Property
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedIdProperty/OmitIdProperty.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedIdProperty/OmitIdProperty.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedIdProperty/OmitIdProperty.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("be9b0871-6566-44ed-af05-02ec1600d0cf")]
		public global::System.Boolean OmitIdProperty
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return omitIdPropertyPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				OmitIdPropertyPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedIdProperty.OmitIdProperty domain property.
		/// </summary>
		internal sealed partial class OmitIdPropertyPropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedIdProperty, global::System.Boolean>
		{
			private OmitIdPropertyPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedIdProperty.OmitIdProperty domain property value handler.
			/// </summary>
			public static readonly OmitIdPropertyPropertyHandler Instance = new OmitIdPropertyPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedIdProperty.OmitIdProperty domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return OmitIdPropertyDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(SerializedIdProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.omitIdPropertyPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedIdProperty element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.omitIdPropertyPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationClass opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializationClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializedIdProperty
		/// </summary>
		public virtual SerializationClass SerializationClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializedIdPropertyDomainRoleId) as SerializationClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializedIdPropertyDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializedDomainRole
	/// Description for Tum.PDE.LanguageDSL.SerializedDomainRole
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainRole.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainRole.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f44c1d91-023c-4c98-9b8e-d1fc680e4f89")]
	public partial class SerializedDomainRole : SerializationElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializedDomainRole domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf44c1d91, 0x023c, 0x4c98, 0x9b, 0x8e, 0xd1, 0xfc, 0x68, 0x0e, 0x4f, 0x89);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedDomainRole(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SerializedDomainRole(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region SerializationName domain property code
		
		/// <summary>
		/// SerializationName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationNameDomainPropertyId = new global::System.Guid(0xd074d7f6, 0xb45b, 0x4c27, 0xa4, 0x24, 0x73, 0x42, 0x29, 0x4b, 0xe0, 0xd4);
		
		/// <summary>
		/// Storage for SerializationName
		/// </summary>
		private global::System.String serializationNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SerializationName domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedDomainRole.Serialization Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainRole/SerializationName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedDomainRole/SerializationName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainRole/SerializationName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d074d7f6-b45b-4c27-a424-7342294be0d4")]
		public global::System.String SerializationName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedDomainRole.SerializationName domain property.
		/// </summary>
		internal sealed partial class SerializationNamePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedDomainRole, global::System.String>
		{
			private SerializationNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedDomainRole.SerializationName domain property value handler.
			/// </summary>
			public static readonly SerializationNamePropertyHandler Instance = new SerializationNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedDomainRole.SerializationName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SerializedDomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedDomainRole element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializationAttributeName domain property code
		
		/// <summary>
		/// SerializationAttributeName domain property Id.
		/// </summary>
		public static readonly global::System.Guid SerializationAttributeNameDomainPropertyId = new global::System.Guid(0x5fe764d1, 0x0df6, 0x4294, 0xb6, 0x74, 0x42, 0x78, 0x81, 0xc7, 0x97, 0x5e);
		
		/// <summary>
		/// Storage for SerializationAttributeName
		/// </summary>
		private global::System.String serializationAttributeNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of SerializationAttributeName domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedDomainRole.Serialization Attribute
		/// Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedDomainRole/SerializationAttributeName.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedDomainRole/SerializationAttributeName.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedDomainRole/SerializationAttributeName.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("5fe764d1-0df6-4294-b674-427881c7975e")]
		public global::System.String SerializationAttributeName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return serializationAttributeNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SerializationAttributeNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedDomainRole.SerializationAttributeName domain property.
		/// </summary>
		internal sealed partial class SerializationAttributeNamePropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedDomainRole, global::System.String>
		{
			private SerializationAttributeNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedDomainRole.SerializationAttributeName domain property value handler.
			/// </summary>
			public static readonly SerializationAttributeNamePropertyHandler Instance = new SerializationAttributeNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedDomainRole.SerializationAttributeName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SerializationAttributeNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SerializedDomainRole element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.serializationAttributeNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedDomainRole element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.serializationAttributeNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DomainRole opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainRole.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesDomainRole.SerializedDomainRole
		/// </summary>
		public virtual DomainRole DomainRole
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesDomainRole.SerializedDomainRoleDomainRoleId) as DomainRole;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesDomainRole.SerializedDomainRoleDomainRoleId, value);
			}
		}
		#endregion
		#region SerializedRelationship opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializedRelationship.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.SerializedDomainRole
		/// </summary>
		public virtual SerializedRelationship SerializedRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.SerializedDomainRoleDomainRoleId) as SerializedRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.SerializedDomainRoleDomainRoleId, value);
			}
		}
		#endregion
		#region SerializationClass opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializationClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesSerializationClass.SerializedDomainRole
		/// </summary>
		public virtual SerializationClass SerializationClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesSerializationClass.SerializedDomainRoleDomainRoleId) as SerializationClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SerializedDomainRoleReferencesSerializationClass.SerializedDomainRoleDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializationAttributeElement
	/// Description for Tum.PDE.LanguageDSL.SerializationAttributeElement
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializationAttributeElement.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationAttributeElement.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("78c96b19-33b3-4c04-ae9f-fe024805251b")]
	public abstract partial class SerializationAttributeElement : SerializationElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializationAttributeElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x78c96b19, 0x33b3, 0x4c04, 0xae, 0x9f, 0xfe, 0x02, 0x48, 0x05, 0x25, 0x1b);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected SerializationAttributeElement(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ParentAttributedElements opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ParentAttributedElements.
		/// Description for Tum.PDE.LanguageDSL.SerializationClassReferencesAttributes.Child
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SerializationClass> ParentAttributedElements
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SerializationClass>, SerializationClass>(global::Tum.PDE.LanguageDSL.SerializationClassReferencesAttributes.ChildDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass Validation
	/// Description for Tum.PDE.LanguageDSL.Validation
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.Validation.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Validation.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("69e03ca4-2947-4651-9220-67707c7f0f7d")]
	public partial class Validation : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Validation domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x69e03ca4, 0x2947, 0x4651, 0x92, 0x20, 0x67, 0x70, 0x7c, 0x7f, 0x0f, 0x7d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Validation(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Validation(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region UseLoad domain property code
		
		/// <summary>
		/// UseLoad domain property Id.
		/// </summary>
		public static readonly global::System.Guid UseLoadDomainPropertyId = new global::System.Guid(0xdd1eb631, 0x9a07, 0x4341, 0xb6, 0x3e, 0xd6, 0x9d, 0xa8, 0x9a, 0xe1, 0x2b);
		
		/// <summary>
		/// Storage for UseLoad
		/// </summary>
		private global::System.Boolean useLoadPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of UseLoad domain property.
		/// Description for Tum.PDE.LanguageDSL.Validation.Use Load
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.Validation/UseLoad.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.Validation/UseLoad.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Validation/UseLoad.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("dd1eb631-9a07-4341-b63e-d69da89ae12b")]
		public global::System.Boolean UseLoad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return useLoadPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UseLoadPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Validation.UseLoad domain property.
		/// </summary>
		internal sealed partial class UseLoadPropertyHandler : DslModeling::DomainPropertyValueHandler<Validation, global::System.Boolean>
		{
			private UseLoadPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Validation.UseLoad domain property value handler.
			/// </summary>
			public static readonly UseLoadPropertyHandler Instance = new UseLoadPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Validation.UseLoad domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UseLoadDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Validation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.useLoadPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Validation element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.useLoadPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region UseMenu domain property code
		
		/// <summary>
		/// UseMenu domain property Id.
		/// </summary>
		public static readonly global::System.Guid UseMenuDomainPropertyId = new global::System.Guid(0xb0a7015d, 0x8f23, 0x4994, 0xb3, 0x81, 0x44, 0xe0, 0x39, 0x2f, 0xb5, 0xdd);
		
		/// <summary>
		/// Storage for UseMenu
		/// </summary>
		private global::System.Boolean useMenuPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of UseMenu domain property.
		/// Description for Tum.PDE.LanguageDSL.Validation.Use Menu
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.Validation/UseMenu.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.Validation/UseMenu.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Validation/UseMenu.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("b0a7015d-8f23-4994-b381-44e0392fb5dd")]
		public global::System.Boolean UseMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return useMenuPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UseMenuPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Validation.UseMenu domain property.
		/// </summary>
		internal sealed partial class UseMenuPropertyHandler : DslModeling::DomainPropertyValueHandler<Validation, global::System.Boolean>
		{
			private UseMenuPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Validation.UseMenu domain property value handler.
			/// </summary>
			public static readonly UseMenuPropertyHandler Instance = new UseMenuPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Validation.UseMenu domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UseMenuDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Validation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.useMenuPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Validation element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.useMenuPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region UseOpen domain property code
		
		/// <summary>
		/// UseOpen domain property Id.
		/// </summary>
		public static readonly global::System.Guid UseOpenDomainPropertyId = new global::System.Guid(0x5d3af6e4, 0x587a, 0x47af, 0xac, 0xfe, 0x73, 0xbd, 0x4c, 0x38, 0x42, 0x1e);
		
		/// <summary>
		/// Storage for UseOpen
		/// </summary>
		private global::System.Boolean useOpenPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of UseOpen domain property.
		/// Description for Tum.PDE.LanguageDSL.Validation.Use Open
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.Validation/UseOpen.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.Validation/UseOpen.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Validation/UseOpen.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("5d3af6e4-587a-47af-acfe-73bd4c38421e")]
		public global::System.Boolean UseOpen
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return useOpenPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UseOpenPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Validation.UseOpen domain property.
		/// </summary>
		internal sealed partial class UseOpenPropertyHandler : DslModeling::DomainPropertyValueHandler<Validation, global::System.Boolean>
		{
			private UseOpenPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Validation.UseOpen domain property value handler.
			/// </summary>
			public static readonly UseOpenPropertyHandler Instance = new UseOpenPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Validation.UseOpen domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UseOpenDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Validation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.useOpenPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Validation element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.useOpenPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region UseSave domain property code
		
		/// <summary>
		/// UseSave domain property Id.
		/// </summary>
		public static readonly global::System.Guid UseSaveDomainPropertyId = new global::System.Guid(0xc36dc085, 0x3bc1, 0x4470, 0x80, 0x7b, 0xf3, 0xda, 0xcf, 0xb9, 0xe8, 0xbf);
		
		/// <summary>
		/// Storage for UseSave
		/// </summary>
		private global::System.Boolean useSavePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of UseSave domain property.
		/// Description for Tum.PDE.LanguageDSL.Validation.Use Save
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.Validation/UseSave.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.Validation/UseSave.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Validation/UseSave.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("c36dc085-3bc1-4470-807b-f3dacfb9e8bf")]
		public global::System.Boolean UseSave
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return useSavePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UseSavePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Validation.UseSave domain property.
		/// </summary>
		internal sealed partial class UseSavePropertyHandler : DslModeling::DomainPropertyValueHandler<Validation, global::System.Boolean>
		{
			private UseSavePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Validation.UseSave domain property value handler.
			/// </summary>
			public static readonly UseSavePropertyHandler Instance = new UseSavePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Validation.UseSave domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UseSaveDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Validation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.useSavePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Validation element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.useSavePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region UseAutoValidation domain property code
		
		/// <summary>
		/// UseAutoValidation domain property Id.
		/// </summary>
		public static readonly global::System.Guid UseAutoValidationDomainPropertyId = new global::System.Guid(0xb2f0d280, 0x0cbe, 0x400b, 0x9d, 0xf6, 0x73, 0x3f, 0x29, 0x26, 0x32, 0xe2);
		
		/// <summary>
		/// Storage for UseAutoValidation
		/// </summary>
		private global::System.Boolean useAutoValidationPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of UseAutoValidation domain property.
		/// Description for Tum.PDE.LanguageDSL.Validation.Use Auto Validation
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.Validation/UseAutoValidation.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.Validation/UseAutoValidation.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Validation/UseAutoValidation.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("b2f0d280-0cbe-400b-9df6-733f292632e2")]
		public global::System.Boolean UseAutoValidation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return useAutoValidationPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UseAutoValidationPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Validation.UseAutoValidation domain property.
		/// </summary>
		internal sealed partial class UseAutoValidationPropertyHandler : DslModeling::DomainPropertyValueHandler<Validation, global::System.Boolean>
		{
			private UseAutoValidationPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Validation.UseAutoValidation domain property value handler.
			/// </summary>
			public static readonly UseAutoValidationPropertyHandler Instance = new UseAutoValidationPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Validation.UseAutoValidation domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UseAutoValidationDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Validation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.useAutoValidationPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Validation element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.useAutoValidationPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MetaModel opposite domain role accessor
		/// <summary>
		/// Gets or sets MetaModel.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasValidation.Validation
		/// </summary>
		public virtual MetaModel MetaModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasValidation.ValidationDomainRoleId) as MetaModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasValidation.ValidationDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass MappingRelationshipShapeClass
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c0cd6878-c5a2-4671-8dd4-61c425d0158a")]
	public abstract partial class MappingRelationshipShapeClassBase : PresentationDomainClassElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// MappingRelationshipShapeClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc0cd6878, 0xc5a2, 0x4671, 0x8d, 0xd4, 0x61, 0xc4, 0x25, 0xd0, 0x15, 0x8a);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected MappingRelationshipShapeClassBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsAutoGenerated domain property code
		
		/// <summary>
		/// IsAutoGenerated domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsAutoGeneratedDomainPropertyId = new global::System.Guid(0x1c56fe5e, 0x9398, 0x45ad, 0xae, 0x90, 0x85, 0x15, 0xaf, 0x03, 0x87, 0xed);
		
		/// <summary>
		/// Storage for IsAutoGenerated
		/// </summary>
		private global::System.Boolean isAutoGeneratedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of IsAutoGenerated domain property.
		/// Description for Tum.PDE.LanguageDSL.MappingRelationshipShapeClass.Is Auto
		/// Generated
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/IsAutoGenerated.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/IsAutoGenerated.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/IsAutoGenerated.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("1c56fe5e-9398-45ad-ae90-8515af0387ed")]
		public global::System.Boolean IsAutoGenerated
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isAutoGeneratedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsAutoGeneratedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MappingRelationshipShapeClass.IsAutoGenerated domain property.
		/// </summary>
		internal sealed partial class IsAutoGeneratedPropertyHandler : DslModeling::DomainPropertyValueHandler<MappingRelationshipShapeClassBase, global::System.Boolean>
		{
			private IsAutoGeneratedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MappingRelationshipShapeClass.IsAutoGenerated domain property value handler.
			/// </summary>
			public static readonly IsAutoGeneratedPropertyHandler Instance = new IsAutoGeneratedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MappingRelationshipShapeClass.IsAutoGenerated domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsAutoGeneratedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(MappingRelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isAutoGeneratedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MappingRelationshipShapeClassBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isAutoGeneratedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region StartAnchorStyle domain property code
		
		/// <summary>
		/// StartAnchorStyle domain property Id.
		/// </summary>
		public static readonly global::System.Guid StartAnchorStyleDomainPropertyId = new global::System.Guid(0x45ec85ce, 0xe4e2, 0x4449, 0xb3, 0x9a, 0x2d, 0xa7, 0x01, 0x01, 0xd7, 0x2c);
		
		/// <summary>
		/// Storage for StartAnchorStyle
		/// </summary>
		private AnchorStyle startAnchorStylePropertyStorage = AnchorStyle.None;
		
		/// <summary>
		/// Gets or sets the value of StartAnchorStyle domain property.
		/// Description for Tum.PDE.LanguageDSL.MappingRelationshipShapeClass.Start Anchor
		/// Style
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/StartAnchorStyle.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/StartAnchorStyle.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/StartAnchorStyle.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AnchorStyle.None)]
		[DslModeling::DomainObjectId("45ec85ce-e4e2-4449-b39a-2da70101d72c")]
		public AnchorStyle StartAnchorStyle
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return startAnchorStylePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				StartAnchorStylePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MappingRelationshipShapeClass.StartAnchorStyle domain property.
		/// </summary>
		internal sealed partial class StartAnchorStylePropertyHandler : DslModeling::DomainPropertyValueHandler<MappingRelationshipShapeClassBase, AnchorStyle>
		{
			private StartAnchorStylePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MappingRelationshipShapeClass.StartAnchorStyle domain property value handler.
			/// </summary>
			public static readonly StartAnchorStylePropertyHandler Instance = new StartAnchorStylePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MappingRelationshipShapeClass.StartAnchorStyle domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return StartAnchorStyleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AnchorStyle GetValue(MappingRelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.startAnchorStylePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MappingRelationshipShapeClassBase element, AnchorStyle newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AnchorStyle oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.startAnchorStylePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EndAnchorStyle domain property code
		
		/// <summary>
		/// EndAnchorStyle domain property Id.
		/// </summary>
		public static readonly global::System.Guid EndAnchorStyleDomainPropertyId = new global::System.Guid(0x75bd252c, 0x9594, 0x474a, 0xbd, 0xd2, 0x69, 0x51, 0x6d, 0x70, 0xcd, 0x54);
		
		/// <summary>
		/// Storage for EndAnchorStyle
		/// </summary>
		private AnchorStyle endAnchorStylePropertyStorage = AnchorStyle.None;
		
		/// <summary>
		/// Gets or sets the value of EndAnchorStyle domain property.
		/// Description for Tum.PDE.LanguageDSL.MappingRelationshipShapeClass.End Anchor
		/// Style
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/EndAnchorStyle.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/EndAnchorStyle.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/EndAnchorStyle.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(AnchorStyle.None)]
		[DslModeling::DomainObjectId("75bd252c-9594-474a-bdd2-69516d70cd54")]
		public AnchorStyle EndAnchorStyle
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return endAnchorStylePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EndAnchorStylePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MappingRelationshipShapeClass.EndAnchorStyle domain property.
		/// </summary>
		internal sealed partial class EndAnchorStylePropertyHandler : DslModeling::DomainPropertyValueHandler<MappingRelationshipShapeClassBase, AnchorStyle>
		{
			private EndAnchorStylePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MappingRelationshipShapeClass.EndAnchorStyle domain property value handler.
			/// </summary>
			public static readonly EndAnchorStylePropertyHandler Instance = new EndAnchorStylePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MappingRelationshipShapeClass.EndAnchorStyle domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EndAnchorStyleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AnchorStyle GetValue(MappingRelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.endAnchorStylePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MappingRelationshipShapeClassBase element, AnchorStyle newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AnchorStyle oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.endAnchorStylePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region StrokeThickness domain property code
		
		/// <summary>
		/// StrokeThickness domain property Id.
		/// </summary>
		public static readonly global::System.Guid StrokeThicknessDomainPropertyId = new global::System.Guid(0x549a1b96, 0x8065, 0x4ab2, 0x9d, 0x73, 0x9c, 0x7a, 0x30, 0x9a, 0xce, 0xd2);
		
		/// <summary>
		/// Storage for StrokeThickness
		/// </summary>
		private global::System.Double strokeThicknessPropertyStorage = 1D;
		
		/// <summary>
		/// Gets or sets the value of StrokeThickness domain property.
		/// Description for Tum.PDE.LanguageDSL.MappingRelationshipShapeClass.Stroke
		/// Thickness
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/StrokeThickness.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/StrokeThickness.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/StrokeThickness.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(1D)]
		[DslModeling::DomainObjectId("549a1b96-8065-4ab2-9d73-9c7a309aced2")]
		public global::System.Double StrokeThickness
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return strokeThicknessPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				StrokeThicknessPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MappingRelationshipShapeClass.StrokeThickness domain property.
		/// </summary>
		internal sealed partial class StrokeThicknessPropertyHandler : DslModeling::DomainPropertyValueHandler<MappingRelationshipShapeClassBase, global::System.Double>
		{
			private StrokeThicknessPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MappingRelationshipShapeClass.StrokeThickness domain property value handler.
			/// </summary>
			public static readonly StrokeThicknessPropertyHandler Instance = new StrokeThicknessPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MappingRelationshipShapeClass.StrokeThickness domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return StrokeThicknessDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(MappingRelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.strokeThicknessPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MappingRelationshipShapeClassBase element, global::System.Double newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Double oldValue = GetValue(element);
				// double type precision is guaranteed only to 15th digit.
				if (global::System.Math.Abs(newValue - oldValue) > 1e-15)
				{
					ValueChanging(element, oldValue, newValue);
					element.strokeThicknessPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Stroke domain property code
		
		/// <summary>
		/// Stroke domain property Id.
		/// </summary>
		public static readonly global::System.Guid StrokeDomainPropertyId = new global::System.Guid(0x9e008b40, 0xc515, 0x4acd, 0x92, 0x92, 0x56, 0xed, 0xa0, 0x20, 0x5f, 0x95);
		
		/// <summary>
		/// Storage for Stroke
		/// </summary>
		private global::System.Drawing.Color strokePropertyStorage = DslModeling::SerializationUtilities.GetValue<global::System.Drawing.Color>("Gray");
		
		/// <summary>
		/// Gets or sets the value of Stroke domain property.
		/// Description for Tum.PDE.LanguageDSL.MappingRelationshipShapeClass.Stroke
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/Stroke.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/Stroke.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MappingRelationshipShapeClass/Stroke.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(typeof(global::System.Drawing.Color), "Gray")]
		[DslModeling::DomainObjectId("9e008b40-c515-4acd-9292-56eda0205f95")]
		public global::System.Drawing.Color Stroke
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return strokePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				StrokePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MappingRelationshipShapeClass.Stroke domain property.
		/// </summary>
		internal sealed partial class StrokePropertyHandler : DslModeling::DomainPropertyValueHandler<MappingRelationshipShapeClassBase, global::System.Drawing.Color>
		{
			private StrokePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MappingRelationshipShapeClass.Stroke domain property value handler.
			/// </summary>
			public static readonly StrokePropertyHandler Instance = new StrokePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MappingRelationshipShapeClass.Stroke domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return StrokeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Drawing.Color GetValue(MappingRelationshipShapeClassBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.strokePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MappingRelationshipShapeClassBase element, global::System.Drawing.Color newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Drawing.Color oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.strokePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Source opposite domain role accessor
		/// <summary>
		/// Gets or sets Source.
		/// Description for
		/// Tum.PDE.LanguageDSL.MappingRelationshipShapeClassReferencesSource.MappingRelationshipShapeClass
		/// </summary>
		public virtual ReferenceRelationship Source
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MappingRelationshipShapeClassReferencesSource.MappingRelationshipShapeClassDomainRoleId) as ReferenceRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MappingRelationshipShapeClassReferencesSource.MappingRelationshipShapeClassDomainRoleId, value);
			}
		}
		#endregion
		#region Target opposite domain role accessor
		/// <summary>
		/// Gets or sets Target.
		/// Description for
		/// Tum.PDE.LanguageDSL.MappingRelationshipShapeClassReferencesTarget.MappingRelationshipShapeClass
		/// </summary>
		public virtual ReferenceRelationship Target
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MappingRelationshipShapeClassReferencesTarget.MappingRelationshipShapeClassDomainRoleId) as ReferenceRelationship;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MappingRelationshipShapeClassReferencesTarget.MappingRelationshipShapeClassDomainRoleId, value);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass MappingRelationshipShapeClass
	/// Description for Tum.PDE.LanguageDSL.MappingRelationshipShapeClass
	/// </summary>
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
			
	public partial class MappingRelationshipShapeClass : MappingRelationshipShapeClassBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MappingRelationshipShapeClass(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MappingRelationshipShapeClass(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass DiagramView
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DiagramView.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramView.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("fd257395-3eb9-4164-b513-00783afd0c85")]
	public abstract partial class DiagramViewBase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DiagramView domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xfd257395, 0x3eb9, 0x4164, 0xb5, 0x13, 0x00, 0x78, 0x3a, 0xfd, 0x0c, 0x85);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected DiagramViewBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DiagramClassViews opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DiagramClassViews.
		/// Description for Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.DiagramView
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DiagramClassView> DiagramClassViews
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DiagramClassView>, DiagramClassView>(global::Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.DiagramViewDomainRoleId);
			}
		}
		#endregion
		#region ViewContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ViewContext.
		/// Description for Tum.PDE.LanguageDSL.ViewContextHasDiagramView.DiagramView
		/// </summary>
		public virtual ViewContext ViewContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextHasDiagramView.DiagramViewDomainRoleId) as ViewContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextHasDiagramView.DiagramViewDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DiagramClassView.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.DiagramClassView sourceDiagramClassView1 = sourceElement as global::Tum.PDE.LanguageDSL.DiagramClassView;
			if (sourceDiagramClassView1 != null)
			{
				// Create link for path DiagramViewHasDiagramClassViews.DiagramClassViews
				this.DiagramClassViews.Add(sourceDiagramClassView1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.DiagramClassView sourceDiagramClassView1 = sourceElement as global::Tum.PDE.LanguageDSL.DiagramClassView;
			if (sourceDiagramClassView1 != null)
			{
				// Delete link for path DiagramViewHasDiagramClassViews.DiagramClassViews
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.GetLinks((global::Tum.PDE.LanguageDSL.DiagramView)this, sourceDiagramClassView1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.DiagramViewDomainRoleId, global::Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.DiagramClassViewDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass DiagramView
	/// Description for Tum.PDE.LanguageDSL.DiagramView
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class DiagramView : DiagramViewBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DiagramView(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DiagramView(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass DesignerDiagramClass
	/// Description for Tum.PDE.LanguageDSL.DesignerDiagramClass
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DesignerDiagramClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DesignerDiagramClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("59ed98b4-8bde-4eec-9495-69aac65fa96e")]
	public partial class DesignerDiagramClass : DiagramClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DesignerDiagramClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x59ed98b4, 0x8bde, 0x4eec, 0x94, 0x95, 0x69, 0xaa, 0xc6, 0x5f, 0xa9, 0x6e);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DesignerDiagramClass(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DesignerDiagramClass(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ImportedDiagramClasses opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ImportedDiagramClasses.
		/// Description for
		/// Tum.PDE.LanguageDSL.DesignerDiagramClassReferencesImportedDiagramClasses.DesignerDiagramClass
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DiagramClass> ImportedDiagramClasses
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DiagramClass>, DiagramClass>(global::Tum.PDE.LanguageDSL.DesignerDiagramClassReferencesImportedDiagramClasses.DesignerDiagramClassDomainRoleId);
			}
		}
		#endregion
		#region IncludedDiagramClasses opposite domain role accessor
		
		/// <summary>
		/// Gets a list of IncludedDiagramClasses.
		/// Description for
		/// Tum.PDE.LanguageDSL.DesignerDiagramClassReferencesIncludedDiagramClasses.DesignerDiagramClass
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DiagramClass> IncludedDiagramClasses
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DiagramClass>, DiagramClass>(global::Tum.PDE.LanguageDSL.DesignerDiagramClassReferencesIncludedDiagramClasses.DesignerDiagramClassDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass PresentationDomainClassElement
	/// Description for Tum.PDE.LanguageDSL.PresentationDomainClassElement
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PresentationDomainClassElement.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PresentationDomainClassElement.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("23c03dd2-1dff-497d-988b-3d63afe009ed")]
	public abstract partial class PresentationDomainClassElement : PresentationElementClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// PresentationDomainClassElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x23c03dd2, 0x1dff, 0x497d, 0x98, 0x8b, 0x3d, 0x63, 0xaf, 0xe0, 0x09, 0xed);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected PresentationDomainClassElement(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DomainClass opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainClass.
		/// Description for Tum.PDE.LanguageDSL.ShapeClassReferencesDomainClass.ShapeClass
		/// </summary>
		public virtual DomainClass DomainClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassReferencesDomainClass.ShapeClassDomainRoleId) as DomainClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassReferencesDomainClass.ShapeClassDomainRoleId, value);
			}
		}
		#endregion
		#region ShapeClassNode opposite domain role accessor
		/// <summary>
		/// Gets or sets ShapeClassNode.
		/// Description for
		/// Tum.PDE.LanguageDSL.ShapeClassNodeReferencesShapeClass.ShapeClass
		/// </summary>
		public virtual ShapeClassNode ShapeClassNode
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassNodeReferencesShapeClass.ShapeClassDomainRoleId) as ShapeClassNode;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ShapeClassNodeReferencesShapeClass.ShapeClassDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ModelTreeNode
	/// Description for Tum.PDE.LanguageDSL.ModelTreeNode
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ModelTreeNode.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ModelTreeNode.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("24804ce0-051d-42a8-a89e-3e4babd873bf")]
	public abstract partial class ModelTreeNode : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ModelTreeNode domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x24804ce0, 0x051d, 0x42a8, 0xa8, 0x9e, 0x3e, 0x4b, 0xab, 0xd8, 0x73, 0xbf);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ModelTreeNode(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region EmbeddingModelTreeViewModel opposite domain role accessor
		/// <summary>
		/// Gets or sets EmbeddingModelTreeViewModel.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.ModelTreeNode
		/// </summary>
		public virtual DomainModelTreeView EmbeddingModelTreeViewModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.ModelTreeNodeDomainRoleId) as DomainModelTreeView;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.ModelTreeNodeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SerializedRelationship
	/// Description for Tum.PDE.LanguageDSL.SerializedRelationship
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedRelationship.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("49fa41f1-ee46-4690-bc17-b9cf1bc79bea")]
	public abstract partial class SerializedRelationship : SerializationClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SerializedRelationship domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x49fa41f1, 0xee46, 0x4690, 0xbc, 0x17, 0xb9, 0xcf, 0x1b, 0xc7, 0x9b, 0xea);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected SerializedRelationship(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsInFullSerialization domain property code
		
		/// <summary>
		/// IsInFullSerialization domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsInFullSerializationDomainPropertyId = new global::System.Guid(0xc909e8c4, 0x7687, 0x454a, 0xad, 0x75, 0x4c, 0x6b, 0x5e, 0xd7, 0xa3, 0xa7);
		
		/// <summary>
		/// Storage for IsInFullSerialization
		/// </summary>
		private global::System.Boolean isInFullSerializationPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsInFullSerialization domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedRelationship.Is In Full
		/// Serialization
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedRelationship/IsInFullSerialization.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedRelationship/IsInFullSerialization.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedRelationship/IsInFullSerialization.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c909e8c4-7687-454a-ad75-4c6b5ed7a3a7")]
		public global::System.Boolean IsInFullSerialization
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isInFullSerializationPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsInFullSerializationPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedRelationship.IsInFullSerialization domain property.
		/// </summary>
		internal sealed partial class IsInFullSerializationPropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedRelationship, global::System.Boolean>
		{
			private IsInFullSerializationPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedRelationship.IsInFullSerialization domain property value handler.
			/// </summary>
			public static readonly IsInFullSerializationPropertyHandler Instance = new IsInFullSerializationPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedRelationship.IsInFullSerialization domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsInFullSerializationDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(SerializedRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isInFullSerializationPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedRelationship element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isInFullSerializationPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region OmitRelationship domain property code
		
		/// <summary>
		/// OmitRelationship domain property Id.
		/// </summary>
		public static readonly global::System.Guid OmitRelationshipDomainPropertyId = new global::System.Guid(0x949216d0, 0x29a1, 0x458c, 0xbd, 0x98, 0x71, 0x6d, 0x2c, 0xf0, 0x80, 0x5b);
		
		/// <summary>
		/// Storage for OmitRelationship
		/// </summary>
		private global::System.Boolean omitRelationshipPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of OmitRelationship domain property.
		/// Description for Tum.PDE.LanguageDSL.SerializedRelationship.Omit Relationship
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SerializedRelationship/OmitRelationship.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.SerializedRelationship/OmitRelationship.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializedRelationship/OmitRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("949216d0-29a1-458c-bd98-716d2cf0805b")]
		public global::System.Boolean OmitRelationship
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return omitRelationshipPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				OmitRelationshipPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SerializedRelationship.OmitRelationship domain property.
		/// </summary>
		internal sealed partial class OmitRelationshipPropertyHandler : DslModeling::DomainPropertyValueHandler<SerializedRelationship, global::System.Boolean>
		{
			private OmitRelationshipPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SerializedRelationship.OmitRelationship domain property value handler.
			/// </summary>
			public static readonly OmitRelationshipPropertyHandler Instance = new OmitRelationshipPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SerializedRelationship.OmitRelationship domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return OmitRelationshipDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(SerializedRelationship element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.omitRelationshipPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SerializedRelationship element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.omitRelationshipPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SerializedDomainRoles opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SerializedDomainRoles.
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.SerializedRelationship
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SerializedDomainRole> SerializedDomainRoles
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SerializedDomainRole>, SerializedDomainRole>(global::Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.SerializedRelationshipDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.SerializedDomainRole.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.SerializedDomainRole sourceSerializedDomainRole1 = sourceElement as global::Tum.PDE.LanguageDSL.SerializedDomainRole;
			if (sourceSerializedDomainRole1 != null)
			{
				// Create link for path SerializedRelationshipHasSerializedDomainRoles.SerializedDomainRoles
				this.SerializedDomainRoles.Add(sourceSerializedDomainRole1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.SerializedDomainRole sourceSerializedDomainRole1 = sourceElement as global::Tum.PDE.LanguageDSL.SerializedDomainRole;
			if (sourceSerializedDomainRole1 != null)
			{
				// Delete link for path SerializedRelationshipHasSerializedDomainRoles.SerializedDomainRoles
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.GetLinks((global::Tum.PDE.LanguageDSL.SerializedRelationship)this, sourceSerializedDomainRole1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.SerializedRelationshipDomainRoleId, global::Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.SerializedDomainRoleDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass Credits
	/// Description for Tum.PDE.LanguageDSL.Credits
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.Credits.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Credits.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("850d43f8-8f27-4f58-950e-2fce7c28ed90")]
	public partial class Credits : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Credits domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x850d43f8, 0x8f27, 0x4f58, 0x95, 0x0e, 0x2f, 0xce, 0x7c, 0x28, 0xed, 0x90);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Credits(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Credits(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region CreditItems opposite domain role accessor
		
		/// <summary>
		/// Gets a list of CreditItems.
		/// Description for Tum.PDE.LanguageDSL.CreditsHasCreditItems.Credits
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<CreditItem> CreditItems
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<CreditItem>, CreditItem>(global::Tum.PDE.LanguageDSL.CreditsHasCreditItems.CreditsDomainRoleId);
			}
		}
		#endregion
		#region AdditionalInformation opposite domain role accessor
		/// <summary>
		/// Gets or sets AdditionalInformation.
		/// Description for Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.Credits
		/// </summary>
		public virtual AdditionalInformation AdditionalInformation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.CreditsDomainRoleId) as AdditionalInformation;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.CreditsDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.CreditItem.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.CreditItem sourceCreditItem1 = sourceElement as global::Tum.PDE.LanguageDSL.CreditItem;
			if (sourceCreditItem1 != null)
			{
				// Create link for path CreditsHasCreditItems.CreditItems
				this.CreditItems.Add(sourceCreditItem1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.CreditItem sourceCreditItem1 = sourceElement as global::Tum.PDE.LanguageDSL.CreditItem;
			if (sourceCreditItem1 != null)
			{
				// Delete link for path CreditsHasCreditItems.CreditItems
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.CreditsHasCreditItems.GetLinks((global::Tum.PDE.LanguageDSL.Credits)this, sourceCreditItem1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.CreditsHasCreditItems.CreditsDomainRoleId, global::Tum.PDE.LanguageDSL.CreditsHasCreditItems.CreditItemDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass CreditItem
	/// Description for Tum.PDE.LanguageDSL.CreditItem
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.CreditItem.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.CreditItem.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("919a50f9-8f28-47a5-9fff-40608be6b966")]
	public partial class CreditItem : LinkItem
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// CreditItem domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x919a50f9, 0x8f28, 0x47a5, 0x9f, 0xff, 0x40, 0x60, 0x8b, 0xe6, 0xb9, 0x66);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CreditItem(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CreditItem(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Credits opposite domain role accessor
		/// <summary>
		/// Gets or sets Credits.
		/// Description for Tum.PDE.LanguageDSL.CreditsHasCreditItems.CreditItem
		/// </summary>
		public virtual Credits Credits
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.CreditsHasCreditItems.CreditItemDomainRoleId) as Credits;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.CreditsHasCreditItems.CreditItemDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass AdditionalInformation
	/// Description for Tum.PDE.LanguageDSL.AdditionalInformation
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.AdditionalInformation.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AdditionalInformation.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("350cc410-17a7-4819-8cfd-7a2dd57276c9")]
	public partial class AdditionalInformation : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AdditionalInformation domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x350cc410, 0x17a7, 0x4819, 0x8c, 0xfd, 0x7a, 0x2d, 0xd5, 0x72, 0x76, 0xc9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AdditionalInformation(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AdditionalInformation(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region MetaModel opposite domain role accessor
		/// <summary>
		/// Gets or sets MetaModel.
		/// Description for
		/// Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.AdditionalInformation
		/// </summary>
		public virtual MetaModel MetaModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.AdditionalInformationDomainRoleId) as MetaModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.AdditionalInformationDomainRoleId, value);
			}
		}
		#endregion
		#region Credits opposite domain role accessor
		/// <summary>
		/// Gets or sets Credits.
		/// Description for
		/// Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.AdditionalInformation
		/// </summary>
		public virtual Credits Credits
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.AdditionalInformationDomainRoleId) as Credits;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.AdditionalInformationDomainRoleId, value);
			}
		}
		#endregion
		#region FurtherInformation opposite domain role accessor
		/// <summary>
		/// Gets or sets FurtherInformation.
		/// Description for
		/// Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.AdditionalInformation
		/// </summary>
		public virtual FurtherInformation FurtherInformation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.AdditionalInformationDomainRoleId) as FurtherInformation;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.AdditionalInformationDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.FurtherInformation.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: AdditionalInformationHasFurtherInformation.FurtherInformation
					if (this.FurtherInformation != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.Credits.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: AdditionalInformationHasCredits.Credits
					if (this.Credits != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.FurtherInformation sourceFurtherInformation1 = sourceElement as global::Tum.PDE.LanguageDSL.FurtherInformation;
			if (sourceFurtherInformation1 != null)
			{
				// Create link for path AdditionalInformationHasFurtherInformation.FurtherInformation
				this.FurtherInformation = sourceFurtherInformation1;

				return;
			}
				
			global::Tum.PDE.LanguageDSL.Credits sourceCredits2 = sourceElement as global::Tum.PDE.LanguageDSL.Credits;
			if (sourceCredits2 != null)
			{
				// Create link for path AdditionalInformationHasCredits.Credits
				this.Credits = sourceCredits2;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.FurtherInformation sourceFurtherInformation1 = sourceElement as global::Tum.PDE.LanguageDSL.FurtherInformation;
			if (sourceFurtherInformation1 != null)
			{
				// Delete link for path AdditionalInformationHasFurtherInformation.FurtherInformation
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.GetLinks((global::Tum.PDE.LanguageDSL.AdditionalInformation)this, sourceFurtherInformation1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.AdditionalInformationDomainRoleId, global::Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.FurtherInformationDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.Credits sourceCredits2 = sourceElement as global::Tum.PDE.LanguageDSL.Credits;
			if (sourceCredits2 != null)
			{
				// Delete link for path AdditionalInformationHasCredits.Credits
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.GetLinks((global::Tum.PDE.LanguageDSL.AdditionalInformation)this, sourceCredits2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.AdditionalInformationDomainRoleId, global::Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.CreditsDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass FurtherInformation
	/// Description for Tum.PDE.LanguageDSL.FurtherInformation
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.FurtherInformation.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.FurtherInformation.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("00524ba8-7dde-4fff-896b-b8489fdce375")]
	public partial class FurtherInformation : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// FurtherInformation domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x00524ba8, 0x7dde, 0x4fff, 0x89, 0x6b, 0xb8, 0x48, 0x9f, 0xdc, 0xe3, 0x75);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public FurtherInformation(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public FurtherInformation(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region AdditionalInformation opposite domain role accessor
		/// <summary>
		/// Gets or sets AdditionalInformation.
		/// Description for
		/// Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.FurtherInformation
		/// </summary>
		public virtual AdditionalInformation AdditionalInformation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.FurtherInformationDomainRoleId) as AdditionalInformation;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.FurtherInformationDomainRoleId, value);
			}
		}
		#endregion
		#region InformationItems opposite domain role accessor
		
		/// <summary>
		/// Gets a list of InformationItems.
		/// Description for
		/// Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.FurtherInformation
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<InformationItem> InformationItems
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<InformationItem>, InformationItem>(global::Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.FurtherInformationDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.InformationItem.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.InformationItem sourceInformationItem1 = sourceElement as global::Tum.PDE.LanguageDSL.InformationItem;
			if (sourceInformationItem1 != null)
			{
				// Create link for path FurtherInformationHasInformationItems.InformationItems
				this.InformationItems.Add(sourceInformationItem1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.InformationItem sourceInformationItem1 = sourceElement as global::Tum.PDE.LanguageDSL.InformationItem;
			if (sourceInformationItem1 != null)
			{
				// Delete link for path FurtherInformationHasInformationItems.InformationItems
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.GetLinks((global::Tum.PDE.LanguageDSL.FurtherInformation)this, sourceInformationItem1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.FurtherInformationDomainRoleId, global::Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.InformationItemDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass InformationItem
	/// Description for Tum.PDE.LanguageDSL.InformationItem
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.InformationItem.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.InformationItem.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("dc872f5b-4941-40c8-b665-b5f5a22430c6")]
	public partial class InformationItem : LinkItem
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// InformationItem domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdc872f5b, 0x4941, 0x40c8, 0xb6, 0x65, 0xb5, 0xf5, 0xa2, 0x24, 0x30, 0xc6);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public InformationItem(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public InformationItem(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region FurtherInformation opposite domain role accessor
		/// <summary>
		/// Gets or sets FurtherInformation.
		/// Description for
		/// Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.InformationItem
		/// </summary>
		public virtual FurtherInformation FurtherInformation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.InformationItemDomainRoleId) as FurtherInformation;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.InformationItemDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass LinkItem
	/// Description for Tum.PDE.LanguageDSL.LinkItem
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.LinkItem.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LinkItem.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Title = {titlePropertyStorage})")]
	[DslModeling::DomainObjectId("40d03eb0-f578-425e-a3c0-bdc15c8d223d")]
	public abstract partial class LinkItem : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// LinkItem domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x40d03eb0, 0xf578, 0x425e, 0xa3, 0xc0, 0xbd, 0xc1, 0x5c, 0x8d, 0x22, 0x3d);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected LinkItem(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Title domain property code
		
		/// <summary>
		/// Title domain property Id.
		/// </summary>
		public static readonly global::System.Guid TitleDomainPropertyId = new global::System.Guid(0x8ad74ca9, 0xa901, 0x4b53, 0xb3, 0xf9, 0x0e, 0xc4, 0x4f, 0x61, 0x69, 0xe0);
		
		/// <summary>
		/// Storage for Title
		/// </summary>
		private global::System.String titlePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Title domain property.
		/// Description for Tum.PDE.LanguageDSL.LinkItem.Title
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.LinkItem/Title.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.LinkItem/Title.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LinkItem/Title.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("8ad74ca9-a901-4b53-b3f9-0ec44f6169e0")]
		public global::System.String Title
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return titlePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TitlePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LinkItem.Title domain property.
		/// </summary>
		internal sealed partial class TitlePropertyHandler : DslModeling::DomainPropertyValueHandler<LinkItem, global::System.String>
		{
			private TitlePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LinkItem.Title domain property value handler.
			/// </summary>
			public static readonly TitlePropertyHandler Instance = new TitlePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LinkItem.Title domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TitleDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LinkItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.titlePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LinkItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.titlePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0x17d8ffbd, 0xaf05, 0x416e, 0xbd, 0xaa, 0x5c, 0x14, 0xe7, 0xfa, 0xf1, 0x89);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for Tum.PDE.LanguageDSL.LinkItem.Description
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.LinkItem/Description.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.LinkItem/Description.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LinkItem/Description.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("17d8ffbd-af05-416e-bdaa-5c14e7faf189")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LinkItem.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<LinkItem, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LinkItem.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LinkItem.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LinkItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LinkItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Link domain property code
		
		/// <summary>
		/// Link domain property Id.
		/// </summary>
		public static readonly global::System.Guid LinkDomainPropertyId = new global::System.Guid(0xdd88473a, 0x0b8f, 0x4c82, 0xae, 0x72, 0xb5, 0x94, 0x91, 0xc8, 0x4e, 0xb8);
		
		/// <summary>
		/// Storage for Link
		/// </summary>
		private global::System.String linkPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Link domain property.
		/// Description for Tum.PDE.LanguageDSL.LinkItem.Link
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.LinkItem/Link.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.LinkItem/Link.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LinkItem/Link.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("dd88473a-0b8f-4c82-ae72-b59491c84eb8")]
		public global::System.String Link
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return linkPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				LinkPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LinkItem.Link domain property.
		/// </summary>
		internal sealed partial class LinkPropertyHandler : DslModeling::DomainPropertyValueHandler<LinkItem, global::System.String>
		{
			private LinkPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LinkItem.Link domain property value handler.
			/// </summary>
			public static readonly LinkPropertyHandler Instance = new LinkPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LinkItem.Link domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return LinkDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LinkItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.linkPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LinkItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.linkPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Category domain property code
		
		/// <summary>
		/// Category domain property Id.
		/// </summary>
		public static readonly global::System.Guid CategoryDomainPropertyId = new global::System.Guid(0x35507d23, 0x2bf2, 0x47be, 0xa1, 0xbd, 0x4c, 0x33, 0x6e, 0x35, 0x13, 0xe0);
		
		/// <summary>
		/// Storage for Category
		/// </summary>
		private global::System.String categoryPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Category domain property.
		/// Description for Tum.PDE.LanguageDSL.LinkItem.Category
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.LinkItem/Category.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.LinkItem/Category.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LinkItem/Category.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("35507d23-2bf2-47be-a1bd-4c336e3513e0")]
		public global::System.String Category
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return categoryPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CategoryPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LinkItem.Category domain property.
		/// </summary>
		internal sealed partial class CategoryPropertyHandler : DslModeling::DomainPropertyValueHandler<LinkItem, global::System.String>
		{
			private CategoryPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LinkItem.Category domain property value handler.
			/// </summary>
			public static readonly CategoryPropertyHandler Instance = new CategoryPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LinkItem.Category domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CategoryDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LinkItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.categoryPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LinkItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.categoryPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass MetaModelLibrary
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModelLibrary.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModelLibrary.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("d532721c-6815-4ffe-9d94-fff466a53b89")]
	public abstract partial class MetaModelLibraryBase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// MetaModelLibrary domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd532721c, 0x6815, 0x4ffe, 0x9d, 0x94, 0xff, 0xf4, 0x66, 0xa5, 0x3b, 0x89);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected MetaModelLibraryBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region FilePath domain property code
		
		/// <summary>
		/// FilePath domain property Id.
		/// </summary>
		public static readonly global::System.Guid FilePathDomainPropertyId = new global::System.Guid(0x83fea363, 0x08e6, 0x4bfb, 0xac, 0x40, 0x8e, 0x8c, 0x98, 0x5e, 0x22, 0xbd);
		
		/// <summary>
		/// Storage for FilePath
		/// </summary>
		private global::System.String filePathPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of FilePath domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModelLibrary.File Path
		/// </summary>
		[System.ComponentModel.Editor(typeof(Tum.PDE.LanguageDSL.Design.MetaModelLibraryImportEditor), typeof(System.Drawing.Design.UITypeEditor))]
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModelLibrary/FilePath.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModelLibrary/FilePath.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModelLibrary/FilePath.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("83fea363-08e6-4bfb-ac40-8e8c985e22bd")]
		public global::System.String FilePath
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return filePathPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FilePathPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModelLibrary.FilePath domain property.
		/// </summary>
		internal sealed partial class FilePathPropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelLibraryBase, global::System.String>
		{
			private FilePathPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModelLibrary.FilePath domain property value handler.
			/// </summary>
			public static readonly FilePathPropertyHandler Instance = new FilePathPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModelLibrary.FilePath domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FilePathDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelLibraryBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.filePathPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelLibraryBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.filePathPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x82746305, 0xcc3f, 0x476b, 0xb8, 0x97, 0x5e, 0xe5, 0xf9, 0xc5, 0xf3, 0x5c);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.MetaModelLibrary.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.MetaModelLibrary/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.MetaModelLibrary/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.MetaModelLibrary/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("82746305-cc3f-476b-b897-5ee5f9c5f35c")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetaModelLibrary.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<MetaModelLibraryBase, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetaModelLibrary.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetaModelLibrary.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(MetaModelLibraryBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetaModelLibraryBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MetaModel opposite domain role accessor
		/// <summary>
		/// Gets or sets MetaModel.
		/// Description for
		/// Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.MetaModelLibrary
		/// </summary>
		public virtual MetaModel MetaModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.MetaModelLibraryDomainRoleId) as MetaModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.MetaModelLibraryDomainRoleId, value);
			}
		}
		#endregion
		#region ImportedLibrary opposite domain role accessor
		/// <summary>
		/// Gets or sets ImportedLibrary.
		/// Description for
		/// Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.MetaModelLibrary
		/// </summary>
		public virtual BaseMetaModel ImportedLibrary
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.MetaModelLibraryDomainRoleId) as BaseMetaModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.MetaModelLibraryDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.BaseMetaModel.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: MetaModelLibraryHasImportedLibrary.ImportedLibrary
					if (this.ImportedLibrary != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.BaseMetaModel sourceBaseMetaModel1 = sourceElement as global::Tum.PDE.LanguageDSL.BaseMetaModel;
			if (sourceBaseMetaModel1 != null)
			{
				// Create link for path MetaModelLibraryHasImportedLibrary.ImportedLibrary
				this.ImportedLibrary = sourceBaseMetaModel1;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.BaseMetaModel sourceBaseMetaModel1 = sourceElement as global::Tum.PDE.LanguageDSL.BaseMetaModel;
			if (sourceBaseMetaModel1 != null)
			{
				// Delete link for path MetaModelLibraryHasImportedLibrary.ImportedLibrary
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.GetLinks((global::Tum.PDE.LanguageDSL.MetaModelLibrary)this, sourceBaseMetaModel1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.MetaModelLibraryDomainRoleId, global::Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.BaseMetaModelDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass MetaModelLibrary
	/// Description for Tum.PDE.LanguageDSL.MetaModelLibrary
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class MetaModelLibrary : MetaModelLibraryBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MetaModelLibrary(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MetaModelLibrary(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass BaseMetaModel
	/// Description for Tum.PDE.LanguageDSL.BaseMetaModel
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.BaseMetaModel.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.BaseMetaModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("3fbc33af-0d43-4ca5-99a8-1f4f7110a6b5")]
	public abstract partial class BaseMetaModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// BaseMetaModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3fbc33af, 0x0d43, 0x4ca5, 0x99, 0xa8, 0x1f, 0x4f, 0x71, 0x10, 0xa6, 0xb5);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected BaseMetaModel(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region MetaModelLibrary opposite domain role accessor
		/// <summary>
		/// Gets or sets MetaModelLibrary.
		/// Description for
		/// Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.BaseMetaModel
		/// </summary>
		public virtual MetaModelLibrary MetaModelLibrary
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.BaseMetaModelDomainRoleId) as MetaModelLibrary;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.BaseMetaModelDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ViewContext
	/// Description for Tum.PDE.LanguageDSL.ViewContext
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ViewContext.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ViewContext.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("47bdd9c3-8ea1-490f-911c-b230eef810f6")]
	public partial class ViewContext : BaseViewContext
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ViewContext domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x47bdd9c3, 0x8ea1, 0x490f, 0x91, 0x1c, 0xb2, 0x30, 0xee, 0xf8, 0x10, 0xf6);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ViewContext(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ViewContext(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DomainModelTreeView opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainModelTreeView.
		/// Description for
		/// Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.ViewContext
		/// </summary>
		public virtual DomainModelTreeView DomainModelTreeView
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.ViewContextDomainRoleId) as DomainModelTreeView;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.ViewContextDomainRoleId, value);
			}
		}
		#endregion
		#region DiagramView opposite domain role accessor
		/// <summary>
		/// Gets or sets DiagramView.
		/// Description for Tum.PDE.LanguageDSL.ViewContextHasDiagramView.ViewContext
		/// </summary>
		public virtual DiagramView DiagramView
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextHasDiagramView.ViewContextDomainRoleId) as DiagramView;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextHasDiagramView.ViewContextDomainRoleId, value);
			}
		}
		#endregion
		#region ModelContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ModelContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.ViewContextReferencesModelContext.ViewContext
		/// </summary>
		public virtual LibraryModelContext ModelContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextReferencesModelContext.ViewContextDomainRoleId) as LibraryModelContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextReferencesModelContext.ViewContextDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DiagramView.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: ViewContextHasDiagramView.DiagramView
					if (this.DiagramView != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DomainModelTreeView.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: ViewContextHasDomainModelTreeView.DomainModelTreeView
					if (this.DomainModelTreeView != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.DiagramView sourceDiagramView1 = sourceElement as global::Tum.PDE.LanguageDSL.DiagramView;
			if (sourceDiagramView1 != null)
			{
				// Create link for path ViewContextHasDiagramView.DiagramView
				this.DiagramView = sourceDiagramView1;

				return;
			}
				
			global::Tum.PDE.LanguageDSL.DomainModelTreeView sourceDomainModelTreeView2 = sourceElement as global::Tum.PDE.LanguageDSL.DomainModelTreeView;
			if (sourceDomainModelTreeView2 != null)
			{
				// Create link for path ViewContextHasDomainModelTreeView.DomainModelTreeView
				this.DomainModelTreeView = sourceDomainModelTreeView2;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.DiagramView sourceDiagramView1 = sourceElement as global::Tum.PDE.LanguageDSL.DiagramView;
			if (sourceDiagramView1 != null)
			{
				// Delete link for path ViewContextHasDiagramView.DiagramView
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.ViewContextHasDiagramView.GetLinks((global::Tum.PDE.LanguageDSL.ViewContext)this, sourceDiagramView1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.ViewContextHasDiagramView.ViewContextDomainRoleId, global::Tum.PDE.LanguageDSL.ViewContextHasDiagramView.DiagramViewDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.DomainModelTreeView sourceDomainModelTreeView2 = sourceElement as global::Tum.PDE.LanguageDSL.DomainModelTreeView;
			if (sourceDomainModelTreeView2 != null)
			{
				// Delete link for path ViewContextHasDomainModelTreeView.DomainModelTreeView
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.GetLinks((global::Tum.PDE.LanguageDSL.ViewContext)this, sourceDomainModelTreeView2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.ViewContextDomainRoleId, global::Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.DomainModelTreeViewDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass LibraryModelContext
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.LibraryModelContext.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LibraryModelContext.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("1d8ee4be-55f8-43cd-9bce-9c38d098ed97")]
	public abstract partial class LibraryModelContextBase : BaseModelContext
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// LibraryModelContext domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1d8ee4be, 0x55f8, 0x43cd, 0x9b, 0xce, 0x9c, 0x38, 0xd0, 0x98, 0xed, 0x97);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected LibraryModelContextBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Classes opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Classes.
		/// Description for
		/// Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.LibraryModelContext
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainClass> Classes
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainClass>, DomainClass>(global::Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.LibraryModelContextDomainRoleId);
			}
		}
		#endregion
		#region DiagramClasses opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DiagramClasses.
		/// Description for
		/// Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.LibraryModelContext
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DiagramClass> DiagramClasses
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DiagramClass>, DiagramClass>(global::Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.LibraryModelContextDomainRoleId);
			}
		}
		#endregion
		#region Relationships opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Relationships.
		/// Description for
		/// Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.LibraryModelContext
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainRelationship> Relationships
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainRelationship>, DomainRelationship>(global::Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.LibraryModelContextDomainRoleId);
			}
		}
		#endregion
		#region ViewContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ViewContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.ViewContextReferencesModelContext.LibraryModelContext
		/// </summary>
		public virtual ViewContext ViewContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextReferencesModelContext.LibraryModelContextDomainRoleId) as ViewContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewContextReferencesModelContext.LibraryModelContextDomainRoleId, value);
			}
		}
		#endregion
		#region SerializationModel opposite domain role accessor
		/// <summary>
		/// Gets or sets SerializationModel.
		/// Description for
		/// Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.LibraryModelContext
		/// </summary>
		public virtual SerializationModel SerializationModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.LibraryModelContextDomainRoleId) as SerializationModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.LibraryModelContextDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DomainRelationship.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DomainClass.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.SerializationModel.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: LibraryModelContextHasSerializationModel.SerializationModel
					if (this.SerializationModel != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.DiagramClass.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.DomainRelationship sourceDomainRelationship1 = sourceElement as global::Tum.PDE.LanguageDSL.DomainRelationship;
			if (sourceDomainRelationship1 != null)
			{
				// Create link for path LibraryModelContextHasRelationships.Relationships
				this.Relationships.Add(sourceDomainRelationship1);

				return;
			}
				
			global::Tum.PDE.LanguageDSL.DomainClass sourceDomainClass2 = sourceElement as global::Tum.PDE.LanguageDSL.DomainClass;
			if (sourceDomainClass2 != null)
			{
				// Create link for path LibraryModelContextHasClasses.Classes
				this.Classes.Add(sourceDomainClass2);

				return;
			}
				
			global::Tum.PDE.LanguageDSL.SerializationModel sourceSerializationModel3 = sourceElement as global::Tum.PDE.LanguageDSL.SerializationModel;
			if (sourceSerializationModel3 != null)
			{
				// Create link for path LibraryModelContextHasSerializationModel.SerializationModel
				this.SerializationModel = sourceSerializationModel3;

				return;
			}
				
			global::Tum.PDE.LanguageDSL.DiagramClass sourceDiagramClass4 = sourceElement as global::Tum.PDE.LanguageDSL.DiagramClass;
			if (sourceDiagramClass4 != null)
			{
				// Create link for path LibraryModelContextHasDiagramClasses.DiagramClasses
				this.DiagramClasses.Add(sourceDiagramClass4);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.DomainRelationship sourceDomainRelationship1 = sourceElement as global::Tum.PDE.LanguageDSL.DomainRelationship;
			if (sourceDomainRelationship1 != null)
			{
				// Delete link for path LibraryModelContextHasRelationships.Relationships
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.GetLinks((global::Tum.PDE.LanguageDSL.LibraryModelContext)this, sourceDomainRelationship1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.LibraryModelContextDomainRoleId, global::Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.DomainRelationshipDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.DomainClass sourceDomainClass2 = sourceElement as global::Tum.PDE.LanguageDSL.DomainClass;
			if (sourceDomainClass2 != null)
			{
				// Delete link for path LibraryModelContextHasClasses.Classes
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.GetLinks((global::Tum.PDE.LanguageDSL.LibraryModelContext)this, sourceDomainClass2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.LibraryModelContextDomainRoleId, global::Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.DomainClassDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.SerializationModel sourceSerializationModel3 = sourceElement as global::Tum.PDE.LanguageDSL.SerializationModel;
			if (sourceSerializationModel3 != null)
			{
				// Delete link for path LibraryModelContextHasSerializationModel.SerializationModel
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.GetLinks((global::Tum.PDE.LanguageDSL.LibraryModelContext)this, sourceSerializationModel3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.LibraryModelContextDomainRoleId, global::Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.SerializationModelDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.DiagramClass sourceDiagramClass4 = sourceElement as global::Tum.PDE.LanguageDSL.DiagramClass;
			if (sourceDiagramClass4 != null)
			{
				// Delete link for path LibraryModelContextHasDiagramClasses.DiagramClasses
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.GetLinks((global::Tum.PDE.LanguageDSL.LibraryModelContext)this, sourceDiagramClass4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.LibraryModelContextDomainRoleId, global::Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.DiagramClassDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
	/// <summary>
	/// DomainClass LibraryModelContext
	/// Description for Tum.PDE.LanguageDSL.LibraryModelContext
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class LibraryModelContext : LibraryModelContextBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public LibraryModelContext(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public LibraryModelContext(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass View
	/// Description for Tum.PDE.LanguageDSL.View
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("6bd20701-c129-4c93-a2b5-2fb8a6ac563c")]
	public partial class View : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// View domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x6bd20701, 0xc129, 0x4c93, 0xa2, 0xb5, 0x2f, 0xb8, 0xa6, 0xac, 0x56, 0x3c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public View(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public View(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region CreateModelTree domain property code
		
		/// <summary>
		/// CreateModelTree domain property Id.
		/// </summary>
		public static readonly global::System.Guid CreateModelTreeDomainPropertyId = new global::System.Guid(0x38fca617, 0x178c, 0x4641, 0xb5, 0x4d, 0xb2, 0x0e, 0x7f, 0x21, 0xbc, 0xbc);
		
		/// <summary>
		/// Storage for CreateModelTree
		/// </summary>
		private global::System.Boolean createModelTreePropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of CreateModelTree domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Create Model Tree
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/CreateModelTree.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.View/CreateModelTree.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/CreateModelTree.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("38fca617-178c-4641-b54d-b20e7f21bcbc")]
		public global::System.Boolean CreateModelTree
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return createModelTreePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CreateModelTreePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.CreateModelTree domain property.
		/// </summary>
		internal sealed partial class CreateModelTreePropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Boolean>
		{
			private CreateModelTreePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.CreateModelTree domain property value handler.
			/// </summary>
			public static readonly CreateModelTreePropertyHandler Instance = new CreateModelTreePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.CreateModelTree domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CreateModelTreeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.createModelTreePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.createModelTreePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CreatePropertyGrid domain property code
		
		/// <summary>
		/// CreatePropertyGrid domain property Id.
		/// </summary>
		public static readonly global::System.Guid CreatePropertyGridDomainPropertyId = new global::System.Guid(0xed20157c, 0x8654, 0x40a4, 0x92, 0xd2, 0xc4, 0x73, 0xea, 0x07, 0xe5, 0xf3);
		
		/// <summary>
		/// Storage for CreatePropertyGrid
		/// </summary>
		private global::System.Boolean createPropertyGridPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of CreatePropertyGrid domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Create Property Grid
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/CreatePropertyGrid.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.View/CreatePropertyGrid.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/CreatePropertyGrid.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("ed20157c-8654-40a4-92d2-c473ea07e5f3")]
		public global::System.Boolean CreatePropertyGrid
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return createPropertyGridPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CreatePropertyGridPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.CreatePropertyGrid domain property.
		/// </summary>
		internal sealed partial class CreatePropertyGridPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Boolean>
		{
			private CreatePropertyGridPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.CreatePropertyGrid domain property value handler.
			/// </summary>
			public static readonly CreatePropertyGridPropertyHandler Instance = new CreatePropertyGridPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.CreatePropertyGrid domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CreatePropertyGridDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.createPropertyGridPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.createPropertyGridPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CreateErrorList domain property code
		
		/// <summary>
		/// CreateErrorList domain property Id.
		/// </summary>
		public static readonly global::System.Guid CreateErrorListDomainPropertyId = new global::System.Guid(0x536b48a4, 0xa5e2, 0x4875, 0xae, 0x99, 0x6f, 0xe7, 0x01, 0x9e, 0xd1, 0x4a);
		
		/// <summary>
		/// Storage for CreateErrorList
		/// </summary>
		private global::System.Boolean createErrorListPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of CreateErrorList domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Create Error List
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/CreateErrorList.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.View/CreateErrorList.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/CreateErrorList.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("536b48a4-a5e2-4875-ae99-6fe7019ed14a")]
		public global::System.Boolean CreateErrorList
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return createErrorListPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CreateErrorListPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.CreateErrorList domain property.
		/// </summary>
		internal sealed partial class CreateErrorListPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Boolean>
		{
			private CreateErrorListPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.CreateErrorList domain property value handler.
			/// </summary>
			public static readonly CreateErrorListPropertyHandler Instance = new CreateErrorListPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.CreateErrorList domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CreateErrorListDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.createErrorListPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.createErrorListPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CreateDependenciesView domain property code
		
		/// <summary>
		/// CreateDependenciesView domain property Id.
		/// </summary>
		public static readonly global::System.Guid CreateDependenciesViewDomainPropertyId = new global::System.Guid(0xa0e5225c, 0x6e49, 0x4d41, 0xad, 0x2e, 0x45, 0x4d, 0x04, 0x9a, 0x10, 0xd7);
		
		/// <summary>
		/// Storage for CreateDependenciesView
		/// </summary>
		private global::System.Boolean createDependenciesViewPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of CreateDependenciesView domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Create Dependencies View
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/CreateDependenciesView.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.View/CreateDependenciesView.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/CreateDependenciesView.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("a0e5225c-6e49-4d41-ad2e-454d049a10d7")]
		public global::System.Boolean CreateDependenciesView
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return createDependenciesViewPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CreateDependenciesViewPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.CreateDependenciesView domain property.
		/// </summary>
		internal sealed partial class CreateDependenciesViewPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Boolean>
		{
			private CreateDependenciesViewPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.CreateDependenciesView domain property value handler.
			/// </summary>
			public static readonly CreateDependenciesViewPropertyHandler Instance = new CreateDependenciesViewPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.CreateDependenciesView domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CreateDependenciesViewDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.createDependenciesViewPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.createDependenciesViewPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ModelTreeId domain property code
		
		/// <summary>
		/// ModelTreeId domain property Id.
		/// </summary>
		public static readonly global::System.Guid ModelTreeIdDomainPropertyId = new global::System.Guid(0xec738e6c, 0x68f7, 0x40a2, 0x8d, 0x81, 0x1f, 0x30, 0xe1, 0xab, 0xc2, 0x3c);
		
		/// <summary>
		/// Storage for ModelTreeId
		/// </summary>
		private global::System.Guid modelTreeIdPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ModelTreeId domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Model Tree Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/ModelTreeId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/ModelTreeId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("ec738e6c-68f7-40a2-8d81-1f30e1abc23c")]
		public global::System.Guid ModelTreeId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modelTreeIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ModelTreeIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.ModelTreeId domain property.
		/// </summary>
		internal sealed partial class ModelTreeIdPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Guid>
		{
			private ModelTreeIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.ModelTreeId domain property value handler.
			/// </summary>
			public static readonly ModelTreeIdPropertyHandler Instance = new ModelTreeIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.ModelTreeId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ModelTreeIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.modelTreeIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.modelTreeIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PropertyGridId domain property code
		
		/// <summary>
		/// PropertyGridId domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropertyGridIdDomainPropertyId = new global::System.Guid(0xc231a15a, 0xfeac, 0x4c23, 0x81, 0x8d, 0x6c, 0x9c, 0xdf, 0x62, 0x13, 0x6b);
		
		/// <summary>
		/// Storage for PropertyGridId
		/// </summary>
		private global::System.Guid propertyGridIdPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of PropertyGridId domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Property Grid Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/PropertyGridId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/PropertyGridId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("c231a15a-feac-4c23-818d-6c9cdf62136b")]
		public global::System.Guid PropertyGridId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propertyGridIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropertyGridIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.PropertyGridId domain property.
		/// </summary>
		internal sealed partial class PropertyGridIdPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Guid>
		{
			private PropertyGridIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.PropertyGridId domain property value handler.
			/// </summary>
			public static readonly PropertyGridIdPropertyHandler Instance = new PropertyGridIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.PropertyGridId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropertyGridIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propertyGridIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propertyGridIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ErrorListId domain property code
		
		/// <summary>
		/// ErrorListId domain property Id.
		/// </summary>
		public static readonly global::System.Guid ErrorListIdDomainPropertyId = new global::System.Guid(0x02421f5c, 0x598c, 0x45cb, 0xae, 0x57, 0x27, 0x3a, 0xa6, 0x92, 0x5f, 0x77);
		
		/// <summary>
		/// Storage for ErrorListId
		/// </summary>
		private global::System.Guid errorListIdPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ErrorListId domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Error List Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/ErrorListId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/ErrorListId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("02421f5c-598c-45cb-ae57-273aa6925f77")]
		public global::System.Guid ErrorListId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return errorListIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ErrorListIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.ErrorListId domain property.
		/// </summary>
		internal sealed partial class ErrorListIdPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Guid>
		{
			private ErrorListIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.ErrorListId domain property value handler.
			/// </summary>
			public static readonly ErrorListIdPropertyHandler Instance = new ErrorListIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.ErrorListId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ErrorListIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.errorListIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.errorListIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DependenciesViewId domain property code
		
		/// <summary>
		/// DependenciesViewId domain property Id.
		/// </summary>
		public static readonly global::System.Guid DependenciesViewIdDomainPropertyId = new global::System.Guid(0x4f0004bc, 0xbc65, 0x487f, 0x98, 0x9c, 0x4c, 0x78, 0x65, 0x1d, 0x7d, 0x98);
		
		/// <summary>
		/// Storage for DependenciesViewId
		/// </summary>
		private global::System.Guid dependenciesViewIdPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of DependenciesViewId domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Dependencies View Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/DependenciesViewId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/DependenciesViewId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("4f0004bc-bc65-487f-989c-4c78651d7d98")]
		public global::System.Guid DependenciesViewId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return dependenciesViewIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DependenciesViewIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.DependenciesViewId domain property.
		/// </summary>
		internal sealed partial class DependenciesViewIdPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Guid>
		{
			private DependenciesViewIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.DependenciesViewId domain property value handler.
			/// </summary>
			public static readonly DependenciesViewIdPropertyHandler Instance = new DependenciesViewIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.DependenciesViewId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DependenciesViewIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.dependenciesViewIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.dependenciesViewIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SearchId domain property code
		
		/// <summary>
		/// SearchId domain property Id.
		/// </summary>
		public static readonly global::System.Guid SearchIdDomainPropertyId = new global::System.Guid(0x4cc15b2e, 0x59fe, 0x4454, 0x9c, 0x69, 0x1c, 0x35, 0x11, 0xfe, 0xf5, 0xb5);
		
		/// <summary>
		/// Storage for SearchId
		/// </summary>
		private global::System.Guid searchIdPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of SearchId domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Search Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/SearchId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/SearchId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("4cc15b2e-59fe-4454-9c69-1c3511fef5b5")]
		public global::System.Guid SearchId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return searchIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SearchIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.SearchId domain property.
		/// </summary>
		internal sealed partial class SearchIdPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Guid>
		{
			private SearchIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.SearchId domain property value handler.
			/// </summary>
			public static readonly SearchIdPropertyHandler Instance = new SearchIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.SearchId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SearchIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.searchIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.searchIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SearchResultId domain property code
		
		/// <summary>
		/// SearchResultId domain property Id.
		/// </summary>
		public static readonly global::System.Guid SearchResultIdDomainPropertyId = new global::System.Guid(0x84fa93a8, 0xcf68, 0x456f, 0x97, 0x32, 0x92, 0x44, 0x4b, 0x1b, 0xd3, 0x90);
		
		/// <summary>
		/// Storage for SearchResultId
		/// </summary>
		private global::System.Guid searchResultIdPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of SearchResultId domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Search Result Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/SearchResultId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/SearchResultId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("84fa93a8-cf68-456f-9732-92444b1bd390")]
		public global::System.Guid SearchResultId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return searchResultIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SearchResultIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.SearchResultId domain property.
		/// </summary>
		internal sealed partial class SearchResultIdPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Guid>
		{
			private SearchResultIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.SearchResultId domain property value handler.
			/// </summary>
			public static readonly SearchResultIdPropertyHandler Instance = new SearchResultIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.SearchResultId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SearchResultIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.searchResultIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.searchResultIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PluginWindowId domain property code
		
		/// <summary>
		/// PluginWindowId domain property Id.
		/// </summary>
		public static readonly global::System.Guid PluginWindowIdDomainPropertyId = new global::System.Guid(0x30774d16, 0xc743, 0x40ea, 0x94, 0x4d, 0xd7, 0x73, 0x36, 0x30, 0xb6, 0x35);
		
		/// <summary>
		/// Storage for PluginWindowId
		/// </summary>
		private global::System.Guid pluginWindowIdPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of PluginWindowId domain property.
		/// Description for Tum.PDE.LanguageDSL.View.Plugin Window Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.View/PluginWindowId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.View/PluginWindowId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("30774d16-c743-40ea-944d-d7733630b635")]
		public global::System.Guid PluginWindowId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return pluginWindowIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PluginWindowIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the View.PluginWindowId domain property.
		/// </summary>
		internal sealed partial class PluginWindowIdPropertyHandler : DslModeling::DomainPropertyValueHandler<View, global::System.Guid>
		{
			private PluginWindowIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the View.PluginWindowId domain property value handler.
			/// </summary>
			public static readonly PluginWindowIdPropertyHandler Instance = new PluginWindowIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the View.PluginWindowId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PluginWindowIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Guid GetValue(View element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.pluginWindowIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(View element, global::System.Guid newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Guid oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.pluginWindowIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MetaModel opposite domain role accessor
		/// <summary>
		/// Gets or sets MetaModel.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasView.View
		/// </summary>
		public virtual MetaModel MetaModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasView.ViewDomainRoleId) as MetaModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasView.ViewDomainRoleId, value);
			}
		}
		#endregion
		#region ViewContexts opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ViewContexts.
		/// Description for Tum.PDE.LanguageDSL.ViewHasViewContexts.View
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<BaseViewContext> ViewContexts
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<BaseViewContext>, BaseViewContext>(global::Tum.PDE.LanguageDSL.ViewHasViewContexts.ViewDomainRoleId);
			}
		}
		#endregion
		#region ModelTree opposite domain role accessor
		/// <summary>
		/// Gets or sets ModelTree.
		/// Description for Tum.PDE.LanguageDSL.ViewHasModelTree.View
		/// </summary>
		public virtual ModelTree ModelTree
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewHasModelTree.ViewDomainRoleId) as ModelTree;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewHasModelTree.ViewDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.ModelTree.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: ViewHasModelTree.ModelTree
					if (this.ModelTree != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Tum.PDE.LanguageDSL.BaseViewContext.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Tum.PDE.LanguageDSL.ModelTree sourceModelTree1 = sourceElement as global::Tum.PDE.LanguageDSL.ModelTree;
			if (sourceModelTree1 != null)
			{
				// Create link for path ViewHasModelTree.ModelTree
				this.ModelTree = sourceModelTree1;

				return;
			}
				
			global::Tum.PDE.LanguageDSL.BaseViewContext sourceBaseViewContext2 = sourceElement as global::Tum.PDE.LanguageDSL.BaseViewContext;
			if (sourceBaseViewContext2 != null)
			{
				// Create link for path ViewHasViewContexts.ViewContexts
				this.ViewContexts.Add(sourceBaseViewContext2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Tum.PDE.LanguageDSL.ModelTree sourceModelTree1 = sourceElement as global::Tum.PDE.LanguageDSL.ModelTree;
			if (sourceModelTree1 != null)
			{
				// Delete link for path ViewHasModelTree.ModelTree
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.ViewHasModelTree.GetLinks((global::Tum.PDE.LanguageDSL.View)this, sourceModelTree1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.ViewHasModelTree.ViewDomainRoleId, global::Tum.PDE.LanguageDSL.ViewHasModelTree.ModelTreeDomainRoleId);
				}

				return;
			}
				
			global::Tum.PDE.LanguageDSL.BaseViewContext sourceBaseViewContext2 = sourceElement as global::Tum.PDE.LanguageDSL.BaseViewContext;
			if (sourceBaseViewContext2 != null)
			{
				// Delete link for path ViewHasViewContexts.ViewContexts
				
				foreach (DslModeling::ElementLink link in global::Tum.PDE.LanguageDSL.ViewHasViewContexts.GetLinks((global::Tum.PDE.LanguageDSL.View)this, sourceBaseViewContext2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Tum.PDE.LanguageDSL.ViewHasViewContexts.ViewDomainRoleId, global::Tum.PDE.LanguageDSL.ViewHasViewContexts.BaseViewContextDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// Double-derived base class for DomainClass PropertyGridEditor
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PropertyGridEditor.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyGridEditor.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("63c0544d-fab1-4d2d-b274-87af605239b3")]
	public abstract partial class PropertyGridEditorBase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// PropertyGridEditor domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x63c0544d, 0xfab1, 0x4d2d, 0xb2, 0x74, 0x87, 0xaf, 0x60, 0x52, 0x39, 0xb3);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected PropertyGridEditorBase(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x50b4c8b9, 0x55bd, 0x4880, 0xa9, 0xd1, 0x27, 0x9c, 0xe2, 0xc0, 0x00, 0x54);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Tum.PDE.LanguageDSL.PropertyGridEditor.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PropertyGridEditor/Name.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.PropertyGridEditor/Name.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyGridEditor/Name.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("50b4c8b9-55bd-4880-a9d1-279ce2c00054")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the PropertyGridEditor.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<PropertyGridEditorBase, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the PropertyGridEditor.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the PropertyGridEditor.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(PropertyGridEditorBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(PropertyGridEditorBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Namespace domain property code
		
		/// <summary>
		/// Namespace domain property Id.
		/// </summary>
		public static readonly global::System.Guid NamespaceDomainPropertyId = new global::System.Guid(0x35936433, 0xdac1, 0x4a93, 0x95, 0xde, 0x01, 0x6d, 0x20, 0x56, 0x58, 0xc1);
		
		/// <summary>
		/// Storage for Namespace
		/// </summary>
		private global::System.String namespacePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Namespace domain property.
		/// Description for Tum.PDE.LanguageDSL.PropertyGridEditor.Namespace
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PropertyGridEditor/Namespace.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.PropertyGridEditor/Namespace.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyGridEditor/Namespace.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("35936433-dac1-4a93-95de-016d205658c1")]
		public global::System.String Namespace
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namespacePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamespacePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the PropertyGridEditor.Namespace domain property.
		/// </summary>
		internal sealed partial class NamespacePropertyHandler : DslModeling::DomainPropertyValueHandler<PropertyGridEditorBase, global::System.String>
		{
			private NamespacePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the PropertyGridEditor.Namespace domain property value handler.
			/// </summary>
			public static readonly NamespacePropertyHandler Instance = new NamespacePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the PropertyGridEditor.Namespace domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NamespaceDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(PropertyGridEditorBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namespacePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(PropertyGridEditorBase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namespacePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ShouldBeGenerated domain property code
		
		/// <summary>
		/// ShouldBeGenerated domain property Id.
		/// </summary>
		public static readonly global::System.Guid ShouldBeGeneratedDomainPropertyId = new global::System.Guid(0x6a631f55, 0x5f85, 0x4a00, 0x83, 0x55, 0x4b, 0xef, 0x8f, 0x58, 0x56, 0x5f);
		
		/// <summary>
		/// Storage for ShouldBeGenerated
		/// </summary>
		private global::System.Boolean shouldBeGeneratedPropertyStorage = true;
		
		/// <summary>
		/// Gets or sets the value of ShouldBeGenerated domain property.
		/// Description for Tum.PDE.LanguageDSL.PropertyGridEditor.Should Be Generated
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PropertyGridEditor/ShouldBeGenerated.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.PropertyGridEditor/ShouldBeGenerated.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyGridEditor/ShouldBeGenerated.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(true)]
		[DslModeling::DomainObjectId("6a631f55-5f85-4a00-8355-4bef8f58565f")]
		public global::System.Boolean ShouldBeGenerated
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return shouldBeGeneratedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ShouldBeGeneratedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the PropertyGridEditor.ShouldBeGenerated domain property.
		/// </summary>
		internal sealed partial class ShouldBeGeneratedPropertyHandler : DslModeling::DomainPropertyValueHandler<PropertyGridEditorBase, global::System.Boolean>
		{
			private ShouldBeGeneratedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the PropertyGridEditor.ShouldBeGenerated domain property value handler.
			/// </summary>
			public static readonly ShouldBeGeneratedPropertyHandler Instance = new ShouldBeGeneratedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the PropertyGridEditor.ShouldBeGenerated domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ShouldBeGeneratedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(PropertyGridEditorBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.shouldBeGeneratedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(PropertyGridEditorBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.shouldBeGeneratedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EditorBaseType domain property code
		
		/// <summary>
		/// EditorBaseType domain property Id.
		/// </summary>
		public static readonly global::System.Guid EditorBaseTypeDomainPropertyId = new global::System.Guid(0x7e447735, 0xd33e, 0x4bbd, 0x96, 0x33, 0x15, 0x03, 0x99, 0x87, 0xbb, 0xdf);
		
		/// <summary>
		/// Storage for EditorBaseType
		/// </summary>
		private EditorBaseType editorBaseTypePropertyStorage = EditorBaseType.PropertyEditorViewModel;
		
		/// <summary>
		/// Gets or sets the value of EditorBaseType domain property.
		/// Only relevant if Should Be Generated is set to true.
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PropertyGridEditor/EditorBaseType.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.PropertyGridEditor/EditorBaseType.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyGridEditor/EditorBaseType.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(EditorBaseType.PropertyEditorViewModel)]
		[DslModeling::DomainObjectId("7e447735-d33e-4bbd-9633-15039987bbdf")]
		public EditorBaseType EditorBaseType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return editorBaseTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EditorBaseTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the PropertyGridEditor.EditorBaseType domain property.
		/// </summary>
		internal sealed partial class EditorBaseTypePropertyHandler : DslModeling::DomainPropertyValueHandler<PropertyGridEditorBase, EditorBaseType>
		{
			private EditorBaseTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the PropertyGridEditor.EditorBaseType domain property value handler.
			/// </summary>
			public static readonly EditorBaseTypePropertyHandler Instance = new EditorBaseTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the PropertyGridEditor.EditorBaseType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EditorBaseTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed EditorBaseType GetValue(PropertyGridEditorBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.editorBaseTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(PropertyGridEditorBase element, EditorBaseType newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				EditorBaseType oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.editorBaseTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region RequiresContextMenuBar domain property code
		
		/// <summary>
		/// RequiresContextMenuBar domain property Id.
		/// </summary>
		public static readonly global::System.Guid RequiresContextMenuBarDomainPropertyId = new global::System.Guid(0xd330a44f, 0x9088, 0x4759, 0xb6, 0x00, 0xb8, 0x1e, 0xa3, 0x6d, 0x18, 0x93);
		
		/// <summary>
		/// Storage for RequiresContextMenuBar
		/// </summary>
		private global::System.Boolean requiresContextMenuBarPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of RequiresContextMenuBar domain property.
		/// Description for Tum.PDE.LanguageDSL.PropertyGridEditor.Requires Context Menu Bar
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.PropertyGridEditor/RequiresContextMenuBar.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.PropertyGridEditor/RequiresContextMenuBar.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyGridEditor/RequiresContextMenuBar.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d330a44f-9088-4759-b600-b81ea36d1893")]
		public global::System.Boolean RequiresContextMenuBar
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return requiresContextMenuBarPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				RequiresContextMenuBarPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the PropertyGridEditor.RequiresContextMenuBar domain property.
		/// </summary>
		internal sealed partial class RequiresContextMenuBarPropertyHandler : DslModeling::DomainPropertyValueHandler<PropertyGridEditorBase, global::System.Boolean>
		{
			private RequiresContextMenuBarPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the PropertyGridEditor.RequiresContextMenuBar domain property value handler.
			/// </summary>
			public static readonly RequiresContextMenuBarPropertyHandler Instance = new RequiresContextMenuBarPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the PropertyGridEditor.RequiresContextMenuBar domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return RequiresContextMenuBarDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(PropertyGridEditorBase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.requiresContextMenuBarPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(PropertyGridEditorBase element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.requiresContextMenuBarPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region DomainRoles opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DomainRoles.
		/// Description for
		/// Tum.PDE.LanguageDSL.DomainRoleReferencesCustomPropertyGridEditor.PropertyGridEditor
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainRole> DomainRoles
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainRole>, DomainRole>(global::Tum.PDE.LanguageDSL.DomainRoleReferencesCustomPropertyGridEditor.PropertyGridEditorDomainRoleId);
			}
		}
		#endregion
		#region MetaModel opposite domain role accessor
		/// <summary>
		/// Gets or sets MetaModel.
		/// Description for
		/// Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.PropertyGridEditor
		/// </summary>
		public virtual MetaModel MetaModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.PropertyGridEditorDomainRoleId) as MetaModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.PropertyGridEditorDomainRoleId, value);
			}
		}
		#endregion
	}
	/// <summary>
	/// DomainClass PropertyGridEditor
	/// Description for Tum.PDE.LanguageDSL.PropertyGridEditor
	/// </summary>
	[global::System.CLSCompliant(true)]
			
	public partial class PropertyGridEditor : PropertyGridEditorBase
	{
		#region Constructors
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public PropertyGridEditor(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public PropertyGridEditor(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass BaseModelContext
	/// Description for Tum.PDE.LanguageDSL.BaseModelContext
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.BaseModelContext.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[global::System.ComponentModel.TypeDescriptionProvider(typeof(BaseModelContextTypeDescriptionProvider))]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.BaseModelContext.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("8c56384f-c8dc-4845-a6fb-c434a2303c60")]
	public abstract partial class BaseModelContext : NamedDomainElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// BaseModelContext domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8c56384f, 0xc8dc, 0x4845, 0xa6, 0xfb, 0xc4, 0x34, 0xa2, 0x30, 0x3c, 0x60);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected BaseModelContext(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IsDefault domain property code
		
		/// <summary>
		/// IsDefault domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsDefaultDomainPropertyId = new global::System.Guid(0x65c0689e, 0x877f, 0x486d, 0xa2, 0x9e, 0xe4, 0xbf, 0x9a, 0x90, 0x8e, 0x94);
		
		/// <summary>
		/// Storage for IsDefault
		/// </summary>
		private global::System.Boolean isDefaultPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsDefault domain property.
		/// Description for Tum.PDE.LanguageDSL.BaseModelContext.Is Default
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.BaseModelContext/IsDefault.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.BaseModelContext/IsDefault.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.BaseModelContext/IsDefault.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("65c0689e-877f-486d-a29e-e4bf9a908e94")]
		public global::System.Boolean IsDefault
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isDefaultPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsDefaultPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the BaseModelContext.IsDefault domain property.
		/// </summary>
		internal sealed partial class IsDefaultPropertyHandler : DslModeling::DomainPropertyValueHandler<BaseModelContext, global::System.Boolean>
		{
			private IsDefaultPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the BaseModelContext.IsDefault domain property value handler.
			/// </summary>
			public static readonly IsDefaultPropertyHandler Instance = new IsDefaultPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the BaseModelContext.IsDefault domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsDefaultDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(BaseModelContext element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isDefaultPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(BaseModelContext element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isDefaultPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MetaModel opposite domain role accessor
		/// <summary>
		/// Gets or sets MetaModel.
		/// Description for Tum.PDE.LanguageDSL.MetaModelHasModelContexts.BaseModelContext
		/// </summary>
		public virtual MetaModel MetaModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasModelContexts.BaseModelContextDomainRoleId) as MetaModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.MetaModelHasModelContexts.BaseModelContextDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ExternModelContext
	/// Description for Tum.PDE.LanguageDSL.ExternModelContext
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ExternModelContext.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ExternModelContext.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0b6e862a-e43e-4274-95dc-9c0d808df0fa")]
	public partial class ExternModelContext : BaseModelContext
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ExternModelContext domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0b6e862a, 0xe43e, 0x4274, 0x95, 0xdc, 0x9c, 0x0d, 0x80, 0x8d, 0xf0, 0xfa);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExternModelContext(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExternModelContext(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ExternViewContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ExternViewContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.ExternViewContextReferencesExternModelContext.ExternModelContext
		/// </summary>
		public virtual ExternViewContext ExternViewContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ExternViewContextReferencesExternModelContext.ExternModelContextDomainRoleId) as ExternViewContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ExternViewContextReferencesExternModelContext.ExternModelContextDomainRoleId, value);
			}
		}
		#endregion
		#region ModelContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ModelContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.ExternModelContextReferencesModelContext.ExternModelContext
		/// </summary>
		public virtual ModelContext ModelContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ExternModelContextReferencesModelContext.ExternModelContextDomainRoleId) as ModelContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ExternModelContextReferencesModelContext.ExternModelContextDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass BaseViewContext
	/// Description for Tum.PDE.LanguageDSL.BaseViewContext
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.BaseViewContext.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.BaseViewContext.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("a62634e4-bb49-466a-a2e1-683c0adaab7a")]
	public abstract partial class BaseViewContext : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// BaseViewContext domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa62634e4, 0xbb49, 0x466a, 0xa2, 0xe1, 0x68, 0x3c, 0x0a, 0xda, 0xab, 0x7a);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected BaseViewContext(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region View opposite domain role accessor
		/// <summary>
		/// Gets or sets View.
		/// Description for Tum.PDE.LanguageDSL.ViewHasViewContexts.BaseViewContext
		/// </summary>
		public virtual View View
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewHasViewContexts.BaseViewContextDomainRoleId) as View;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewHasViewContexts.BaseViewContextDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ExternViewContext
	/// Description for Tum.PDE.LanguageDSL.ExternViewContext
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ExternViewContext.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ExternViewContext.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("4347ae81-063c-40af-8ebe-161005a6c535")]
	public partial class ExternViewContext : BaseViewContext
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ExternViewContext domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x4347ae81, 0x063c, 0x40af, 0x8e, 0xbe, 0x16, 0x10, 0x05, 0xa6, 0xc5, 0x35);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExternViewContext(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExternViewContext(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ExternModelContext opposite domain role accessor
		/// <summary>
		/// Gets or sets ExternModelContext.
		/// Description for
		/// Tum.PDE.LanguageDSL.ExternViewContextReferencesExternModelContext.ExternViewContext
		/// </summary>
		public virtual ExternModelContext ExternModelContext
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ExternViewContextReferencesExternModelContext.ExternViewContextDomainRoleId) as ExternModelContext;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ExternViewContextReferencesExternModelContext.ExternViewContextDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ModelContext
	/// Description for Tum.PDE.LanguageDSL.ModelContext
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ModelContext.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ModelContext.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("538c7984-6aa4-461e-bdaf-4078eba01fcd")]
	public partial class ModelContext : LibraryModelContext
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ModelContext domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x538c7984, 0x6aa4, 0x461e, 0xbd, 0xaf, 0x40, 0x78, 0xeb, 0xa0, 0x1f, 0xcd);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ModelContext(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ModelContext(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ModelTree
	/// Description for Tum.PDE.LanguageDSL.ModelTree
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ModelTree.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ModelTree.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0342973e-d5c0-41ad-8e6a-34d2b1d402ab")]
	public partial class ModelTree : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ModelTree domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0342973e, 0xd5c0, 0x41ad, 0x8e, 0x6a, 0x34, 0xd2, 0xb1, 0xd4, 0x02, 0xab);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ModelTree(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ModelTree(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region SortingBehavior domain property code
		
		/// <summary>
		/// SortingBehavior domain property Id.
		/// </summary>
		public static readonly global::System.Guid SortingBehaviorDomainPropertyId = new global::System.Guid(0x38aeb98d, 0xe5bd, 0x421b, 0xaf, 0x34, 0x0f, 0x4b, 0xd1, 0xf0, 0xa7, 0x40);
		
		/// <summary>
		/// Storage for SortingBehavior
		/// </summary>
		private SortingBehavior sortingBehaviorPropertyStorage = SortingBehavior.Alphabetical;
		
		/// <summary>
		/// Gets or sets the value of SortingBehavior domain property.
		/// Description for Tum.PDE.LanguageDSL.ModelTree.Sorting Behavior
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ModelTree/SortingBehavior.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ModelTree/SortingBehavior.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ModelTree/SortingBehavior.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue(SortingBehavior.Alphabetical)]
		[DslModeling::DomainObjectId("38aeb98d-e5bd-421b-af34-0f4bd1f0a740")]
		public SortingBehavior SortingBehavior
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return sortingBehaviorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				SortingBehaviorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ModelTree.SortingBehavior domain property.
		/// </summary>
		internal sealed partial class SortingBehaviorPropertyHandler : DslModeling::DomainPropertyValueHandler<ModelTree, SortingBehavior>
		{
			private SortingBehaviorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ModelTree.SortingBehavior domain property value handler.
			/// </summary>
			public static readonly SortingBehaviorPropertyHandler Instance = new SortingBehaviorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ModelTree.SortingBehavior domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return SortingBehaviorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed SortingBehavior GetValue(ModelTree element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.sortingBehaviorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ModelTree element, SortingBehavior newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				SortingBehavior oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.sortingBehaviorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CanMoveElements domain property code
		
		/// <summary>
		/// CanMoveElements domain property Id.
		/// </summary>
		public static readonly global::System.Guid CanMoveElementsDomainPropertyId = new global::System.Guid(0x47c39782, 0xce0d, 0x442c, 0xb4, 0x3f, 0x8b, 0xbf, 0xb8, 0x4f, 0x5a, 0x54);
		
		/// <summary>
		/// Storage for CanMoveElements
		/// </summary>
		private global::System.Boolean canMoveElementsPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of CanMoveElements domain property.
		/// Description for Tum.PDE.LanguageDSL.ModelTree.Can Move Elements
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ModelTree/CanMoveElements.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.ModelTree/CanMoveElements.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ModelTree/CanMoveElements.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("47c39782-ce0d-442c-b43f-8bbfb84f5a54")]
		public global::System.Boolean CanMoveElements
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return canMoveElementsPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CanMoveElementsPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ModelTree.CanMoveElements domain property.
		/// </summary>
		internal sealed partial class CanMoveElementsPropertyHandler : DslModeling::DomainPropertyValueHandler<ModelTree, global::System.Boolean>
		{
			private CanMoveElementsPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ModelTree.CanMoveElements domain property value handler.
			/// </summary>
			public static readonly CanMoveElementsPropertyHandler Instance = new CanMoveElementsPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ModelTree.CanMoveElements domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CanMoveElementsDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ModelTree element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.canMoveElementsPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ModelTree element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.canMoveElementsPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region View opposite domain role accessor
		/// <summary>
		/// Gets or sets View.
		/// Description for Tum.PDE.LanguageDSL.ViewHasModelTree.ModelTree
		/// </summary>
		public virtual View View
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewHasModelTree.ModelTreeDomainRoleId) as View;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ViewHasModelTree.ModelTreeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass TemplatedDiagramClass
	/// Description for Tum.PDE.LanguageDSL.TemplatedDiagramClass
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TemplatedDiagramClass.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TemplatedDiagramClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ebcfc0db-1594-4bc1-9486-7d06d990703e")]
	public partial class TemplatedDiagramClass : DiagramClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TemplatedDiagramClass domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xebcfc0db, 0x1594, 0x4bc1, 0x94, 0x86, 0x7d, 0x06, 0xd9, 0x90, 0x70, 0x3e);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TemplatedDiagramClass(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TemplatedDiagramClass(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region UniqueId domain property code
		
		/// <summary>
		/// UniqueId domain property Id.
		/// </summary>
		public static readonly global::System.Guid UniqueIdDomainPropertyId = new global::System.Guid(0xa80e588f, 0x20eb, 0x4dbd, 0x97, 0x75, 0xd4, 0x35, 0x7d, 0xd9, 0x9b, 0x03);
		
		/// <summary>
		/// Storage for UniqueId
		/// </summary>
		private global::System.String uniqueIdPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of UniqueId domain property.
		/// Description for Tum.PDE.LanguageDSL.TemplatedDiagramClass.Unique Id
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TemplatedDiagramClass/UniqueId.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.TemplatedDiagramClass/UniqueId.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TemplatedDiagramClass/UniqueId.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainObjectId("a80e588f-20eb-4dbd-9775-d4357dd99b03")]
		public global::System.String UniqueId
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return uniqueIdPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				UniqueIdPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TemplatedDiagramClass.UniqueId domain property.
		/// </summary>
		internal sealed partial class UniqueIdPropertyHandler : DslModeling::DomainPropertyValueHandler<TemplatedDiagramClass, global::System.String>
		{
			private UniqueIdPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TemplatedDiagramClass.UniqueId domain property value handler.
			/// </summary>
			public static readonly UniqueIdPropertyHandler Instance = new UniqueIdPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TemplatedDiagramClass.UniqueId domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return UniqueIdDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TemplatedDiagramClass element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.uniqueIdPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TemplatedDiagramClass element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.uniqueIdPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0x89385e34, 0x86e0, 0x4239, 0xb3, 0x3d, 0x5e, 0xb4, 0x73, 0xeb, 0x9f, 0x17);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for Tum.PDE.LanguageDSL.TemplatedDiagramClass.Description
		/// </summary>
		[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TemplatedDiagramClass/Description.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Tum.PDE.LanguageDSL.TemplatedDiagramClass/Description.Category", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TemplatedDiagramClass/Description.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("89385e34-86e0-4239-b33d-5eb473eb9f17")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TemplatedDiagramClass.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<TemplatedDiagramClass, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TemplatedDiagramClass.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TemplatedDiagramClass.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TemplatedDiagramClass element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TemplatedDiagramClass element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass DependencyDiagram
	/// Description for Tum.PDE.LanguageDSL.DependencyDiagram
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DependencyDiagram.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DependencyDiagram.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ae2c9e8c-ca1e-488d-b87a-0d81e0cebb61")]
	public partial class DependencyDiagram : TemplatedDiagramClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DependencyDiagram domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xae2c9e8c, 0xca1e, 0x488d, 0xb8, 0x7a, 0x0d, 0x81, 0xe0, 0xce, 0xbb, 0x61);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DependencyDiagram(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DependencyDiagram(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SpecificDependencyDiagram
	/// Description for Tum.PDE.LanguageDSL.SpecificDependencyDiagram
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SpecificDependencyDiagram.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SpecificDependencyDiagram.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("73c57370-316c-45b9-ae42-8325b0e6febd")]
	public partial class SpecificDependencyDiagram : DependencyDiagram
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SpecificDependencyDiagram domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x73c57370, 0x316c, 0x45b9, 0xae, 0x42, 0x83, 0x25, 0xb0, 0xe6, 0xfe, 0xbd);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SpecificDependencyDiagram(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SpecificDependencyDiagram(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DomainClass opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.SpecificDependencyDiagramReferencesDomainClass.SpecificDependencyDiagram
		/// </summary>
		public virtual DomainClass DomainClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.SpecificDependencyDiagramReferencesDomainClass.SpecificDependencyDiagramDomainRoleId) as DomainClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.SpecificDependencyDiagramReferencesDomainClass.SpecificDependencyDiagramDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ModalDiagram
	/// Description for Tum.PDE.LanguageDSL.ModalDiagram
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ModalDiagram.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ModalDiagram.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e1f665f3-6684-4416-8a0c-ab1e7f86b916")]
	public partial class ModalDiagram : RestorableTemplatedDiagramVMOnly
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ModalDiagram domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe1f665f3, 0x6684, 0x4416, 0x8a, 0x0c, 0xab, 0x1e, 0x7f, 0x86, 0xb9, 0x16);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ModalDiagram(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ModalDiagram(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DomainClass opposite domain role accessor
		/// <summary>
		/// Gets or sets DomainClass.
		/// Description for
		/// Tum.PDE.LanguageDSL.ModalDiagramReferencesDomainClass.ModalDiagram
		/// </summary>
		public virtual DomainClass DomainClass
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Tum.PDE.LanguageDSL.ModalDiagramReferencesDomainClass.ModalDiagramDomainRoleId) as DomainClass;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Tum.PDE.LanguageDSL.ModalDiagramReferencesDomainClass.ModalDiagramDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass SpecificElementsDiagram
	/// Description for Tum.PDE.LanguageDSL.SpecificElementsDiagram
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.SpecificElementsDiagram.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SpecificElementsDiagram.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d78e47ec-a3bd-4a4e-9879-39ac34c1d145")]
	public partial class SpecificElementsDiagram : RestorableChildlessDiagram
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SpecificElementsDiagram domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd78e47ec, 0xa3bd, 0x4a4e, 0x98, 0x79, 0x39, 0xac, 0x34, 0xc1, 0xd1, 0x45);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SpecificElementsDiagram(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SpecificElementsDiagram(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region DomainClasses opposite domain role accessor
		
		/// <summary>
		/// Gets a list of DomainClasses.
		/// Description for
		/// Tum.PDE.LanguageDSL.SpecificElementsDiagramReferencesDomainClasses.SpecificElementsDiagram
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<DomainClass> DomainClasses
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<DomainClass>, DomainClass>(global::Tum.PDE.LanguageDSL.SpecificElementsDiagramReferencesDomainClasses.SpecificElementsDiagramDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass DesignerSurfaceDiagram
	/// Description for Tum.PDE.LanguageDSL.DesignerSurfaceDiagram
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.DesignerSurfaceDiagram.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DesignerSurfaceDiagram.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("34c2336e-bd25-40b2-b85f-f34483daa6e0")]
	public partial class DesignerSurfaceDiagram : ChildlessDiagram
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// DesignerSurfaceDiagram domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x34c2336e, 0xbd25, 0x40b2, 0xb8, 0x5f, 0xf3, 0x44, 0x83, 0xda, 0xa6, 0xe0);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DesignerSurfaceDiagram(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public DesignerSurfaceDiagram(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass ChildlessDiagram
	/// Description for Tum.PDE.LanguageDSL.ChildlessDiagram
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.ChildlessDiagram.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.ChildlessDiagram.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c1aa13e2-e584-49ba-8d0a-cdc64dcae654")]
	public abstract partial class ChildlessDiagram : TemplatedDiagramClass
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ChildlessDiagram domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc1aa13e2, 0xe584, 0x49ba, 0x8d, 0x0a, 0xcd, 0xc6, 0x4d, 0xca, 0xe6, 0x54);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ChildlessDiagram(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass TemplatedDiagramViewModelOnly
	/// Description for Tum.PDE.LanguageDSL.TemplatedDiagramViewModelOnly
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.TemplatedDiagramViewModelOnly.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TemplatedDiagramViewModelOnly.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("04825602-1d28-4b0f-9d1e-3c4a1aa914cc")]
	public abstract partial class TemplatedDiagramViewModelOnly : ChildlessDiagram
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TemplatedDiagramViewModelOnly domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x04825602, 0x1d28, 0x4b0f, 0x9d, 0x1e, 0x3c, 0x4a, 0x1a, 0xa9, 0x14, 0xcc);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected TemplatedDiagramViewModelOnly(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass RestorableChildlessDiagram
	/// Description for Tum.PDE.LanguageDSL.RestorableChildlessDiagram
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RestorableChildlessDiagram.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RestorableChildlessDiagram.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d269770e-517f-47a2-846b-b355f1462588")]
	public abstract partial class RestorableChildlessDiagram : ChildlessDiagram
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// RestorableChildlessDiagram domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd269770e, 0x517f, 0x47a2, 0x84, 0x6b, 0xb3, 0x55, 0xf1, 0x46, 0x25, 0x88);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected RestorableChildlessDiagram(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainClass RestorableTemplatedDiagramVMOnly
	/// Description for Tum.PDE.LanguageDSL.RestorableTemplatedDiagramVMOnly
	/// </summary>
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1501:AvoidExcessiveInheritance", Justification = "Generated code.")]
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.RestorableTemplatedDiagramVMOnly.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RestorableTemplatedDiagramVMOnly.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("db0ad9be-41c5-41b5-951e-1c53df6d2325")]
	public abstract partial class RestorableTemplatedDiagramVMOnly : TemplatedDiagramViewModelOnly
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// RestorableTemplatedDiagramVMOnly domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdb0ad9be, 0x41c5, 0x41b5, 0x95, 0x1e, 0x1c, 0x53, 0xdf, 0x6d, 0x23, 0x25);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected RestorableTemplatedDiagramVMOnly(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
