//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainModel LanguageDSLDomainModel
	/// Description for Tum.PDE.LanguageDSL
	/// </summary>
	[DslDesign::DisplayNameResource("Tum.PDE.LanguageDSL.LanguageDSLDomainModel.DisplayName", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LanguageDSLDomainModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
	[global::System.CLSCompliant(true)]
	[DslModeling::DependsOnDomainModel(typeof(global::Microsoft.VisualStudio.Modeling.CoreDomainModel))]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]
	[DslModeling::DomainObjectId("048f1124-7dd7-4dde-b754-95e15f9b5fe6")]
	public partial class LanguageDSLDomainModel : DslModeling::DomainModel
	{
		#region Constructor, domain model Id
	
		/// <summary>
		/// LanguageDSLDomainModel domain model Id.
		/// </summary>
		public static readonly global::System.Guid DomainModelId = new global::System.Guid(0x048f1124, 0x7dd7, 0x4dde, 0xb7, 0x54, 0x95, 0xe1, 0x5f, 0x9b, 0x5f, 0xe6);
	
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="store">Store containing the domain model.</param>
		public LanguageDSLDomainModel(DslModeling::Store store)
			: base(store, DomainModelId)
		{
			// Call the partial method to allow any required serialization setup to be done.
			this.InitializeSerialization(store);		
		}
		
	
		///<Summary>
		/// Defines a partial method that will be called from the constructor to
		/// allow any necessary serialization setup to be done.
		///</Summary>
		///<remarks>
		/// For a DSL created with the DSL Designer wizard, an implementation of this 
		/// method will be generated in the GeneratedCode\SerializationHelper.cs class.
		///</remarks>
		partial void InitializeSerialization(DslModeling::Store store);
	
	
		#endregion
		#region Domain model reflection
			
		/// <summary>
		/// Gets the list of generated domain model types (classes, rules, relationships).
		/// </summary>
		/// <returns>List of types.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		protected sealed override global::System.Type[] GetGeneratedDomainModelTypes()
		{
			return new global::System.Type[]
			{
				typeof(MetaModel),
				typeof(DomainElement),
				typeof(NamedDomainElement),
				typeof(AttributedDomainElement),
				typeof(DomainProperty),
				typeof(DomainRelationship),
				typeof(DomainClass),
				typeof(DomainRole),
				typeof(EmbeddingRelationship),
				typeof(ReferenceRelationship),
				typeof(DomainModelTreeView),
				typeof(RootNode),
				typeof(TreeNode),
				typeof(EmbeddingRSNode),
				typeof(EmbeddingNode),
				typeof(InheritanceNode),
				typeof(ReferenceRSNode),
				typeof(ReferenceNode),
				typeof(ShapeClassNode),
				typeof(ShapeRelationshipNode),
				typeof(DomainType),
				typeof(ExternalType),
				typeof(DomainEnumeration),
				typeof(EnumerationLiteral),
				typeof(DiagramClass),
				typeof(DiagramClassView),
				typeof(PresentationElementClass),
				typeof(ShapeClass),
				typeof(RelationshipShapeClass),
				typeof(GeneratedDomainElement),
				typeof(RootDiagramNode),
				typeof(EmbeddingDiagramNode),
				typeof(DiagramTreeNode),
				typeof(SerializationModel),
				typeof(SerializedDomainModel),
				typeof(SerializationElement),
				typeof(SerializedDomainClass),
				typeof(SerializedEmbeddingRelationship),
				typeof(SerializedReferenceRelationship),
				typeof(SerializedDomainProperty),
				typeof(SerializationClass),
				typeof(SerializedIdProperty),
				typeof(SerializedDomainRole),
				typeof(SerializationAttributeElement),
				typeof(Validation),
				typeof(MappingRelationshipShapeClass),
				typeof(DiagramView),
				typeof(DesignerDiagramClass),
				typeof(PresentationDomainClassElement),
				typeof(ModelTreeNode),
				typeof(SerializedRelationship),
				typeof(Credits),
				typeof(CreditItem),
				typeof(AdditionalInformation),
				typeof(FurtherInformation),
				typeof(InformationItem),
				typeof(LinkItem),
				typeof(MetaModelLibrary),
				typeof(BaseMetaModel),
				typeof(ViewContext),
				typeof(LibraryModelContext),
				typeof(View),
				typeof(PropertyGridEditor),
				typeof(BaseModelContext),
				typeof(ExternModelContext),
				typeof(BaseViewContext),
				typeof(ExternViewContext),
				typeof(ModelContext),
				typeof(ModelTree),
				typeof(TemplatedDiagramClass),
				typeof(DependencyDiagram),
				typeof(SpecificDependencyDiagram),
				typeof(ModalDiagram),
				typeof(SpecificElementsDiagram),
				typeof(DesignerSurfaceDiagram),
				typeof(ChildlessDiagram),
				typeof(TemplatedDiagramViewModelOnly),
				typeof(RestorableChildlessDiagram),
				typeof(RestorableTemplatedDiagramVMOnly),
				typeof(AttributedDomainElementHasProperties),
				typeof(DomainRelationshipHasRoles),
				typeof(DomainRelationshipReferencesSource),
				typeof(DomainRelationshipReferencesTarget),
				typeof(ReferenceRSNodeReferencesReferenceRelationship),
				typeof(MetaModelHasDomainTypes),
				typeof(DomainEnumerationHasLiterals),
				typeof(DomainPropertyReferencesType),
				typeof(DiagramClassViewReferencesDiagramClass),
				typeof(DiagramClassHasPresentationElements),
				typeof(DomainClassReferencesBaseClass),
				typeof(DomainRelationshipReferencesBaseRelationship),
				typeof(DomainRoleReferencesOpposite),
				typeof(EmbeddingRSNodeReferencesRelationship),
				typeof(DomainRoleReferencesRolePlayer),
				typeof(TreeNodeReferencesDomainElement),
				typeof(ShapeClassReferencesChildren),
				typeof(DiagramClassViewHasRootDiagramNodes),
				typeof(SerializationClassReferencesChildren),
				typeof(SerializedDomainRoleReferencesDomainRole),
				typeof(SerializationClassReferencesAttributes),
				typeof(MetaModelHasValidation),
				typeof(DomainModelTreeViewReferencesRootNodes),
				typeof(TreeNodeReferencesEmbeddingRSNodes),
				typeof(EmbeddingRSNodeReferencesEmbeddingNode),
				typeof(TreeNodeReferencesInheritanceNodes),
				typeof(TreeNodeReferencesReferenceRSNodes),
				typeof(ReferenceRSNodeReferencesReferenceNode),
				typeof(TreeNodeReferencesShapeClassNodes),
				typeof(DiagramViewHasDiagramClassViews),
				typeof(DiagramTreeNodeReferencesPresentationElementClass),
				typeof(EmbeddingDiagramNodeHasEmbeddingDiagramNodes),
				typeof(MappingRelationshipShapeClassReferencesSource),
				typeof(MappingRelationshipShapeClassReferencesTarget),
				typeof(ShapeRelationshipNodeReferencesRelationshipShapeClass),
				typeof(DomainModelTreeViewHasModelTreeNodes),
				typeof(ReferenceRSNodeReferencesShapeRelationshipNodes),
				typeof(ShapeClassReferencesDomainClass),
				typeof(ShapeClassNodeReferencesShapeClass),
				typeof(SerializationModelHasSerializedDomainModel),
				typeof(SerializationClassHasIdProperty),
				typeof(SerializedRelationshipHasSerializedDomainRoles),
				typeof(SerializedDomainClassReferencesDomainClass),
				typeof(SerializedEmbeddingRelationshipReferencesEmbeddingRelationship),
				typeof(SerializedReferenceRelationshipReferencesReferenceRelationship),
				typeof(SerializedDomainPropertyReferencesDomainProperty),
				typeof(SerializedDomainRoleReferencesSerializationClass),
				typeof(SerializationModelHasChildren),
				typeof(SerializationClassHasProperties),
				typeof(CreditsHasCreditItems),
				typeof(MetaModelHasAdditionalInformation),
				typeof(AdditionalInformationHasCredits),
				typeof(AdditionalInformationHasFurtherInformation),
				typeof(FurtherInformationHasInformationItems),
				typeof(MetaModelHasMetaModelLibraries),
				typeof(MetaModelLibraryHasImportedLibrary),
				typeof(ViewContextHasDomainModelTreeView),
				typeof(ViewContextHasDiagramView),
				typeof(LibraryModelContextHasClasses),
				typeof(LibraryModelContextHasDiagramClasses),
				typeof(LibraryModelContextHasRelationships),
				typeof(ViewContextReferencesModelContext),
				typeof(MetaModelHasView),
				typeof(DomainTypeReferencesPropertyGridEditor),
				typeof(DomainRoleReferencesCustomPropertyGridEditor),
				typeof(MetaModelHasModelContexts),
				typeof(ViewHasViewContexts),
				typeof(ExternViewContextReferencesExternModelContext),
				typeof(LibraryModelContextHasSerializationModel),
				typeof(MetaModelHasPropertyGridEditors),
				typeof(ViewHasModelTree),
				typeof(ExternModelContextReferencesModelContext),
				typeof(DesignerDiagramClassReferencesImportedDiagramClasses),
				typeof(ShapeClassReferencesBaseShape),
				typeof(DesignerDiagramClassReferencesIncludedDiagramClasses),
				typeof(SpecificDependencyDiagramReferencesDomainClass),
				typeof(ModalDiagramReferencesDomainClass),
				typeof(SpecificElementsDiagramReferencesDomainClasses),
				typeof(RelationshipShapeClassReferencesReferenceRelationship),
			};
		}
		/// <summary>
		/// Gets the list of generated domain properties.
		/// </summary>
		/// <returns>List of property data.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		protected sealed override DomainMemberInfo[] GetGeneratedDomainProperties()
		{
			return new DomainMemberInfo[]
			{
				new DomainMemberInfo(typeof(MetaModel), "Name", MetaModel.NameDomainPropertyId, typeof(MetaModel.NamePropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "CompanyName", MetaModel.CompanyNameDomainPropertyId, typeof(MetaModel.CompanyNamePropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "Namespace", MetaModel.NamespaceDomainPropertyId, typeof(MetaModel.NamespacePropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "ProductName", MetaModel.ProductNameDomainPropertyId, typeof(MetaModel.ProductNamePropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "Description", MetaModel.DescriptionDomainPropertyId, typeof(MetaModel.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "Build", MetaModel.BuildDomainPropertyId, typeof(MetaModel.BuildPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "MajorVersion", MetaModel.MajorVersionDomainPropertyId, typeof(MetaModel.MajorVersionPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "MinorVersion", MetaModel.MinorVersionDomainPropertyId, typeof(MetaModel.MinorVersionPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "Revision", MetaModel.RevisionDomainPropertyId, typeof(MetaModel.RevisionPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "DisplayName", MetaModel.DisplayNameDomainPropertyId, typeof(MetaModel.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "ApplicationName", MetaModel.ApplicationNameDomainPropertyId, typeof(MetaModel.ApplicationNamePropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "LayoutEmbeddedPath", MetaModel.LayoutEmbeddedPathDomainPropertyId, typeof(MetaModel.LayoutEmbeddedPathPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "LayoutDVEmbeddedPath", MetaModel.LayoutDVEmbeddedPathDomainPropertyId, typeof(MetaModel.LayoutDVEmbeddedPathPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "PackageGuid", MetaModel.PackageGuidDomainPropertyId, typeof(MetaModel.PackageGuidPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "CustomExtensionGuid", MetaModel.CustomExtensionGuidDomainPropertyId, typeof(MetaModel.CustomExtensionGuidPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "CustomExtension", MetaModel.CustomExtensionDomainPropertyId, typeof(MetaModel.CustomExtensionPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModel), "LanguageType", MetaModel.LanguageTypeDomainPropertyId, typeof(MetaModel.LanguageTypePropertyHandler)),
				new DomainMemberInfo(typeof(NamedDomainElement), "DisplayName", NamedDomainElement.DisplayNameDomainPropertyId, typeof(NamedDomainElement.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(NamedDomainElement), "IsDisplayNameTracking", NamedDomainElement.IsDisplayNameTrackingDomainPropertyId, typeof(NamedDomainElement.IsDisplayNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(NamedDomainElement), "Description", NamedDomainElement.DescriptionDomainPropertyId, typeof(NamedDomainElement.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(NamedDomainElement), "Name", NamedDomainElement.NameDomainPropertyId, typeof(NamedDomainElement.NamePropertyHandler)),
				new DomainMemberInfo(typeof(AttributedDomainElement), "SerializationName", AttributedDomainElement.SerializationNameDomainPropertyId, typeof(AttributedDomainElement.SerializationNamePropertyHandler)),
				new DomainMemberInfo(typeof(AttributedDomainElement), "IsSerializationNameTracking", AttributedDomainElement.IsSerializationNameTrackingDomainPropertyId, typeof(AttributedDomainElement.IsSerializationNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "Name", DomainProperty.NameDomainPropertyId, typeof(DomainProperty.NamePropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "IsElementName", DomainProperty.IsElementNameDomainPropertyId, typeof(DomainProperty.IsElementNamePropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "IsRequired", DomainProperty.IsRequiredDomainPropertyId, typeof(DomainProperty.IsRequiredPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "DisplayName", DomainProperty.DisplayNameDomainPropertyId, typeof(DomainProperty.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "Description", DomainProperty.DescriptionDomainPropertyId, typeof(DomainProperty.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "DefaultValue", DomainProperty.DefaultValueDomainPropertyId, typeof(DomainProperty.DefaultValuePropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "Category", DomainProperty.CategoryDomainPropertyId, typeof(DomainProperty.CategoryPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "IsBrowsable", DomainProperty.IsBrowsableDomainPropertyId, typeof(DomainProperty.IsBrowsablePropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "GetterAccessModifier", DomainProperty.GetterAccessModifierDomainPropertyId, typeof(DomainProperty.GetterAccessModifierPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "SetterAccessModifier", DomainProperty.SetterAccessModifierDomainPropertyId, typeof(DomainProperty.SetterAccessModifierPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "IsDisplayNameTracking", DomainProperty.IsDisplayNameTrackingDomainPropertyId, typeof(DomainProperty.IsDisplayNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "SerializationName", DomainProperty.SerializationNameDomainPropertyId, typeof(DomainProperty.SerializationNamePropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "IsSerializationNameTracking", DomainProperty.IsSerializationNameTrackingDomainPropertyId, typeof(DomainProperty.IsSerializationNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "SerializationRepresentationType", DomainProperty.SerializationRepresentationTypeDomainPropertyId, typeof(DomainProperty.SerializationRepresentationTypePropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "IsUIReadOnly", DomainProperty.IsUIReadOnlyDomainPropertyId, typeof(DomainProperty.IsUIReadOnlyPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "PropertyKind", DomainProperty.PropertyKindDomainPropertyId, typeof(DomainProperty.PropertyKindPropertyHandler)),
				new DomainMemberInfo(typeof(DomainProperty), "IsCustomCreated", DomainProperty.IsCustomCreatedDomainPropertyId, typeof(DomainProperty.IsCustomCreatedPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRelationship), "IsNameTracking", DomainRelationship.IsNameTrackingDomainPropertyId, typeof(DomainRelationship.IsNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRelationship), "AllowsDuplicates", DomainRelationship.AllowsDuplicatesDomainPropertyId, typeof(DomainRelationship.AllowsDuplicatesPropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "IsDomainModel", DomainClass.IsDomainModelDomainPropertyId, typeof(DomainClass.IsDomainModelPropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "CanCopy", DomainClass.CanCopyDomainPropertyId, typeof(DomainClass.CanCopyPropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "CanMove", DomainClass.CanMoveDomainPropertyId, typeof(DomainClass.CanMovePropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "CanPaste", DomainClass.CanPasteDomainPropertyId, typeof(DomainClass.CanPastePropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "GenerateSpecificViewModel", DomainClass.GenerateSpecificViewModelDomainPropertyId, typeof(DomainClass.GenerateSpecificViewModelPropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "GenerateSpecificViewModelProperties", DomainClass.GenerateSpecificViewModelPropertiesDomainPropertyId, typeof(DomainClass.GenerateSpecificViewModelPropertiesPropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "GenerateSpecificViewModelReferences", DomainClass.GenerateSpecificViewModelReferencesDomainPropertyId, typeof(DomainClass.GenerateSpecificViewModelReferencesPropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "GenerateSpecificViewModelEmbeddings", DomainClass.GenerateSpecificViewModelEmbeddingsDomainPropertyId, typeof(DomainClass.GenerateSpecificViewModelEmbeddingsPropertyHandler)),
				new DomainMemberInfo(typeof(DomainClass), "GenerateSpecificViewModelOppositeReferences", DomainClass.GenerateSpecificViewModelOppositeReferencesDomainPropertyId, typeof(DomainClass.GenerateSpecificViewModelOppositeReferencesPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "Multiplicity", DomainRole.MultiplicityDomainPropertyId, typeof(DomainRole.MultiplicityPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "PropertyName", DomainRole.PropertyNameDomainPropertyId, typeof(DomainRole.PropertyNamePropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "PropertyDisplayName", DomainRole.PropertyDisplayNameDomainPropertyId, typeof(DomainRole.PropertyDisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "IsPropertyNameTracking", DomainRole.IsPropertyNameTrackingDomainPropertyId, typeof(DomainRole.IsPropertyNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "IsPropertyDisplayNameTracking", DomainRole.IsPropertyDisplayNameTrackingDomainPropertyId, typeof(DomainRole.IsPropertyDisplayNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "Category", DomainRole.CategoryDomainPropertyId, typeof(DomainRole.CategoryPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "PropertyGetterAccessModifier", DomainRole.PropertyGetterAccessModifierDomainPropertyId, typeof(DomainRole.PropertyGetterAccessModifierPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "PropertySetterAccessModifier", DomainRole.PropertySetterAccessModifierDomainPropertyId, typeof(DomainRole.PropertySetterAccessModifierPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "IsPropertyBrowsable", DomainRole.IsPropertyBrowsableDomainPropertyId, typeof(DomainRole.IsPropertyBrowsablePropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "IsPropertyGenerator", DomainRole.IsPropertyGeneratorDomainPropertyId, typeof(DomainRole.IsPropertyGeneratorPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "PropagatesDelete", DomainRole.PropagatesDeleteDomainPropertyId, typeof(DomainRole.PropagatesDeletePropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "IsNameTracking", DomainRole.IsNameTrackingDomainPropertyId, typeof(DomainRole.IsNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DomainRole), "IsPropertyUIReadOnly", DomainRole.IsPropertyUIReadOnlyDomainPropertyId, typeof(DomainRole.IsPropertyUIReadOnlyPropertyHandler)),
				new DomainMemberInfo(typeof(EmbeddingRelationship), "PropagatesCopyToChild", EmbeddingRelationship.PropagatesCopyToChildDomainPropertyId, typeof(EmbeddingRelationship.PropagatesCopyToChildPropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRelationship), "SerializationAttributeName", ReferenceRelationship.SerializationAttributeNameDomainPropertyId, typeof(ReferenceRelationship.SerializationAttributeNamePropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRelationship), "SerializationTargetName", ReferenceRelationship.SerializationTargetNameDomainPropertyId, typeof(ReferenceRelationship.SerializationTargetNamePropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRelationship), "SerializationSourceName", ReferenceRelationship.SerializationSourceNameDomainPropertyId, typeof(ReferenceRelationship.SerializationSourceNamePropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRelationship), "PropagatesCopyToTarget", ReferenceRelationship.PropagatesCopyToTargetDomainPropertyId, typeof(ReferenceRelationship.PropagatesCopyToTargetPropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRelationship), "PropagatesCopyToSource", ReferenceRelationship.PropagatesCopyToSourceDomainPropertyId, typeof(ReferenceRelationship.PropagatesCopyToSourcePropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRelationship), "PropagatesCopyOnDeniedElementCopy", ReferenceRelationship.PropagatesCopyOnDeniedElementCopyDomainPropertyId, typeof(ReferenceRelationship.PropagatesCopyOnDeniedElementCopyPropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRelationship), "IsSerializationTargetNameTracking", ReferenceRelationship.IsSerializationTargetNameTrackingDomainPropertyId, typeof(ReferenceRelationship.IsSerializationTargetNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRelationship), "IsSerializationSourceNameTracking", ReferenceRelationship.IsSerializationSourceNameTrackingDomainPropertyId, typeof(ReferenceRelationship.IsSerializationSourceNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(TreeNode), "IsEmbeddingTreeExpanded", TreeNode.IsEmbeddingTreeExpandedDomainPropertyId, typeof(TreeNode.IsEmbeddingTreeExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(TreeNode), "IsInheritanceTreeExpanded", TreeNode.IsInheritanceTreeExpandedDomainPropertyId, typeof(TreeNode.IsInheritanceTreeExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(TreeNode), "IsReferenceTreeExpanded", TreeNode.IsReferenceTreeExpandedDomainPropertyId, typeof(TreeNode.IsReferenceTreeExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(TreeNode), "IsShapeMappingTreeExpanded", TreeNode.IsShapeMappingTreeExpandedDomainPropertyId, typeof(TreeNode.IsShapeMappingTreeExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(TreeNode), "IsElementHolder", TreeNode.IsElementHolderDomainPropertyId, typeof(TreeNode.IsElementHolderPropertyHandler)),
				new DomainMemberInfo(typeof(TreeNode), "IsExpanded", TreeNode.IsExpandedDomainPropertyId, typeof(TreeNode.IsExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(EmbeddingRSNode), "IsExpanded", EmbeddingRSNode.IsExpandedDomainPropertyId, typeof(EmbeddingRSNode.IsExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(InheritanceNode), "InhRelationshipId", InheritanceNode.InhRelationshipIdDomainPropertyId, typeof(InheritanceNode.InhRelationshipIdPropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRSNode), "IsShapeMappingTreeExpanded", ReferenceRSNode.IsShapeMappingTreeExpandedDomainPropertyId, typeof(ReferenceRSNode.IsShapeMappingTreeExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(ReferenceRSNode), "IsExpanded", ReferenceRSNode.IsExpandedDomainPropertyId, typeof(ReferenceRSNode.IsExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(DomainType), "Namespace", DomainType.NamespaceDomainPropertyId, typeof(DomainType.NamespacePropertyHandler)),
				new DomainMemberInfo(typeof(DomainType), "SerializationStyle", DomainType.SerializationStyleDomainPropertyId, typeof(DomainType.SerializationStylePropertyHandler)),
				new DomainMemberInfo(typeof(DomainType), "Name", DomainType.NameDomainPropertyId, typeof(DomainType.NamePropertyHandler)),
				new DomainMemberInfo(typeof(DomainType), "Description", DomainType.DescriptionDomainPropertyId, typeof(DomainType.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(DomainType), "DisplayName", DomainType.DisplayNameDomainPropertyId, typeof(DomainType.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(DomainType), "IsDisplayNameTracking", DomainType.IsDisplayNameTrackingDomainPropertyId, typeof(DomainType.IsDisplayNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DomainType), "RequiresSerializationConversion", DomainType.RequiresSerializationConversionDomainPropertyId, typeof(DomainType.RequiresSerializationConversionPropertyHandler)),
				new DomainMemberInfo(typeof(DomainEnumeration), "AccessModifier", DomainEnumeration.AccessModifierDomainPropertyId, typeof(DomainEnumeration.AccessModifierPropertyHandler)),
				new DomainMemberInfo(typeof(DomainEnumeration), "IsFlags", DomainEnumeration.IsFlagsDomainPropertyId, typeof(DomainEnumeration.IsFlagsPropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "Name", EnumerationLiteral.NameDomainPropertyId, typeof(EnumerationLiteral.NamePropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "Description", EnumerationLiteral.DescriptionDomainPropertyId, typeof(EnumerationLiteral.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "Value", EnumerationLiteral.ValueDomainPropertyId, typeof(EnumerationLiteral.ValuePropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "DisplayName", EnumerationLiteral.DisplayNameDomainPropertyId, typeof(EnumerationLiteral.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "IsDisplayNameTracking", EnumerationLiteral.IsDisplayNameTrackingDomainPropertyId, typeof(EnumerationLiteral.IsDisplayNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "SerializationName", EnumerationLiteral.SerializationNameDomainPropertyId, typeof(EnumerationLiteral.SerializationNamePropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "IsSerializationNameTracking", EnumerationLiteral.IsSerializationNameTrackingDomainPropertyId, typeof(EnumerationLiteral.IsSerializationNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(DiagramClass), "Name", DiagramClass.NameDomainPropertyId, typeof(DiagramClass.NamePropertyHandler)),
				new DomainMemberInfo(typeof(DiagramClass), "Title", DiagramClass.TitleDomainPropertyId, typeof(DiagramClass.TitlePropertyHandler)),
				new DomainMemberInfo(typeof(DiagramClass), "IsCustom", DiagramClass.IsCustomDomainPropertyId, typeof(DiagramClass.IsCustomPropertyHandler)),
				new DomainMemberInfo(typeof(DiagramClass), "VisualizationBehavior", DiagramClass.VisualizationBehaviorDomainPropertyId, typeof(DiagramClass.VisualizationBehaviorPropertyHandler)),
				new DomainMemberInfo(typeof(DiagramClassView), "IsExpanded", DiagramClassView.IsExpandedDomainPropertyId, typeof(DiagramClassView.IsExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(PresentationElementClass), "GeneratePropertiesVM", PresentationElementClass.GeneratePropertiesVMDomainPropertyId, typeof(PresentationElementClass.GeneratePropertiesVMPropertyHandler)),
				new DomainMemberInfo(typeof(PresentationElementClass), "GenerateShapePropertiesVM", PresentationElementClass.GenerateShapePropertiesVMDomainPropertyId, typeof(PresentationElementClass.GenerateShapePropertiesVMPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "DefaultWidth", ShapeClass.DefaultWidthDomainPropertyId, typeof(ShapeClass.DefaultWidthPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "DefaultHeight", ShapeClass.DefaultHeightDomainPropertyId, typeof(ShapeClass.DefaultHeightPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "IsFixedWidth", ShapeClass.IsFixedWidthDomainPropertyId, typeof(ShapeClass.IsFixedWidthPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "IsFixedHeight", ShapeClass.IsFixedHeightDomainPropertyId, typeof(ShapeClass.IsFixedHeightPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "IsRelativeChild", ShapeClass.IsRelativeChildDomainPropertyId, typeof(ShapeClass.IsRelativeChildPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "RelativeChildBehaviour", ShapeClass.RelativeChildBehaviourDomainPropertyId, typeof(ShapeClass.RelativeChildBehaviourPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "IsAutoGenerated", ShapeClass.IsAutoGeneratedDomainPropertyId, typeof(ShapeClass.IsAutoGeneratedPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "BorderThickness", ShapeClass.BorderThicknessDomainPropertyId, typeof(ShapeClass.BorderThicknessPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "BackgroundBrush", ShapeClass.BackgroundBrushDomainPropertyId, typeof(ShapeClass.BackgroundBrushPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "BorderBrush", ShapeClass.BorderBrushDomainPropertyId, typeof(ShapeClass.BorderBrushPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "BorderOuterBrush", ShapeClass.BorderOuterBrushDomainPropertyId, typeof(ShapeClass.BorderOuterBrushPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "BorderOuterSize", ShapeClass.BorderOuterSizeDomainPropertyId, typeof(ShapeClass.BorderOuterSizePropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "BorderCornerRadius", ShapeClass.BorderCornerRadiusDomainPropertyId, typeof(ShapeClass.BorderCornerRadiusPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "BorderIsHitTestVisible", ShapeClass.BorderIsHitTestVisibleDomainPropertyId, typeof(ShapeClass.BorderIsHitTestVisiblePropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "BorderFocusable", ShapeClass.BorderFocusableDomainPropertyId, typeof(ShapeClass.BorderFocusablePropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "MenuIconUri", ShapeClass.MenuIconUriDomainPropertyId, typeof(ShapeClass.MenuIconUriPropertyHandler)),
				new DomainMemberInfo(typeof(ShapeClass), "UseInDependencyView", ShapeClass.UseInDependencyViewDomainPropertyId, typeof(ShapeClass.UseInDependencyViewPropertyHandler)),
				new DomainMemberInfo(typeof(RelationshipShapeClass), "IsAutoGenerated", RelationshipShapeClass.IsAutoGeneratedDomainPropertyId, typeof(RelationshipShapeClass.IsAutoGeneratedPropertyHandler)),
				new DomainMemberInfo(typeof(RelationshipShapeClass), "StartAnchorStyle", RelationshipShapeClass.StartAnchorStyleDomainPropertyId, typeof(RelationshipShapeClass.StartAnchorStylePropertyHandler)),
				new DomainMemberInfo(typeof(RelationshipShapeClass), "EndAnchorStyle", RelationshipShapeClass.EndAnchorStyleDomainPropertyId, typeof(RelationshipShapeClass.EndAnchorStylePropertyHandler)),
				new DomainMemberInfo(typeof(RelationshipShapeClass), "StrokeThickness", RelationshipShapeClass.StrokeThicknessDomainPropertyId, typeof(RelationshipShapeClass.StrokeThicknessPropertyHandler)),
				new DomainMemberInfo(typeof(RelationshipShapeClass), "Stroke", RelationshipShapeClass.StrokeDomainPropertyId, typeof(RelationshipShapeClass.StrokePropertyHandler)),
				new DomainMemberInfo(typeof(GeneratedDomainElement), "GeneratesDoubleDerived", GeneratedDomainElement.GeneratesDoubleDerivedDomainPropertyId, typeof(GeneratedDomainElement.GeneratesDoubleDerivedPropertyHandler)),
				new DomainMemberInfo(typeof(GeneratedDomainElement), "HasCustomConstructor", GeneratedDomainElement.HasCustomConstructorDomainPropertyId, typeof(GeneratedDomainElement.HasCustomConstructorPropertyHandler)),
				new DomainMemberInfo(typeof(GeneratedDomainElement), "AccessModifier", GeneratedDomainElement.AccessModifierDomainPropertyId, typeof(GeneratedDomainElement.AccessModifierPropertyHandler)),
				new DomainMemberInfo(typeof(GeneratedDomainElement), "InheritanceModifier", GeneratedDomainElement.InheritanceModifierDomainPropertyId, typeof(GeneratedDomainElement.InheritanceModifierPropertyHandler)),
				new DomainMemberInfo(typeof(GeneratedDomainElement), "Namespace", GeneratedDomainElement.NamespaceDomainPropertyId, typeof(GeneratedDomainElement.NamespacePropertyHandler)),
				new DomainMemberInfo(typeof(EmbeddingDiagramNode), "IsExpanded", EmbeddingDiagramNode.IsExpandedDomainPropertyId, typeof(EmbeddingDiagramNode.IsExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(EmbeddingDiagramNode), "IsChildrenTreeExpanded", EmbeddingDiagramNode.IsChildrenTreeExpandedDomainPropertyId, typeof(EmbeddingDiagramNode.IsChildrenTreeExpandedPropertyHandler)),
				new DomainMemberInfo(typeof(SerializationModel), "SerializedIdAttributeName", SerializationModel.SerializedIdAttributeNameDomainPropertyId, typeof(SerializationModel.SerializedIdAttributeNamePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedDomainModel), "SerializedIdAttributeName", SerializedDomainModel.SerializedIdAttributeNameDomainPropertyId, typeof(SerializedDomainModel.SerializedIdAttributeNamePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedEmbeddingRelationship), "IsTargetIncludedSubmodel", SerializedEmbeddingRelationship.IsTargetIncludedSubmodelDomainPropertyId, typeof(SerializedEmbeddingRelationship.IsTargetIncludedSubmodelPropertyHandler)),
				new DomainMemberInfo(typeof(SerializedDomainProperty), "SerializationName", SerializedDomainProperty.SerializationNameDomainPropertyId, typeof(SerializedDomainProperty.SerializationNamePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedDomainProperty), "SerializationRepresentationType", SerializedDomainProperty.SerializationRepresentationTypeDomainPropertyId, typeof(SerializedDomainProperty.SerializationRepresentationTypePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedDomainProperty), "IsSerializationNameTracking", SerializedDomainProperty.IsSerializationNameTrackingDomainPropertyId, typeof(SerializedDomainProperty.IsSerializationNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(SerializedDomainProperty), "OmitProperty", SerializedDomainProperty.OmitPropertyDomainPropertyId, typeof(SerializedDomainProperty.OmitPropertyPropertyHandler)),
				new DomainMemberInfo(typeof(SerializationClass), "IsSerializationNameTracking", SerializationClass.IsSerializationNameTrackingDomainPropertyId, typeof(SerializationClass.IsSerializationNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(SerializationClass), "SerializationName", SerializationClass.SerializationNameDomainPropertyId, typeof(SerializationClass.SerializationNamePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedIdProperty), "Name", SerializedIdProperty.NameDomainPropertyId, typeof(SerializedIdProperty.NamePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedIdProperty), "SerializationName", SerializedIdProperty.SerializationNameDomainPropertyId, typeof(SerializedIdProperty.SerializationNamePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedIdProperty), "OmitIdProperty", SerializedIdProperty.OmitIdPropertyDomainPropertyId, typeof(SerializedIdProperty.OmitIdPropertyPropertyHandler)),
				new DomainMemberInfo(typeof(SerializedDomainRole), "SerializationName", SerializedDomainRole.SerializationNameDomainPropertyId, typeof(SerializedDomainRole.SerializationNamePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedDomainRole), "SerializationAttributeName", SerializedDomainRole.SerializationAttributeNameDomainPropertyId, typeof(SerializedDomainRole.SerializationAttributeNamePropertyHandler)),
				new DomainMemberInfo(typeof(Validation), "UseLoad", Validation.UseLoadDomainPropertyId, typeof(Validation.UseLoadPropertyHandler)),
				new DomainMemberInfo(typeof(Validation), "UseMenu", Validation.UseMenuDomainPropertyId, typeof(Validation.UseMenuPropertyHandler)),
				new DomainMemberInfo(typeof(Validation), "UseOpen", Validation.UseOpenDomainPropertyId, typeof(Validation.UseOpenPropertyHandler)),
				new DomainMemberInfo(typeof(Validation), "UseSave", Validation.UseSaveDomainPropertyId, typeof(Validation.UseSavePropertyHandler)),
				new DomainMemberInfo(typeof(Validation), "UseAutoValidation", Validation.UseAutoValidationDomainPropertyId, typeof(Validation.UseAutoValidationPropertyHandler)),
				new DomainMemberInfo(typeof(MappingRelationshipShapeClass), "IsAutoGenerated", MappingRelationshipShapeClass.IsAutoGeneratedDomainPropertyId, typeof(MappingRelationshipShapeClass.IsAutoGeneratedPropertyHandler)),
				new DomainMemberInfo(typeof(MappingRelationshipShapeClass), "StartAnchorStyle", MappingRelationshipShapeClass.StartAnchorStyleDomainPropertyId, typeof(MappingRelationshipShapeClass.StartAnchorStylePropertyHandler)),
				new DomainMemberInfo(typeof(MappingRelationshipShapeClass), "EndAnchorStyle", MappingRelationshipShapeClass.EndAnchorStyleDomainPropertyId, typeof(MappingRelationshipShapeClass.EndAnchorStylePropertyHandler)),
				new DomainMemberInfo(typeof(MappingRelationshipShapeClass), "StrokeThickness", MappingRelationshipShapeClass.StrokeThicknessDomainPropertyId, typeof(MappingRelationshipShapeClass.StrokeThicknessPropertyHandler)),
				new DomainMemberInfo(typeof(MappingRelationshipShapeClass), "Stroke", MappingRelationshipShapeClass.StrokeDomainPropertyId, typeof(MappingRelationshipShapeClass.StrokePropertyHandler)),
				new DomainMemberInfo(typeof(SerializedRelationship), "IsInFullSerialization", SerializedRelationship.IsInFullSerializationDomainPropertyId, typeof(SerializedRelationship.IsInFullSerializationPropertyHandler)),
				new DomainMemberInfo(typeof(SerializedRelationship), "OmitRelationship", SerializedRelationship.OmitRelationshipDomainPropertyId, typeof(SerializedRelationship.OmitRelationshipPropertyHandler)),
				new DomainMemberInfo(typeof(LinkItem), "Title", LinkItem.TitleDomainPropertyId, typeof(LinkItem.TitlePropertyHandler)),
				new DomainMemberInfo(typeof(LinkItem), "Description", LinkItem.DescriptionDomainPropertyId, typeof(LinkItem.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(LinkItem), "Link", LinkItem.LinkDomainPropertyId, typeof(LinkItem.LinkPropertyHandler)),
				new DomainMemberInfo(typeof(LinkItem), "Category", LinkItem.CategoryDomainPropertyId, typeof(LinkItem.CategoryPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModelLibrary), "FilePath", MetaModelLibrary.FilePathDomainPropertyId, typeof(MetaModelLibrary.FilePathPropertyHandler)),
				new DomainMemberInfo(typeof(MetaModelLibrary), "Name", MetaModelLibrary.NameDomainPropertyId, typeof(MetaModelLibrary.NamePropertyHandler)),
				new DomainMemberInfo(typeof(View), "CreateModelTree", View.CreateModelTreeDomainPropertyId, typeof(View.CreateModelTreePropertyHandler)),
				new DomainMemberInfo(typeof(View), "CreatePropertyGrid", View.CreatePropertyGridDomainPropertyId, typeof(View.CreatePropertyGridPropertyHandler)),
				new DomainMemberInfo(typeof(View), "CreateErrorList", View.CreateErrorListDomainPropertyId, typeof(View.CreateErrorListPropertyHandler)),
				new DomainMemberInfo(typeof(View), "CreateDependenciesView", View.CreateDependenciesViewDomainPropertyId, typeof(View.CreateDependenciesViewPropertyHandler)),
				new DomainMemberInfo(typeof(View), "ModelTreeId", View.ModelTreeIdDomainPropertyId, typeof(View.ModelTreeIdPropertyHandler)),
				new DomainMemberInfo(typeof(View), "PropertyGridId", View.PropertyGridIdDomainPropertyId, typeof(View.PropertyGridIdPropertyHandler)),
				new DomainMemberInfo(typeof(View), "ErrorListId", View.ErrorListIdDomainPropertyId, typeof(View.ErrorListIdPropertyHandler)),
				new DomainMemberInfo(typeof(View), "DependenciesViewId", View.DependenciesViewIdDomainPropertyId, typeof(View.DependenciesViewIdPropertyHandler)),
				new DomainMemberInfo(typeof(View), "SearchId", View.SearchIdDomainPropertyId, typeof(View.SearchIdPropertyHandler)),
				new DomainMemberInfo(typeof(View), "SearchResultId", View.SearchResultIdDomainPropertyId, typeof(View.SearchResultIdPropertyHandler)),
				new DomainMemberInfo(typeof(View), "PluginWindowId", View.PluginWindowIdDomainPropertyId, typeof(View.PluginWindowIdPropertyHandler)),
				new DomainMemberInfo(typeof(PropertyGridEditor), "Name", PropertyGridEditor.NameDomainPropertyId, typeof(PropertyGridEditor.NamePropertyHandler)),
				new DomainMemberInfo(typeof(PropertyGridEditor), "Namespace", PropertyGridEditor.NamespaceDomainPropertyId, typeof(PropertyGridEditor.NamespacePropertyHandler)),
				new DomainMemberInfo(typeof(PropertyGridEditor), "ShouldBeGenerated", PropertyGridEditor.ShouldBeGeneratedDomainPropertyId, typeof(PropertyGridEditor.ShouldBeGeneratedPropertyHandler)),
				new DomainMemberInfo(typeof(PropertyGridEditor), "EditorBaseType", PropertyGridEditor.EditorBaseTypeDomainPropertyId, typeof(PropertyGridEditor.EditorBaseTypePropertyHandler)),
				new DomainMemberInfo(typeof(PropertyGridEditor), "RequiresContextMenuBar", PropertyGridEditor.RequiresContextMenuBarDomainPropertyId, typeof(PropertyGridEditor.RequiresContextMenuBarPropertyHandler)),
				new DomainMemberInfo(typeof(BaseModelContext), "IsDefault", BaseModelContext.IsDefaultDomainPropertyId, typeof(BaseModelContext.IsDefaultPropertyHandler)),
				new DomainMemberInfo(typeof(ModelTree), "SortingBehavior", ModelTree.SortingBehaviorDomainPropertyId, typeof(ModelTree.SortingBehaviorPropertyHandler)),
				new DomainMemberInfo(typeof(ModelTree), "CanMoveElements", ModelTree.CanMoveElementsDomainPropertyId, typeof(ModelTree.CanMoveElementsPropertyHandler)),
				new DomainMemberInfo(typeof(TemplatedDiagramClass), "UniqueId", TemplatedDiagramClass.UniqueIdDomainPropertyId, typeof(TemplatedDiagramClass.UniqueIdPropertyHandler)),
				new DomainMemberInfo(typeof(TemplatedDiagramClass), "Description", TemplatedDiagramClass.DescriptionDomainPropertyId, typeof(TemplatedDiagramClass.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(DomainClassReferencesBaseClass), "InhNodeId", DomainClassReferencesBaseClass.InhNodeIdDomainPropertyId, typeof(DomainClassReferencesBaseClass.InhNodeIdPropertyHandler)),
			};
		}
		/// <summary>
		/// Gets the list of generated domain roles.
		/// </summary>
		/// <returns>List of role data.</returns>
		protected sealed override DomainRolePlayerInfo[] GetGeneratedDomainRoles()
		{
			return new DomainRolePlayerInfo[]
			{
				new DomainRolePlayerInfo(typeof(AttributedDomainElementHasProperties), "DomainElement", AttributedDomainElementHasProperties.DomainElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(AttributedDomainElementHasProperties), "DomainProperty", AttributedDomainElementHasProperties.DomainPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRelationshipHasRoles), "Relationship", DomainRelationshipHasRoles.RelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRelationshipHasRoles), "Role", DomainRelationshipHasRoles.RoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRelationshipReferencesSource), "Relationship", DomainRelationshipReferencesSource.RelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRelationshipReferencesSource), "Role", DomainRelationshipReferencesSource.RoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRelationshipReferencesTarget), "Relationship", DomainRelationshipReferencesTarget.RelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRelationshipReferencesTarget), "Role", DomainRelationshipReferencesTarget.RoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(ReferenceRSNodeReferencesReferenceRelationship), "ReferenceRSNode", ReferenceRSNodeReferencesReferenceRelationship.ReferenceRSNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ReferenceRSNodeReferencesReferenceRelationship), "ReferenceRelationship", ReferenceRSNodeReferencesReferenceRelationship.ReferenceRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasDomainTypes), "MetaModel", MetaModelHasDomainTypes.MetaModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasDomainTypes), "DomainType", MetaModelHasDomainTypes.DomainTypeDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainEnumerationHasLiterals), "DomainEnumeration", DomainEnumerationHasLiterals.DomainEnumerationDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainEnumerationHasLiterals), "EnumerationLiteral", DomainEnumerationHasLiterals.EnumerationLiteralDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainPropertyReferencesType), "DomainProperty", DomainPropertyReferencesType.DomainPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainPropertyReferencesType), "DomainType", DomainPropertyReferencesType.DomainTypeDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramClassViewReferencesDiagramClass), "DiagramClassView", DiagramClassViewReferencesDiagramClass.DiagramClassViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramClassViewReferencesDiagramClass), "DiagramClass", DiagramClassViewReferencesDiagramClass.DiagramClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramClassHasPresentationElements), "DiagramClass", DiagramClassHasPresentationElements.DiagramClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramClassHasPresentationElements), "PresentationElementClass", DiagramClassHasPresentationElements.PresentationElementClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainClassReferencesBaseClass), "DerivedClass", DomainClassReferencesBaseClass.DerivedClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainClassReferencesBaseClass), "BaseClass", DomainClassReferencesBaseClass.BaseClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRelationshipReferencesBaseRelationship), "DerivedRelationship", DomainRelationshipReferencesBaseRelationship.DerivedRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRelationshipReferencesBaseRelationship), "BaseRelationship", DomainRelationshipReferencesBaseRelationship.BaseRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRoleReferencesOpposite), "SourceDomainRole", DomainRoleReferencesOpposite.SourceDomainRoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRoleReferencesOpposite), "TargetDomainRole", DomainRoleReferencesOpposite.TargetDomainRoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(EmbeddingRSNodeReferencesRelationship), "EmbeddingRSNode", EmbeddingRSNodeReferencesRelationship.EmbeddingRSNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(EmbeddingRSNodeReferencesRelationship), "DomainRelationship", EmbeddingRSNodeReferencesRelationship.DomainRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRoleReferencesRolePlayer), "DomainRole", DomainRoleReferencesRolePlayer.DomainRoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRoleReferencesRolePlayer), "AttributedDomainElement", DomainRoleReferencesRolePlayer.AttributedDomainElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesDomainElement), "TreeNode", TreeNodeReferencesDomainElement.TreeNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesDomainElement), "AttributedDomainElement", TreeNodeReferencesDomainElement.AttributedDomainElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeClassReferencesChildren), "Parent", ShapeClassReferencesChildren.ParentDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeClassReferencesChildren), "Child", ShapeClassReferencesChildren.ChildDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramClassViewHasRootDiagramNodes), "DiagramClassView", DiagramClassViewHasRootDiagramNodes.DiagramClassViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramClassViewHasRootDiagramNodes), "RootDiagramNode", DiagramClassViewHasRootDiagramNodes.RootDiagramNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationClassReferencesChildren), "Parent", SerializationClassReferencesChildren.ParentDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationClassReferencesChildren), "Child", SerializationClassReferencesChildren.ChildDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedDomainRoleReferencesDomainRole), "SerializedDomainRole", SerializedDomainRoleReferencesDomainRole.SerializedDomainRoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedDomainRoleReferencesDomainRole), "DomainRole", SerializedDomainRoleReferencesDomainRole.DomainRoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationClassReferencesAttributes), "Element", SerializationClassReferencesAttributes.ElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationClassReferencesAttributes), "Child", SerializationClassReferencesAttributes.ChildDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasValidation), "MetaModel", MetaModelHasValidation.MetaModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasValidation), "Validation", MetaModelHasValidation.ValidationDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainModelTreeViewReferencesRootNodes), "DomainModelTreeView", DomainModelTreeViewReferencesRootNodes.DomainModelTreeViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainModelTreeViewReferencesRootNodes), "RootNode", DomainModelTreeViewReferencesRootNodes.RootNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesEmbeddingRSNodes), "TreeNode", TreeNodeReferencesEmbeddingRSNodes.TreeNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesEmbeddingRSNodes), "EmbeddingRSNode", TreeNodeReferencesEmbeddingRSNodes.EmbeddingRSNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(EmbeddingRSNodeReferencesEmbeddingNode), "EmbeddingRSNode", EmbeddingRSNodeReferencesEmbeddingNode.EmbeddingRSNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(EmbeddingRSNodeReferencesEmbeddingNode), "EmbeddingNode", EmbeddingRSNodeReferencesEmbeddingNode.EmbeddingNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesInheritanceNodes), "TreeNode", TreeNodeReferencesInheritanceNodes.TreeNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesInheritanceNodes), "InheritanceNode", TreeNodeReferencesInheritanceNodes.InheritanceNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesReferenceRSNodes), "TreeNode", TreeNodeReferencesReferenceRSNodes.TreeNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesReferenceRSNodes), "ReferenceRSNode", TreeNodeReferencesReferenceRSNodes.ReferenceRSNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ReferenceRSNodeReferencesReferenceNode), "ReferenceRSNode", ReferenceRSNodeReferencesReferenceNode.ReferenceRSNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ReferenceRSNodeReferencesReferenceNode), "ReferenceNode", ReferenceRSNodeReferencesReferenceNode.ReferenceNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesShapeClassNodes), "TreeNode", TreeNodeReferencesShapeClassNodes.TreeNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(TreeNodeReferencesShapeClassNodes), "ShapeClassNode", TreeNodeReferencesShapeClassNodes.ShapeClassNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramViewHasDiagramClassViews), "DiagramView", DiagramViewHasDiagramClassViews.DiagramViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramViewHasDiagramClassViews), "DiagramClassView", DiagramViewHasDiagramClassViews.DiagramClassViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramTreeNodeReferencesPresentationElementClass), "DiagramTreeNode", DiagramTreeNodeReferencesPresentationElementClass.DiagramTreeNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(DiagramTreeNodeReferencesPresentationElementClass), "PresentationElementClass", DiagramTreeNodeReferencesPresentationElementClass.PresentationElementClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(EmbeddingDiagramNodeHasEmbeddingDiagramNodes), "SourceEmbeddingDiagramNode", EmbeddingDiagramNodeHasEmbeddingDiagramNodes.SourceEmbeddingDiagramNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(EmbeddingDiagramNodeHasEmbeddingDiagramNodes), "TargetEmbeddingDiagramNode", EmbeddingDiagramNodeHasEmbeddingDiagramNodes.TargetEmbeddingDiagramNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(MappingRelationshipShapeClassReferencesSource), "MappingRelationshipShapeClass", MappingRelationshipShapeClassReferencesSource.MappingRelationshipShapeClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(MappingRelationshipShapeClassReferencesSource), "ReferenceRelationship", MappingRelationshipShapeClassReferencesSource.ReferenceRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(MappingRelationshipShapeClassReferencesTarget), "MappingRelationshipShapeClass", MappingRelationshipShapeClassReferencesTarget.MappingRelationshipShapeClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(MappingRelationshipShapeClassReferencesTarget), "ReferenceRelationship", MappingRelationshipShapeClassReferencesTarget.ReferenceRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeRelationshipNodeReferencesRelationshipShapeClass), "ShapeRelationshipNode", ShapeRelationshipNodeReferencesRelationshipShapeClass.ShapeRelationshipNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeRelationshipNodeReferencesRelationshipShapeClass), "RelationshipShapeClass", ShapeRelationshipNodeReferencesRelationshipShapeClass.RelationshipShapeClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainModelTreeViewHasModelTreeNodes), "DomainModelTreeView", DomainModelTreeViewHasModelTreeNodes.DomainModelTreeViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainModelTreeViewHasModelTreeNodes), "ModelTreeNode", DomainModelTreeViewHasModelTreeNodes.ModelTreeNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ReferenceRSNodeReferencesShapeRelationshipNodes), "ReferenceRSNode", ReferenceRSNodeReferencesShapeRelationshipNodes.ReferenceRSNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ReferenceRSNodeReferencesShapeRelationshipNodes), "ShapeRelationshipNode", ReferenceRSNodeReferencesShapeRelationshipNodes.ShapeRelationshipNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeClassReferencesDomainClass), "ShapeClass", ShapeClassReferencesDomainClass.ShapeClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeClassReferencesDomainClass), "DomainClass", ShapeClassReferencesDomainClass.DomainClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeClassNodeReferencesShapeClass), "ShapeClassNode", ShapeClassNodeReferencesShapeClass.ShapeClassNodeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeClassNodeReferencesShapeClass), "ShapeClass", ShapeClassNodeReferencesShapeClass.ShapeClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationModelHasSerializedDomainModel), "SerializationModel", SerializationModelHasSerializedDomainModel.SerializationModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationModelHasSerializedDomainModel), "SerializedDomainModel", SerializationModelHasSerializedDomainModel.SerializedDomainModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationClassHasIdProperty), "SerializationClass", SerializationClassHasIdProperty.SerializationClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationClassHasIdProperty), "SerializedIdProperty", SerializationClassHasIdProperty.SerializedIdPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedRelationshipHasSerializedDomainRoles), "SerializedRelationship", SerializedRelationshipHasSerializedDomainRoles.SerializedRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedRelationshipHasSerializedDomainRoles), "SerializedDomainRole", SerializedRelationshipHasSerializedDomainRoles.SerializedDomainRoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedDomainClassReferencesDomainClass), "SerializedDomainClass", SerializedDomainClassReferencesDomainClass.SerializedDomainClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedDomainClassReferencesDomainClass), "DomainClass", SerializedDomainClassReferencesDomainClass.DomainClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedEmbeddingRelationshipReferencesEmbeddingRelationship), "SerializedEmbeddingRelationship", SerializedEmbeddingRelationshipReferencesEmbeddingRelationship.SerializedEmbeddingRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedEmbeddingRelationshipReferencesEmbeddingRelationship), "EmbeddingRelationship", SerializedEmbeddingRelationshipReferencesEmbeddingRelationship.EmbeddingRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedReferenceRelationshipReferencesReferenceRelationship), "SerializedReferenceRelationship", SerializedReferenceRelationshipReferencesReferenceRelationship.SerializedReferenceRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedReferenceRelationshipReferencesReferenceRelationship), "ReferenceRelationship", SerializedReferenceRelationshipReferencesReferenceRelationship.ReferenceRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedDomainPropertyReferencesDomainProperty), "SerializedDomainProperty", SerializedDomainPropertyReferencesDomainProperty.SerializedDomainPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedDomainPropertyReferencesDomainProperty), "DomainProperty", SerializedDomainPropertyReferencesDomainProperty.DomainPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedDomainRoleReferencesSerializationClass), "SerializedDomainRole", SerializedDomainRoleReferencesSerializationClass.SerializedDomainRoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializedDomainRoleReferencesSerializationClass), "SerializationClass", SerializedDomainRoleReferencesSerializationClass.SerializationClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationModelHasChildren), "SerializationModel", SerializationModelHasChildren.SerializationModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationModelHasChildren), "SerializationClass", SerializationModelHasChildren.SerializationClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationClassHasProperties), "SerializationClass", SerializationClassHasProperties.SerializationClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SerializationClassHasProperties), "SerializedDomainProperty", SerializationClassHasProperties.SerializedDomainPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(CreditsHasCreditItems), "Credits", CreditsHasCreditItems.CreditsDomainRoleId),
				new DomainRolePlayerInfo(typeof(CreditsHasCreditItems), "CreditItem", CreditsHasCreditItems.CreditItemDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasAdditionalInformation), "MetaModel", MetaModelHasAdditionalInformation.MetaModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasAdditionalInformation), "AdditionalInformation", MetaModelHasAdditionalInformation.AdditionalInformationDomainRoleId),
				new DomainRolePlayerInfo(typeof(AdditionalInformationHasCredits), "AdditionalInformation", AdditionalInformationHasCredits.AdditionalInformationDomainRoleId),
				new DomainRolePlayerInfo(typeof(AdditionalInformationHasCredits), "Credits", AdditionalInformationHasCredits.CreditsDomainRoleId),
				new DomainRolePlayerInfo(typeof(AdditionalInformationHasFurtherInformation), "AdditionalInformation", AdditionalInformationHasFurtherInformation.AdditionalInformationDomainRoleId),
				new DomainRolePlayerInfo(typeof(AdditionalInformationHasFurtherInformation), "FurtherInformation", AdditionalInformationHasFurtherInformation.FurtherInformationDomainRoleId),
				new DomainRolePlayerInfo(typeof(FurtherInformationHasInformationItems), "FurtherInformation", FurtherInformationHasInformationItems.FurtherInformationDomainRoleId),
				new DomainRolePlayerInfo(typeof(FurtherInformationHasInformationItems), "InformationItem", FurtherInformationHasInformationItems.InformationItemDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasMetaModelLibraries), "MetaModel", MetaModelHasMetaModelLibraries.MetaModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasMetaModelLibraries), "MetaModelLibrary", MetaModelHasMetaModelLibraries.MetaModelLibraryDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelLibraryHasImportedLibrary), "MetaModelLibrary", MetaModelLibraryHasImportedLibrary.MetaModelLibraryDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelLibraryHasImportedLibrary), "BaseMetaModel", MetaModelLibraryHasImportedLibrary.BaseMetaModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewContextHasDomainModelTreeView), "ViewContext", ViewContextHasDomainModelTreeView.ViewContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewContextHasDomainModelTreeView), "DomainModelTreeView", ViewContextHasDomainModelTreeView.DomainModelTreeViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewContextHasDiagramView), "ViewContext", ViewContextHasDiagramView.ViewContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewContextHasDiagramView), "DiagramView", ViewContextHasDiagramView.DiagramViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(LibraryModelContextHasClasses), "LibraryModelContext", LibraryModelContextHasClasses.LibraryModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(LibraryModelContextHasClasses), "DomainClass", LibraryModelContextHasClasses.DomainClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(LibraryModelContextHasDiagramClasses), "LibraryModelContext", LibraryModelContextHasDiagramClasses.LibraryModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(LibraryModelContextHasDiagramClasses), "DiagramClass", LibraryModelContextHasDiagramClasses.DiagramClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(LibraryModelContextHasRelationships), "LibraryModelContext", LibraryModelContextHasRelationships.LibraryModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(LibraryModelContextHasRelationships), "DomainRelationship", LibraryModelContextHasRelationships.DomainRelationshipDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewContextReferencesModelContext), "ViewContext", ViewContextReferencesModelContext.ViewContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewContextReferencesModelContext), "LibraryModelContext", ViewContextReferencesModelContext.LibraryModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasView), "MetaModel", MetaModelHasView.MetaModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasView), "View", MetaModelHasView.ViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainTypeReferencesPropertyGridEditor), "DomainType", DomainTypeReferencesPropertyGridEditor.DomainTypeDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainTypeReferencesPropertyGridEditor), "PropertyGridEditor", DomainTypeReferencesPropertyGridEditor.PropertyGridEditorDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRoleReferencesCustomPropertyGridEditor), "DomainRole", DomainRoleReferencesCustomPropertyGridEditor.DomainRoleDomainRoleId),
				new DomainRolePlayerInfo(typeof(DomainRoleReferencesCustomPropertyGridEditor), "PropertyGridEditor", DomainRoleReferencesCustomPropertyGridEditor.PropertyGridEditorDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasModelContexts), "MetaModel", MetaModelHasModelContexts.MetaModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasModelContexts), "BaseModelContext", MetaModelHasModelContexts.BaseModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewHasViewContexts), "View", ViewHasViewContexts.ViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewHasViewContexts), "BaseViewContext", ViewHasViewContexts.BaseViewContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(ExternViewContextReferencesExternModelContext), "ExternViewContext", ExternViewContextReferencesExternModelContext.ExternViewContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(ExternViewContextReferencesExternModelContext), "ExternModelContext", ExternViewContextReferencesExternModelContext.ExternModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(LibraryModelContextHasSerializationModel), "LibraryModelContext", LibraryModelContextHasSerializationModel.LibraryModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(LibraryModelContextHasSerializationModel), "SerializationModel", LibraryModelContextHasSerializationModel.SerializationModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasPropertyGridEditors), "MetaModel", MetaModelHasPropertyGridEditors.MetaModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(MetaModelHasPropertyGridEditors), "PropertyGridEditor", MetaModelHasPropertyGridEditors.PropertyGridEditorDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewHasModelTree), "View", ViewHasModelTree.ViewDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewHasModelTree), "ModelTree", ViewHasModelTree.ModelTreeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ExternModelContextReferencesModelContext), "ExternModelContext", ExternModelContextReferencesModelContext.ExternModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(ExternModelContextReferencesModelContext), "ModelContext", ExternModelContextReferencesModelContext.ModelContextDomainRoleId),
				new DomainRolePlayerInfo(typeof(DesignerDiagramClassReferencesImportedDiagramClasses), "DesignerDiagramClass", DesignerDiagramClassReferencesImportedDiagramClasses.DesignerDiagramClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(DesignerDiagramClassReferencesImportedDiagramClasses), "DiagramClass", DesignerDiagramClassReferencesImportedDiagramClasses.DiagramClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeClassReferencesBaseShape), "DerivedShape", ShapeClassReferencesBaseShape.DerivedShapeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ShapeClassReferencesBaseShape), "BaseShape", ShapeClassReferencesBaseShape.BaseShapeDomainRoleId),
				new DomainRolePlayerInfo(typeof(DesignerDiagramClassReferencesIncludedDiagramClasses), "DesignerDiagramClass", DesignerDiagramClassReferencesIncludedDiagramClasses.DesignerDiagramClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(DesignerDiagramClassReferencesIncludedDiagramClasses), "DiagramClass", DesignerDiagramClassReferencesIncludedDiagramClasses.DiagramClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SpecificDependencyDiagramReferencesDomainClass), "SpecificDependencyDiagram", SpecificDependencyDiagramReferencesDomainClass.SpecificDependencyDiagramDomainRoleId),
				new DomainRolePlayerInfo(typeof(SpecificDependencyDiagramReferencesDomainClass), "DomainClass", SpecificDependencyDiagramReferencesDomainClass.DomainClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(ModalDiagramReferencesDomainClass), "ModalDiagram", ModalDiagramReferencesDomainClass.ModalDiagramDomainRoleId),
				new DomainRolePlayerInfo(typeof(ModalDiagramReferencesDomainClass), "DomainClass", ModalDiagramReferencesDomainClass.DomainClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(SpecificElementsDiagramReferencesDomainClasses), "SpecificElementsDiagram", SpecificElementsDiagramReferencesDomainClasses.SpecificElementsDiagramDomainRoleId),
				new DomainRolePlayerInfo(typeof(SpecificElementsDiagramReferencesDomainClasses), "DomainClass", SpecificElementsDiagramReferencesDomainClasses.DomainClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(RelationshipShapeClassReferencesReferenceRelationship), "RelationshipShapeClass", RelationshipShapeClassReferencesReferenceRelationship.RelationshipShapeClassDomainRoleId),
				new DomainRolePlayerInfo(typeof(RelationshipShapeClassReferencesReferenceRelationship), "DomainRelationship", RelationshipShapeClassReferencesReferenceRelationship.DomainRelationshipDomainRoleId),
			};
		}
		#endregion
		#region Factory methods
		private static global::System.Collections.Generic.Dictionary<global::System.Type, int> createElementMap;
	
		/// <summary>
		/// Creates an element of specified type.
		/// </summary>
		/// <param name="partition">Partition where element is to be created.</param>
		/// <param name="elementType">Element type which belongs to this domain model.</param>
		/// <param name="propertyAssignments">New element property assignments.</param>
		/// <returns>Created element.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		public sealed override DslModeling::ModelElement CreateElement(DslModeling::Partition partition, global::System.Type elementType, DslModeling::PropertyAssignment[] propertyAssignments)
		{
			if (elementType == null) throw new global::System.ArgumentNullException("elementType");
	
			if (createElementMap == null)
			{
				createElementMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(79);
				createElementMap.Add(typeof(MetaModel), 0);
				createElementMap.Add(typeof(DomainProperty), 1);
				createElementMap.Add(typeof(DomainClass), 2);
				createElementMap.Add(typeof(DomainRole), 3);
				createElementMap.Add(typeof(EmbeddingRelationship), 4);
				createElementMap.Add(typeof(ReferenceRelationship), 5);
				createElementMap.Add(typeof(DomainModelTreeView), 6);
				createElementMap.Add(typeof(RootNode), 7);
				createElementMap.Add(typeof(EmbeddingRSNode), 8);
				createElementMap.Add(typeof(EmbeddingNode), 9);
				createElementMap.Add(typeof(InheritanceNode), 10);
				createElementMap.Add(typeof(ReferenceRSNode), 11);
				createElementMap.Add(typeof(ReferenceNode), 12);
				createElementMap.Add(typeof(ShapeClassNode), 13);
				createElementMap.Add(typeof(ShapeRelationshipNode), 14);
				createElementMap.Add(typeof(ExternalType), 15);
				createElementMap.Add(typeof(DomainEnumeration), 16);
				createElementMap.Add(typeof(EnumerationLiteral), 17);
				createElementMap.Add(typeof(DiagramClass), 18);
				createElementMap.Add(typeof(DiagramClassView), 19);
				createElementMap.Add(typeof(ShapeClass), 20);
				createElementMap.Add(typeof(RelationshipShapeClass), 21);
				createElementMap.Add(typeof(RootDiagramNode), 22);
				createElementMap.Add(typeof(EmbeddingDiagramNode), 23);
				createElementMap.Add(typeof(SerializationModel), 24);
				createElementMap.Add(typeof(SerializedDomainModel), 25);
				createElementMap.Add(typeof(SerializedDomainClass), 26);
				createElementMap.Add(typeof(SerializedEmbeddingRelationship), 27);
				createElementMap.Add(typeof(SerializedReferenceRelationship), 28);
				createElementMap.Add(typeof(SerializedDomainProperty), 29);
				createElementMap.Add(typeof(SerializedIdProperty), 30);
				createElementMap.Add(typeof(SerializedDomainRole), 31);
				createElementMap.Add(typeof(Validation), 32);
				createElementMap.Add(typeof(MappingRelationshipShapeClass), 33);
				createElementMap.Add(typeof(DiagramView), 34);
				createElementMap.Add(typeof(DesignerDiagramClass), 35);
				createElementMap.Add(typeof(Credits), 36);
				createElementMap.Add(typeof(CreditItem), 37);
				createElementMap.Add(typeof(AdditionalInformation), 38);
				createElementMap.Add(typeof(FurtherInformation), 39);
				createElementMap.Add(typeof(InformationItem), 40);
				createElementMap.Add(typeof(MetaModelLibrary), 41);
				createElementMap.Add(typeof(ViewContext), 42);
				createElementMap.Add(typeof(LibraryModelContext), 43);
				createElementMap.Add(typeof(View), 44);
				createElementMap.Add(typeof(PropertyGridEditor), 45);
				createElementMap.Add(typeof(ExternModelContext), 46);
				createElementMap.Add(typeof(ExternViewContext), 47);
				createElementMap.Add(typeof(ModelContext), 48);
				createElementMap.Add(typeof(ModelTree), 49);
				createElementMap.Add(typeof(TemplatedDiagramClass), 50);
				createElementMap.Add(typeof(DependencyDiagram), 51);
				createElementMap.Add(typeof(SpecificDependencyDiagram), 52);
				createElementMap.Add(typeof(ModalDiagram), 53);
				createElementMap.Add(typeof(SpecificElementsDiagram), 54);
				createElementMap.Add(typeof(DesignerSurfaceDiagram), 55);
			}
			int index;
			if (!createElementMap.TryGetValue(elementType, out index))
			{
				// construct exception error message		
				string exceptionError = string.Format(
								global::System.Globalization.CultureInfo.CurrentCulture,
								global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel.SingletonResourceManager.GetString("UnrecognizedElementType"),
								elementType.Name);
				throw new global::System.ArgumentException(exceptionError, "elementType");
			}
			switch (index)
			{
				case 0: return new MetaModel(partition, propertyAssignments);
				case 1: return new DomainProperty(partition, propertyAssignments);
				case 2: return new DomainClass(partition, propertyAssignments);
				case 3: return new DomainRole(partition, propertyAssignments);
				case 4: return new EmbeddingRelationship(partition, propertyAssignments);
				case 5: return new ReferenceRelationship(partition, propertyAssignments);
				case 6: return new DomainModelTreeView(partition, propertyAssignments);
				case 7: return new RootNode(partition, propertyAssignments);
				case 8: return new EmbeddingRSNode(partition, propertyAssignments);
				case 9: return new EmbeddingNode(partition, propertyAssignments);
				case 10: return new InheritanceNode(partition, propertyAssignments);
				case 11: return new ReferenceRSNode(partition, propertyAssignments);
				case 12: return new ReferenceNode(partition, propertyAssignments);
				case 13: return new ShapeClassNode(partition, propertyAssignments);
				case 14: return new ShapeRelationshipNode(partition, propertyAssignments);
				case 15: return new ExternalType(partition, propertyAssignments);
				case 16: return new DomainEnumeration(partition, propertyAssignments);
				case 17: return new EnumerationLiteral(partition, propertyAssignments);
				case 18: return new DiagramClass(partition, propertyAssignments);
				case 19: return new DiagramClassView(partition, propertyAssignments);
				case 20: return new ShapeClass(partition, propertyAssignments);
				case 21: return new RelationshipShapeClass(partition, propertyAssignments);
				case 22: return new RootDiagramNode(partition, propertyAssignments);
				case 23: return new EmbeddingDiagramNode(partition, propertyAssignments);
				case 24: return new SerializationModel(partition, propertyAssignments);
				case 25: return new SerializedDomainModel(partition, propertyAssignments);
				case 26: return new SerializedDomainClass(partition, propertyAssignments);
				case 27: return new SerializedEmbeddingRelationship(partition, propertyAssignments);
				case 28: return new SerializedReferenceRelationship(partition, propertyAssignments);
				case 29: return new SerializedDomainProperty(partition, propertyAssignments);
				case 30: return new SerializedIdProperty(partition, propertyAssignments);
				case 31: return new SerializedDomainRole(partition, propertyAssignments);
				case 32: return new Validation(partition, propertyAssignments);
				case 33: return new MappingRelationshipShapeClass(partition, propertyAssignments);
				case 34: return new DiagramView(partition, propertyAssignments);
				case 35: return new DesignerDiagramClass(partition, propertyAssignments);
				case 36: return new Credits(partition, propertyAssignments);
				case 37: return new CreditItem(partition, propertyAssignments);
				case 38: return new AdditionalInformation(partition, propertyAssignments);
				case 39: return new FurtherInformation(partition, propertyAssignments);
				case 40: return new InformationItem(partition, propertyAssignments);
				case 41: return new MetaModelLibrary(partition, propertyAssignments);
				case 42: return new ViewContext(partition, propertyAssignments);
				case 43: return new LibraryModelContext(partition, propertyAssignments);
				case 44: return new View(partition, propertyAssignments);
				case 45: return new PropertyGridEditor(partition, propertyAssignments);
				case 46: return new ExternModelContext(partition, propertyAssignments);
				case 47: return new ExternViewContext(partition, propertyAssignments);
				case 48: return new ModelContext(partition, propertyAssignments);
				case 49: return new ModelTree(partition, propertyAssignments);
				case 50: return new TemplatedDiagramClass(partition, propertyAssignments);
				case 51: return new DependencyDiagram(partition, propertyAssignments);
				case 52: return new SpecificDependencyDiagram(partition, propertyAssignments);
				case 53: return new ModalDiagram(partition, propertyAssignments);
				case 54: return new SpecificElementsDiagram(partition, propertyAssignments);
				case 55: return new DesignerSurfaceDiagram(partition, propertyAssignments);
				default: return null;
			}
		}
	
		private static global::System.Collections.Generic.Dictionary<global::System.Type, int> createElementLinkMap;
	
		/// <summary>
		/// Creates an element link of specified type.
		/// </summary>
		/// <param name="partition">Partition where element is to be created.</param>
		/// <param name="elementLinkType">Element link type which belongs to this domain model.</param>
		/// <param name="roleAssignments">List of relationship role assignments for the new link.</param>
		/// <param name="propertyAssignments">New element property assignments.</param>
		/// <returns>Created element link.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		public sealed override DslModeling::ElementLink CreateElementLink(DslModeling::Partition partition, global::System.Type elementLinkType, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
		{
			if (elementLinkType == null) throw new global::System.ArgumentNullException("elementLinkType");
			if (roleAssignments == null) throw new global::System.ArgumentNullException("roleAssignments");
	
			if (createElementLinkMap == null)
			{
				createElementLinkMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(79);
				createElementLinkMap.Add(typeof(AttributedDomainElementHasProperties), 0);
				createElementLinkMap.Add(typeof(DomainRelationshipHasRoles), 1);
				createElementLinkMap.Add(typeof(DomainRelationshipReferencesSource), 2);
				createElementLinkMap.Add(typeof(DomainRelationshipReferencesTarget), 3);
				createElementLinkMap.Add(typeof(ReferenceRSNodeReferencesReferenceRelationship), 4);
				createElementLinkMap.Add(typeof(MetaModelHasDomainTypes), 5);
				createElementLinkMap.Add(typeof(DomainEnumerationHasLiterals), 6);
				createElementLinkMap.Add(typeof(DomainPropertyReferencesType), 7);
				createElementLinkMap.Add(typeof(DiagramClassViewReferencesDiagramClass), 8);
				createElementLinkMap.Add(typeof(DiagramClassHasPresentationElements), 9);
				createElementLinkMap.Add(typeof(DomainClassReferencesBaseClass), 10);
				createElementLinkMap.Add(typeof(DomainRelationshipReferencesBaseRelationship), 11);
				createElementLinkMap.Add(typeof(DomainRoleReferencesOpposite), 12);
				createElementLinkMap.Add(typeof(EmbeddingRSNodeReferencesRelationship), 13);
				createElementLinkMap.Add(typeof(DomainRoleReferencesRolePlayer), 14);
				createElementLinkMap.Add(typeof(TreeNodeReferencesDomainElement), 15);
				createElementLinkMap.Add(typeof(ShapeClassReferencesChildren), 16);
				createElementLinkMap.Add(typeof(DiagramClassViewHasRootDiagramNodes), 17);
				createElementLinkMap.Add(typeof(SerializationClassReferencesChildren), 18);
				createElementLinkMap.Add(typeof(SerializedDomainRoleReferencesDomainRole), 19);
				createElementLinkMap.Add(typeof(SerializationClassReferencesAttributes), 20);
				createElementLinkMap.Add(typeof(MetaModelHasValidation), 21);
				createElementLinkMap.Add(typeof(DomainModelTreeViewReferencesRootNodes), 22);
				createElementLinkMap.Add(typeof(TreeNodeReferencesEmbeddingRSNodes), 23);
				createElementLinkMap.Add(typeof(EmbeddingRSNodeReferencesEmbeddingNode), 24);
				createElementLinkMap.Add(typeof(TreeNodeReferencesInheritanceNodes), 25);
				createElementLinkMap.Add(typeof(TreeNodeReferencesReferenceRSNodes), 26);
				createElementLinkMap.Add(typeof(ReferenceRSNodeReferencesReferenceNode), 27);
				createElementLinkMap.Add(typeof(TreeNodeReferencesShapeClassNodes), 28);
				createElementLinkMap.Add(typeof(DiagramViewHasDiagramClassViews), 29);
				createElementLinkMap.Add(typeof(DiagramTreeNodeReferencesPresentationElementClass), 30);
				createElementLinkMap.Add(typeof(EmbeddingDiagramNodeHasEmbeddingDiagramNodes), 31);
				createElementLinkMap.Add(typeof(MappingRelationshipShapeClassReferencesSource), 32);
				createElementLinkMap.Add(typeof(MappingRelationshipShapeClassReferencesTarget), 33);
				createElementLinkMap.Add(typeof(ShapeRelationshipNodeReferencesRelationshipShapeClass), 34);
				createElementLinkMap.Add(typeof(DomainModelTreeViewHasModelTreeNodes), 35);
				createElementLinkMap.Add(typeof(ReferenceRSNodeReferencesShapeRelationshipNodes), 36);
				createElementLinkMap.Add(typeof(ShapeClassReferencesDomainClass), 37);
				createElementLinkMap.Add(typeof(ShapeClassNodeReferencesShapeClass), 38);
				createElementLinkMap.Add(typeof(SerializationModelHasSerializedDomainModel), 39);
				createElementLinkMap.Add(typeof(SerializationClassHasIdProperty), 40);
				createElementLinkMap.Add(typeof(SerializedRelationshipHasSerializedDomainRoles), 41);
				createElementLinkMap.Add(typeof(SerializedDomainClassReferencesDomainClass), 42);
				createElementLinkMap.Add(typeof(SerializedEmbeddingRelationshipReferencesEmbeddingRelationship), 43);
				createElementLinkMap.Add(typeof(SerializedReferenceRelationshipReferencesReferenceRelationship), 44);
				createElementLinkMap.Add(typeof(SerializedDomainPropertyReferencesDomainProperty), 45);
				createElementLinkMap.Add(typeof(SerializedDomainRoleReferencesSerializationClass), 46);
				createElementLinkMap.Add(typeof(SerializationModelHasChildren), 47);
				createElementLinkMap.Add(typeof(SerializationClassHasProperties), 48);
				createElementLinkMap.Add(typeof(CreditsHasCreditItems), 49);
				createElementLinkMap.Add(typeof(MetaModelHasAdditionalInformation), 50);
				createElementLinkMap.Add(typeof(AdditionalInformationHasCredits), 51);
				createElementLinkMap.Add(typeof(AdditionalInformationHasFurtherInformation), 52);
				createElementLinkMap.Add(typeof(FurtherInformationHasInformationItems), 53);
				createElementLinkMap.Add(typeof(MetaModelHasMetaModelLibraries), 54);
				createElementLinkMap.Add(typeof(MetaModelLibraryHasImportedLibrary), 55);
				createElementLinkMap.Add(typeof(ViewContextHasDomainModelTreeView), 56);
				createElementLinkMap.Add(typeof(ViewContextHasDiagramView), 57);
				createElementLinkMap.Add(typeof(LibraryModelContextHasClasses), 58);
				createElementLinkMap.Add(typeof(LibraryModelContextHasDiagramClasses), 59);
				createElementLinkMap.Add(typeof(LibraryModelContextHasRelationships), 60);
				createElementLinkMap.Add(typeof(ViewContextReferencesModelContext), 61);
				createElementLinkMap.Add(typeof(MetaModelHasView), 62);
				createElementLinkMap.Add(typeof(DomainTypeReferencesPropertyGridEditor), 63);
				createElementLinkMap.Add(typeof(DomainRoleReferencesCustomPropertyGridEditor), 64);
				createElementLinkMap.Add(typeof(MetaModelHasModelContexts), 65);
				createElementLinkMap.Add(typeof(ViewHasViewContexts), 66);
				createElementLinkMap.Add(typeof(ExternViewContextReferencesExternModelContext), 67);
				createElementLinkMap.Add(typeof(LibraryModelContextHasSerializationModel), 68);
				createElementLinkMap.Add(typeof(MetaModelHasPropertyGridEditors), 69);
				createElementLinkMap.Add(typeof(ViewHasModelTree), 70);
				createElementLinkMap.Add(typeof(ExternModelContextReferencesModelContext), 71);
				createElementLinkMap.Add(typeof(DesignerDiagramClassReferencesImportedDiagramClasses), 72);
				createElementLinkMap.Add(typeof(ShapeClassReferencesBaseShape), 73);
				createElementLinkMap.Add(typeof(DesignerDiagramClassReferencesIncludedDiagramClasses), 74);
				createElementLinkMap.Add(typeof(SpecificDependencyDiagramReferencesDomainClass), 75);
				createElementLinkMap.Add(typeof(ModalDiagramReferencesDomainClass), 76);
				createElementLinkMap.Add(typeof(SpecificElementsDiagramReferencesDomainClasses), 77);
				createElementLinkMap.Add(typeof(RelationshipShapeClassReferencesReferenceRelationship), 78);
			}
			int index;
			if (!createElementLinkMap.TryGetValue(elementLinkType, out index))
			{
				// construct exception error message
				string exceptionError = string.Format(
								global::System.Globalization.CultureInfo.CurrentCulture,
								global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel.SingletonResourceManager.GetString("UnrecognizedElementLinkType"),
								elementLinkType.Name);
				throw new global::System.ArgumentException(exceptionError, "elementLinkType");
			
			}
			switch (index)
			{
				case 0: return new AttributedDomainElementHasProperties(partition, roleAssignments, propertyAssignments);
				case 1: return new DomainRelationshipHasRoles(partition, roleAssignments, propertyAssignments);
				case 2: return new DomainRelationshipReferencesSource(partition, roleAssignments, propertyAssignments);
				case 3: return new DomainRelationshipReferencesTarget(partition, roleAssignments, propertyAssignments);
				case 4: return new ReferenceRSNodeReferencesReferenceRelationship(partition, roleAssignments, propertyAssignments);
				case 5: return new MetaModelHasDomainTypes(partition, roleAssignments, propertyAssignments);
				case 6: return new DomainEnumerationHasLiterals(partition, roleAssignments, propertyAssignments);
				case 7: return new DomainPropertyReferencesType(partition, roleAssignments, propertyAssignments);
				case 8: return new DiagramClassViewReferencesDiagramClass(partition, roleAssignments, propertyAssignments);
				case 9: return new DiagramClassHasPresentationElements(partition, roleAssignments, propertyAssignments);
				case 10: return new DomainClassReferencesBaseClass(partition, roleAssignments, propertyAssignments);
				case 11: return new DomainRelationshipReferencesBaseRelationship(partition, roleAssignments, propertyAssignments);
				case 12: return new DomainRoleReferencesOpposite(partition, roleAssignments, propertyAssignments);
				case 13: return new EmbeddingRSNodeReferencesRelationship(partition, roleAssignments, propertyAssignments);
				case 14: return new DomainRoleReferencesRolePlayer(partition, roleAssignments, propertyAssignments);
				case 15: return new TreeNodeReferencesDomainElement(partition, roleAssignments, propertyAssignments);
				case 16: return new ShapeClassReferencesChildren(partition, roleAssignments, propertyAssignments);
				case 17: return new DiagramClassViewHasRootDiagramNodes(partition, roleAssignments, propertyAssignments);
				case 18: return new SerializationClassReferencesChildren(partition, roleAssignments, propertyAssignments);
				case 19: return new SerializedDomainRoleReferencesDomainRole(partition, roleAssignments, propertyAssignments);
				case 20: return new SerializationClassReferencesAttributes(partition, roleAssignments, propertyAssignments);
				case 21: return new MetaModelHasValidation(partition, roleAssignments, propertyAssignments);
				case 22: return new DomainModelTreeViewReferencesRootNodes(partition, roleAssignments, propertyAssignments);
				case 23: return new TreeNodeReferencesEmbeddingRSNodes(partition, roleAssignments, propertyAssignments);
				case 24: return new EmbeddingRSNodeReferencesEmbeddingNode(partition, roleAssignments, propertyAssignments);
				case 25: return new TreeNodeReferencesInheritanceNodes(partition, roleAssignments, propertyAssignments);
				case 26: return new TreeNodeReferencesReferenceRSNodes(partition, roleAssignments, propertyAssignments);
				case 27: return new ReferenceRSNodeReferencesReferenceNode(partition, roleAssignments, propertyAssignments);
				case 28: return new TreeNodeReferencesShapeClassNodes(partition, roleAssignments, propertyAssignments);
				case 29: return new DiagramViewHasDiagramClassViews(partition, roleAssignments, propertyAssignments);
				case 30: return new DiagramTreeNodeReferencesPresentationElementClass(partition, roleAssignments, propertyAssignments);
				case 31: return new EmbeddingDiagramNodeHasEmbeddingDiagramNodes(partition, roleAssignments, propertyAssignments);
				case 32: return new MappingRelationshipShapeClassReferencesSource(partition, roleAssignments, propertyAssignments);
				case 33: return new MappingRelationshipShapeClassReferencesTarget(partition, roleAssignments, propertyAssignments);
				case 34: return new ShapeRelationshipNodeReferencesRelationshipShapeClass(partition, roleAssignments, propertyAssignments);
				case 35: return new DomainModelTreeViewHasModelTreeNodes(partition, roleAssignments, propertyAssignments);
				case 36: return new ReferenceRSNodeReferencesShapeRelationshipNodes(partition, roleAssignments, propertyAssignments);
				case 37: return new ShapeClassReferencesDomainClass(partition, roleAssignments, propertyAssignments);
				case 38: return new ShapeClassNodeReferencesShapeClass(partition, roleAssignments, propertyAssignments);
				case 39: return new SerializationModelHasSerializedDomainModel(partition, roleAssignments, propertyAssignments);
				case 40: return new SerializationClassHasIdProperty(partition, roleAssignments, propertyAssignments);
				case 41: return new SerializedRelationshipHasSerializedDomainRoles(partition, roleAssignments, propertyAssignments);
				case 42: return new SerializedDomainClassReferencesDomainClass(partition, roleAssignments, propertyAssignments);
				case 43: return new SerializedEmbeddingRelationshipReferencesEmbeddingRelationship(partition, roleAssignments, propertyAssignments);
				case 44: return new SerializedReferenceRelationshipReferencesReferenceRelationship(partition, roleAssignments, propertyAssignments);
				case 45: return new SerializedDomainPropertyReferencesDomainProperty(partition, roleAssignments, propertyAssignments);
				case 46: return new SerializedDomainRoleReferencesSerializationClass(partition, roleAssignments, propertyAssignments);
				case 47: return new SerializationModelHasChildren(partition, roleAssignments, propertyAssignments);
				case 48: return new SerializationClassHasProperties(partition, roleAssignments, propertyAssignments);
				case 49: return new CreditsHasCreditItems(partition, roleAssignments, propertyAssignments);
				case 50: return new MetaModelHasAdditionalInformation(partition, roleAssignments, propertyAssignments);
				case 51: return new AdditionalInformationHasCredits(partition, roleAssignments, propertyAssignments);
				case 52: return new AdditionalInformationHasFurtherInformation(partition, roleAssignments, propertyAssignments);
				case 53: return new FurtherInformationHasInformationItems(partition, roleAssignments, propertyAssignments);
				case 54: return new MetaModelHasMetaModelLibraries(partition, roleAssignments, propertyAssignments);
				case 55: return new MetaModelLibraryHasImportedLibrary(partition, roleAssignments, propertyAssignments);
				case 56: return new ViewContextHasDomainModelTreeView(partition, roleAssignments, propertyAssignments);
				case 57: return new ViewContextHasDiagramView(partition, roleAssignments, propertyAssignments);
				case 58: return new LibraryModelContextHasClasses(partition, roleAssignments, propertyAssignments);
				case 59: return new LibraryModelContextHasDiagramClasses(partition, roleAssignments, propertyAssignments);
				case 60: return new LibraryModelContextHasRelationships(partition, roleAssignments, propertyAssignments);
				case 61: return new ViewContextReferencesModelContext(partition, roleAssignments, propertyAssignments);
				case 62: return new MetaModelHasView(partition, roleAssignments, propertyAssignments);
				case 63: return new DomainTypeReferencesPropertyGridEditor(partition, roleAssignments, propertyAssignments);
				case 64: return new DomainRoleReferencesCustomPropertyGridEditor(partition, roleAssignments, propertyAssignments);
				case 65: return new MetaModelHasModelContexts(partition, roleAssignments, propertyAssignments);
				case 66: return new ViewHasViewContexts(partition, roleAssignments, propertyAssignments);
				case 67: return new ExternViewContextReferencesExternModelContext(partition, roleAssignments, propertyAssignments);
				case 68: return new LibraryModelContextHasSerializationModel(partition, roleAssignments, propertyAssignments);
				case 69: return new MetaModelHasPropertyGridEditors(partition, roleAssignments, propertyAssignments);
				case 70: return new ViewHasModelTree(partition, roleAssignments, propertyAssignments);
				case 71: return new ExternModelContextReferencesModelContext(partition, roleAssignments, propertyAssignments);
				case 72: return new DesignerDiagramClassReferencesImportedDiagramClasses(partition, roleAssignments, propertyAssignments);
				case 73: return new ShapeClassReferencesBaseShape(partition, roleAssignments, propertyAssignments);
				case 74: return new DesignerDiagramClassReferencesIncludedDiagramClasses(partition, roleAssignments, propertyAssignments);
				case 75: return new SpecificDependencyDiagramReferencesDomainClass(partition, roleAssignments, propertyAssignments);
				case 76: return new ModalDiagramReferencesDomainClass(partition, roleAssignments, propertyAssignments);
				case 77: return new SpecificElementsDiagramReferencesDomainClasses(partition, roleAssignments, propertyAssignments);
				case 78: return new RelationshipShapeClassReferencesReferenceRelationship(partition, roleAssignments, propertyAssignments);
				default: return null;
			}
		}
		#endregion
		#region Resource manager
		
		private static global::System.Resources.ResourceManager resourceManager;
		
		/// <summary>
		/// The base name of this model's resources.
		/// </summary>
		public const string ResourceBaseName = "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx";
		
		/// <summary>
		/// Gets the DomainModel's ResourceManager. If the ResourceManager does not already exist, then it is created.
		/// </summary>
		public override global::System.Resources.ResourceManager ResourceManager
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return LanguageDSLDomainModel.SingletonResourceManager;
			}
		}
	
		/// <summary>
		/// Gets the Singleton ResourceManager for this domain model.
		/// </summary>
		public static global::System.Resources.ResourceManager SingletonResourceManager
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				if (LanguageDSLDomainModel.resourceManager == null)
				{
					LanguageDSLDomainModel.resourceManager = new global::System.Resources.ResourceManager(ResourceBaseName, typeof(LanguageDSLDomainModel).Assembly);
				}
				return LanguageDSLDomainModel.resourceManager;
			}
		}
		#endregion
		#region Copy/Remove closures
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter copyClosure;
		/// <summary>
		/// DeleteClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter removeClosure;
		/// <summary>
		/// Returns an IElementVisitorFilter that corresponds to the ClosureType.
		/// </summary>
		/// <param name="type">closure type</param>
		/// <param name="rootElements">collection of root elements</param>
		/// <returns>IElementVisitorFilter or null</returns>
		public override DslModeling::IElementVisitorFilter GetClosureFilter(DslModeling::ClosureType type, global::System.Collections.Generic.ICollection<DslModeling::ModelElement> rootElements)
		{
			switch (type)
			{
				case DslModeling::ClosureType.CopyClosure:
					return LanguageDSLDomainModel.CopyClosure;
				case DslModeling::ClosureType.DeleteClosure:
					return LanguageDSLDomainModel.DeleteClosure;
			}
			return base.GetClosureFilter(type, rootElements);
		}
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter CopyClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (LanguageDSLDomainModel.copyClosure == null)
				{
					DslModeling::ChainingElementVisitorFilter copyFilter = new DslModeling::ChainingElementVisitorFilter();
					copyFilter.AddFilter(new LanguageDSLCopyClosure());
					copyFilter.AddFilter(new DslModeling::CoreCopyClosure());
					
					LanguageDSLDomainModel.copyClosure = copyFilter;
				}
				return LanguageDSLDomainModel.copyClosure;
			}
		}
		/// <summary>
		/// DeleteClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter DeleteClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (LanguageDSLDomainModel.removeClosure == null)
				{
					DslModeling::ChainingElementVisitorFilter removeFilter = new DslModeling::ChainingElementVisitorFilter();
					removeFilter.AddFilter(new LanguageDSLDeleteClosure());
					removeFilter.AddFilter(new DslModeling::CoreDeleteClosure());
		
					LanguageDSLDomainModel.removeClosure = removeFilter;
				}
				return LanguageDSLDomainModel.removeClosure;
			}
		}
		#endregion
	}
		
	#region Copy/Remove closure classes
	/// <summary>
	/// Remove closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class LanguageDSLDeleteClosure : LanguageDSLDeleteClosureBase, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public LanguageDSLDeleteClosure() : base()
		{
		}
	}
	
	/// <summary>
	/// Base class for remove closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class LanguageDSLDeleteClosureBase : DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// DomainRoles
		/// </summary>
		private global::System.Collections.Specialized.HybridDictionary domainRoles;
		/// <summary>
		/// Constructor
		/// </summary>
		public LanguageDSLDeleteClosureBase()
		{
			#region Initialize DomainData Table
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.AttributedDomainElementHasProperties.DomainPropertyDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.DomainRelationshipHasRoles.RoleDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.MetaModelHasDomainTypes.DomainTypeDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.DomainEnumerationHasLiterals.EnumerationLiteralDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.DiagramClassHasPresentationElements.PresentationElementClassDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.DiagramClassViewHasRootDiagramNodes.RootDiagramNodeDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.MetaModelHasValidation.ValidationDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.DiagramViewHasDiagramClassViews.DiagramClassViewDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.EmbeddingDiagramNodeHasEmbeddingDiagramNodes.TargetEmbeddingDiagramNodeDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.DomainModelTreeViewHasModelTreeNodes.ModelTreeNodeDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.SerializationModelHasSerializedDomainModel.SerializedDomainModelDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.SerializationClassHasIdProperty.SerializedIdPropertyDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.SerializedRelationshipHasSerializedDomainRoles.SerializedDomainRoleDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.SerializationModelHasChildren.SerializationClassDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.SerializationClassHasProperties.SerializedDomainPropertyDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.CreditsHasCreditItems.CreditItemDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.MetaModelHasAdditionalInformation.AdditionalInformationDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.AdditionalInformationHasCredits.CreditsDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.AdditionalInformationHasFurtherInformation.FurtherInformationDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.FurtherInformationHasInformationItems.InformationItemDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.MetaModelHasMetaModelLibraries.MetaModelLibraryDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.MetaModelLibraryHasImportedLibrary.BaseMetaModelDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.ViewContextHasDomainModelTreeView.DomainModelTreeViewDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.ViewContextHasDiagramView.DiagramViewDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.LibraryModelContextHasClasses.DomainClassDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.LibraryModelContextHasDiagramClasses.DiagramClassDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.LibraryModelContextHasRelationships.DomainRelationshipDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.MetaModelHasView.ViewDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.MetaModelHasModelContexts.BaseModelContextDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.ViewHasViewContexts.BaseViewContextDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.LibraryModelContextHasSerializationModel.SerializationModelDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.MetaModelHasPropertyGridEditors.PropertyGridEditorDomainRoleId, true);
			DomainRoles.Add(global::Tum.PDE.LanguageDSL.ViewHasModelTree.ModelTreeDomainRoleId, true);
			#endregion
		}
		/// <summary>
		/// Called to ask the filter if a particular relationship from a source element should be included in the traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="sourceRoleInfo">DomainRoleInfo of the role that the source element is playing in the relationship</param>
		/// <param name="domainRelationshipInfo">DomainRelationshipInfo for the ElementLink in question</param>
		/// <param name="targetRelationship">Relationship in question</param>
		/// <returns>Yes if the relationship should be traversed</returns>
		public virtual DslModeling::VisitorFilterResult ShouldVisitRelationship(DslModeling::ElementWalker walker, DslModeling::ModelElement sourceElement, DslModeling::DomainRoleInfo sourceRoleInfo, DslModeling::DomainRelationshipInfo domainRelationshipInfo, DslModeling::ElementLink targetRelationship)
		{
			return DslModeling::VisitorFilterResult.Yes;
		}
		/// <summary>
		/// Called to ask the filter if a particular role player should be Visited during traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
		/// <param name="targetDomainRole">DomainRoleInfo of the target role</param>
		/// <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
		/// <returns></returns>
		public virtual DslModeling::VisitorFilterResult ShouldVisitRolePlayer(DslModeling::ElementWalker walker, DslModeling::ModelElement sourceElement, DslModeling::ElementLink elementLink, DslModeling::DomainRoleInfo targetDomainRole, DslModeling::ModelElement targetRolePlayer)
		{
			if (targetDomainRole == null) throw new global::System.ArgumentNullException("targetDomainRole");
			return this.DomainRoles.Contains(targetDomainRole.Id) ? DslModeling::VisitorFilterResult.Yes : DslModeling::VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// DomainRoles
		/// </summary>
		private global::System.Collections.Specialized.HybridDictionary DomainRoles
		{
			get
			{
				if (this.domainRoles == null)
				{
					this.domainRoles = new global::System.Collections.Specialized.HybridDictionary();
				}
				return this.domainRoles;
			}
		}
	
	}
	/// <summary>
	/// Copy closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class LanguageDSLCopyClosure : LanguageDSLCopyClosureBase, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public LanguageDSLCopyClosure() : base()
		{
		}
	}
	/// <summary>
	/// Base class for copy closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class LanguageDSLCopyClosureBase : DslModeling::CopyClosureFilter, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public LanguageDSLCopyClosureBase():base()
		{
		}
	}
	#endregion
		
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: AccessModifier
	/// Description for Tum.PDE.LanguageDSL.AccessModifier
	/// </summary>
	[System.ComponentModel.TypeConverter(typeof(Tum.PDE.LanguageDSL.Design.AccessModifierConverter))]
	[global::System.CLSCompliant(true)]
	public enum AccessModifier
	{
		/// <summary>
		/// Public
		/// Description for Tum.PDE.LanguageDSL.AccessModifier.Public
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AccessModifier/Public.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Public,
		/// <summary>
		/// Assembly
		/// Description for Tum.PDE.LanguageDSL.AccessModifier.Assembly
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AccessModifier/Assembly.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Assembly,
		/// <summary>
		/// Private
		/// Description for Tum.PDE.LanguageDSL.AccessModifier.Private
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AccessModifier/Private.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Private,
		/// <summary>
		/// Family
		/// Description for Tum.PDE.LanguageDSL.AccessModifier.Family
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AccessModifier/Family.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Family,
		/// <summary>
		/// FamilyOrAssembly
		/// Description for Tum.PDE.LanguageDSL.AccessModifier.FamilyOrAssembly
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AccessModifier/FamilyOrAssembly.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		FamilyOrAssembly,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: TrackingEnum
	/// Description for Tum.PDE.LanguageDSL.TrackingEnum
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum TrackingEnum
	{
		/// <summary>
		/// True
		/// Description for Tum.PDE.LanguageDSL.TrackingEnum.True
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TrackingEnum/True.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		True = 0,
		/// <summary>
		/// False
		/// Description for Tum.PDE.LanguageDSL.TrackingEnum.False
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TrackingEnum/False.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		False = 1,
		/// <summary>
		/// IgnoreOnce
		/// Description for Tum.PDE.LanguageDSL.TrackingEnum.IgnoreOnce
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.TrackingEnum/IgnoreOnce.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		IgnoreOnce = 2,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: InheritanceModifier
	/// Description for Tum.PDE.LanguageDSL.InheritanceModifier
	/// </summary>
	[System.ComponentModel.TypeConverter(typeof(Tum.PDE.LanguageDSL.Design.InheritanceModifierConverter))]
	[global::System.CLSCompliant(true)]
	public enum InheritanceModifier
	{
		/// <summary>
		/// None
		/// Description for Tum.PDE.LanguageDSL.InheritanceModifier.None
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.InheritanceModifier/None.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		None,
		/// <summary>
		/// Abstract
		/// Description for Tum.PDE.LanguageDSL.InheritanceModifier.Abstract
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.InheritanceModifier/Abstract.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Abstract,
		/// <summary>
		/// Sealed
		/// Description for Tum.PDE.LanguageDSL.InheritanceModifier.Sealed
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.InheritanceModifier/Sealed.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Sealed,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: Multiplicity
	/// Description for Tum.PDE.LanguageDSL.Multiplicity
	/// </summary>
	[System.ComponentModel.TypeConverter(typeof(Tum.PDE.LanguageDSL.Design.MultiplicityConverter))]
	[global::System.CLSCompliant(true)]
	public enum Multiplicity
	{
		/// <summary>
		/// ZeroMany
		/// Description for Tum.PDE.LanguageDSL.Multiplicity.ZeroMany
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Multiplicity/ZeroMany.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		ZeroMany,
		/// <summary>
		/// One
		/// Description for Tum.PDE.LanguageDSL.Multiplicity.One
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Multiplicity/One.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		One,
		/// <summary>
		/// ZeroOne
		/// Description for Tum.PDE.LanguageDSL.Multiplicity.ZeroOne
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Multiplicity/ZeroOne.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		ZeroOne,
		/// <summary>
		/// OneMany
		/// Description for Tum.PDE.LanguageDSL.Multiplicity.OneMany
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.Multiplicity/OneMany.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		OneMany,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: SerializationRepresentationType
	/// Description for Tum.PDE.LanguageDSL.SerializationRepresentationType
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum SerializationRepresentationType
	{
		/// <summary>
		/// Attribute
		/// Description for Tum.PDE.LanguageDSL.SerializationRepresentationType.Attribute
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationRepresentationType/Attribute.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Attribute,
		/// <summary>
		/// Element
		/// Description for Tum.PDE.LanguageDSL.SerializationRepresentationType.Element
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationRepresentationType/Element.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Element,
		/// <summary>
		/// InnerValue
		/// Description for Tum.PDE.LanguageDSL.SerializationRepresentationType.InnerValue
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationRepresentationType/InnerValue.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		InnerValue,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: PropertyGeneration
	/// Description for Tum.PDE.LanguageDSL.PropertyGeneration
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum PropertyGeneration
	{
		/// <summary>
		/// Automatic
		/// Description for Tum.PDE.LanguageDSL.PropertyGeneration.Automatic
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyGeneration/Automatic.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Automatic,
		/// <summary>
		/// Manual
		/// Description for Tum.PDE.LanguageDSL.PropertyGeneration.Manual
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyGeneration/Manual.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Manual,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: SerializationStyle
	/// Description for Tum.PDE.LanguageDSL.SerializationStyle
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum SerializationStyle
	{
		/// <summary>
		/// Normal
		/// Description for Tum.PDE.LanguageDSL.SerializationStyle.Normal
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationStyle/Normal.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Normal,
		/// <summary>
		/// CDATA
		/// Description for Tum.PDE.LanguageDSL.SerializationStyle.CDATA
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationStyle/CDATA.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		CDATA,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: SerializationElementType
	/// Description for Tum.PDE.LanguageDSL.SerializationElementType
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum SerializationElementType
	{
		/// <summary>
		/// DomainModel
		/// Description for Tum.PDE.LanguageDSL.SerializationElementType.DomainModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationElementType/DomainModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		DomainModel,
		/// <summary>
		/// DomainClass
		/// Description for Tum.PDE.LanguageDSL.SerializationElementType.DomainClass
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationElementType/DomainClass.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		DomainClass,
		/// <summary>
		/// EmbeddingRelationship
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationElementType.EmbeddingRelationship
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationElementType/EmbeddingRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		EmbeddingRelationship,
		/// <summary>
		/// ReferenceRelationship
		/// Description for
		/// Tum.PDE.LanguageDSL.SerializationElementType.ReferenceRelationship
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationElementType/ReferenceRelationship.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		ReferenceRelationship,
		/// <summary>
		/// DomainProperty
		/// Description for Tum.PDE.LanguageDSL.SerializationElementType.DomainProperty
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationElementType/DomainProperty.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		DomainProperty,
		/// <summary>
		/// IdProperty
		/// Description for Tum.PDE.LanguageDSL.SerializationElementType.IdProperty
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationElementType/IdProperty.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		IdProperty,
		/// <summary>
		/// DomainRole
		/// Description for Tum.PDE.LanguageDSL.SerializationElementType.DomainRole
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SerializationElementType/DomainRole.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		DomainRole,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: RelativeChildBehaviour
	/// Description for Tum.PDE.LanguageDSL.RelativeChildBehaviour
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum RelativeChildBehaviour
	{
		/// <summary>
		/// None
		/// Description for Tum.PDE.LanguageDSL.RelativeChildBehaviour.None
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelativeChildBehaviour/None.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		None,
		/// <summary>
		/// PositionRelativeToParent
		/// Description for
		/// Tum.PDE.LanguageDSL.RelativeChildBehaviour.PositionRelativeToParent
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelativeChildBehaviour/PositionRelativeToParent.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		PositionRelativeToParent,
		/// <summary>
		/// PositionOnEdgeOfParent
		/// Port like behaviour
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.RelativeChildBehaviour/PositionOnEdgeOfParent.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		PositionOnEdgeOfParent,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: PropertyKind
	/// Description for Tum.PDE.LanguageDSL.PropertyKind
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum PropertyKind
	{
		/// <summary>
		/// Normal
		/// Description for Tum.PDE.LanguageDSL.PropertyKind.Normal
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyKind/Normal.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Normal,
		/// <summary>
		/// Calculated
		/// Description for Tum.PDE.LanguageDSL.PropertyKind.Calculated
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyKind/Calculated.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Calculated,
		/// <summary>
		/// CustomStorage
		/// Description for Tum.PDE.LanguageDSL.PropertyKind.CustomStorage
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.PropertyKind/CustomStorage.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		CustomStorage,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: EditorBaseType
	/// Description for Tum.PDE.LanguageDSL.EditorBaseType
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum EditorBaseType
	{
		/// <summary>
		/// BooleanEditorViewModel
		/// Description for Tum.PDE.LanguageDSL.EditorBaseType.BooleanEditorViewModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EditorBaseType/BooleanEditorViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		BooleanEditorViewModel,
		/// <summary>
		/// EnumerationEditorViewModel
		/// Description for Tum.PDE.LanguageDSL.EditorBaseType.EnumerationEditorViewModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EditorBaseType/EnumerationEditorViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		EnumerationEditorViewModel,
		/// <summary>
		/// LookupListEditorViewModel
		/// Description for Tum.PDE.LanguageDSL.EditorBaseType.LookupListEditorViewModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EditorBaseType/LookupListEditorViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		LookupListEditorViewModel,
		/// <summary>
		/// MultipleRoleEditorViewModel
		/// Description for Tum.PDE.LanguageDSL.EditorBaseType.MultipleRoleEditorViewModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EditorBaseType/MultipleRoleEditorViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		MultipleRoleEditorViewModel,
		/// <summary>
		/// PropertyEditorViewModel
		/// Description for Tum.PDE.LanguageDSL.EditorBaseType.PropertyEditorViewModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EditorBaseType/PropertyEditorViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		PropertyEditorViewModel,
		/// <summary>
		/// RoleEditorViewModel
		/// Description for Tum.PDE.LanguageDSL.EditorBaseType.RoleEditorViewModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EditorBaseType/RoleEditorViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		RoleEditorViewModel,
		/// <summary>
		/// StringEditorViewModel
		/// Description for Tum.PDE.LanguageDSL.EditorBaseType.StringEditorViewModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EditorBaseType/StringEditorViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		StringEditorViewModel,
		/// <summary>
		/// UnaryRoleEditorViewModel
		/// Description for Tum.PDE.LanguageDSL.EditorBaseType.UnaryRoleEditorViewModel
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.EditorBaseType/UnaryRoleEditorViewModel.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		UnaryRoleEditorViewModel,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: SortingBehavior
	/// Description for Tum.PDE.LanguageDSL.SortingBehavior
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum SortingBehavior
	{
		/// <summary>
		/// None
		/// Description for Tum.PDE.LanguageDSL.SortingBehavior.None
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SortingBehavior/None.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		None,
		/// <summary>
		/// Alphabetical
		/// Description for Tum.PDE.LanguageDSL.SortingBehavior.Alphabetical
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.SortingBehavior/Alphabetical.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Alphabetical,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: DiagramVisualizationBehavior
	/// Description for Tum.PDE.LanguageDSL.DiagramVisualizationBehavior
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum DiagramVisualizationBehavior
	{
		/// <summary>
		/// Normal
		/// Elements are deleted from the model as they are deleted from the diagram
		/// surface.
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramVisualizationBehavior/Normal.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Normal,
		/// <summary>
		/// Extended
		/// Elements are not deleted from the model as they are delted from the surface and
		/// therefore a selected visualization is possible.
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.DiagramVisualizationBehavior/Extended.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Extended,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: AnchorStyle
	/// Description for Tum.PDE.LanguageDSL.AnchorStyle
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum AnchorStyle
	{
		/// <summary>
		/// None
		/// Description for Tum.PDE.LanguageDSL.AnchorStyle.None
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AnchorStyle/None.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		None,
		/// <summary>
		/// Arrow
		/// Description for Tum.PDE.LanguageDSL.AnchorStyle.Arrow
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AnchorStyle/Arrow.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Arrow,
		/// <summary>
		/// Diamond
		/// Description for Tum.PDE.LanguageDSL.AnchorStyle.Diamond
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.AnchorStyle/Diamond.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		Diamond,
	}
}
namespace Tum.PDE.LanguageDSL
{
	/// <summary>
	/// DomainEnumeration: LanguageType
	/// Description for Tum.PDE.LanguageDSL.LanguageType
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum LanguageType
	{
		/// <summary>
		/// VMXEditor
		/// Description for Tum.PDE.LanguageDSL.LanguageType.VMXEditor
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LanguageType/VMXEditor.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		VMXEditor,
		/// <summary>
		/// VMXLibrary
		/// Description for Tum.PDE.LanguageDSL.LanguageType.VMXLibrary
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LanguageType/VMXLibrary.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		VMXLibrary,
		/// <summary>
		/// WPFEditor
		/// Description for Tum.PDE.LanguageDSL.LanguageType.WPFEditor
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LanguageType/WPFEditor.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		WPFEditor,
		/// <summary>
		/// WPFLibrary
		/// Description for Tum.PDE.LanguageDSL.LanguageType.WPFLibrary
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LanguageType/WPFLibrary.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		WPFLibrary,
		/// <summary>
		/// VSPlugin
		/// Description for Tum.PDE.LanguageDSL.LanguageType.VSPlugin
		/// </summary>
		[DslDesign::DescriptionResource("Tum.PDE.LanguageDSL.LanguageType/VSPlugin.Description", typeof(global::Tum.PDE.LanguageDSL.LanguageDSLDomainModel), "Tum.PDE.LanguageDSL.GeneratedCode.DomainModelResx")]
		VSPlugin,
	}
}

