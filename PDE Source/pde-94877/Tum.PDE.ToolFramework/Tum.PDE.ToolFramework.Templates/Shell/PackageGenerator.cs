// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tum.PDE.ToolFramework.Templates.Shell
{
    using Tum.PDE.LanguageDSL;
    using Microsoft.VisualStudio.Modeling;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System;
    
    
    #line 1 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class PackageGenerator : BaseTemplate
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public override string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write(" \r\n");
            
            #line 9 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	string dslName = this.MetaModel.Name;
	string directiveName = this.MetaModel.Name;
	string dslFullName = this.MetaModel.GetFullName(true);

            
            #line default
            #line hidden
            this.Write(@"using VSShellInterop = global::Microsoft.VisualStudio.Shell.Interop;
using VSShell = global::Microsoft.VisualStudio.Shell;
using VSTextTemplatingHost = global::Microsoft.VisualStudio.TextTemplating.VSHost;

using DslShell = global::Microsoft.VisualStudio.Modeling.Shell;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslModeling = global::Microsoft.VisualStudio.Modeling;

using DslEditorShell = global::Tum.PDE.ToolFramework.Modeling.Shell;

namespace ");
            
            #line 24 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(@"
{
	/// <summary>
	/// This class implements the VS package that integrates this DSL into Visual Studio.
	/// </summary>
	[VSShell::DefaultRegistryRoot(""Software\\Microsoft\\VisualStudio\\10.0"")]
	[VSShell::PackageRegistration(RegisterUsing = VSShell::RegistrationMethod.Assembly, UseManagedResourcesOnly = true)]
");
            
            #line 31 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	if( this.MetaModel.View.CreateModelTree )
	{

            
            #line default
            #line hidden
            this.Write("\t[VSShell::ProvideToolWindow(typeof(");
            
            #line 35 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("ModelTreeToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Tabbed" +
                    ", Orientation = VSShell::ToolWindowOrientation.Left, Window = \"{3AE79031-E1BC-11" +
                    "D0-8F78-00A0C9110057}\", Transient = true)]\r\n");
            
            #line 36 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreatePropertyGrid )
	{

            
            #line default
            #line hidden
            this.Write("\t[VSShell::ProvideToolWindow(typeof(");
            
            #line 41 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("PropertyGridToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Tab" +
                    "bed, Orientation = VSShell::ToolWindowOrientation.Right, Window = \"{EEFA5220-E29" +
                    "8-11D0-8F78-00A0C9110057}\", Transient = true)]\r\n");
            
            #line 42 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreateErrorList )
	{

            
            #line default
            #line hidden
            this.Write("\t[VSShell::ProvideToolWindow(typeof(");
            
            #line 47 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("ErrorListToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Tabbed" +
                    ", Orientation = VSShell::ToolWindowOrientation.Bottom, Window = \"{D78612C7-9962-" +
                    "4B83-95D9-268046DAD23A}\", Transient = true)]\r\n");
            
            #line 48 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreateDependenciesView )
	{

            
            #line default
            #line hidden
            this.Write("\t[VSShell::ProvideToolWindow(typeof(");
            
            #line 53 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("DependenciesToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Tab" +
                    "bed, Orientation = VSShell::ToolWindowOrientation.Bottom, Window = \"{D78612C7-99" +
                    "62-4B83-95D9-268046DAD23A}\", Transient = true)]\r\n");
            
            #line 54 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	foreach(DiagramClass diagramClass in this.MetaModel.AllDiagramClasses)
	{

            
            #line default
            #line hidden
            this.Write("\t//[VSShell::ProvideToolWindow(typeof(");
            
            #line 59 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            
            #line 59 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(diagramClass.Name));
            
            #line default
            #line hidden
            this.Write("ToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.MDI, Orientatio" +
                    "n = VSShell::ToolWindowOrientation.none, Transient = true)]\r\n");
            
            #line 60 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t//[VSShell::ProvideToolWindow(typeof(");
            
            #line 63 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("PluginsVMToolWindow), MultiInstances = true, Style = VSShell::VsDockStyle.Tabbed)" +
                    "]\r\n\t[VSShell::ProvideToolWindow(typeof(");
            
            #line 64 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("SearchToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Float)]\r\n" +
                    "\t[VSShell::ProvideToolWindow(typeof(");
            
            #line 65 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("SearchResultToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Tab" +
                    "bed, Orientation = VSShell::ToolWindowOrientation.Bottom, Window = \"{D78612C7-99" +
                    "62-4B83-95D9-268046DAD23A}\", Transient = true)]\r\n\t[VSShell::ProvideEditorFactory" +
                    "(typeof(");
            
            #line 66 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("EditorFactory), 103, TrustLevel = VSShellInterop::__VSEDITORTRUSTLEVEL.ETL_Always" +
                    "Trusted)]\r\n\t[VSShell::ProvideEditorExtension(typeof(");
            
            #line 67 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"EditorFactory), ""."" + Constants.DesignerFileExtension, 50)]
	[DslShell::ProvideRelatedFile(""."" + Constants.DesignerFileExtension, Constants.DefaultDiagramExtension,
		ProjectSystem = DslShell::ProvideRelatedFileAttribute.CSharpProjectGuid,
		FileOptions = DslShell::RelatedFileType.FileName)]
	[DslShell::ProvideRelatedFile(""."" + Constants.DesignerFileExtension, Constants.DefaultDiagramExtension,
		ProjectSystem = DslShell::ProvideRelatedFileAttribute.VisualBasicProjectGuid,
		FileOptions = DslShell::RelatedFileType.FileName)]
	[DslShell::RegisterAsDslToolsEditor]
	[global::System.Runtime.InteropServices.ComVisible(true)]
	[DslShell::ProvideBindingPath]
	[DslShell::ProvideXmlEditorChooserBlockSxSWithXmlEditor(@""");
            
            #line 77 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("\", typeof(");
            
            #line 77 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("EditorFactory))]\r\n\tinternal abstract partial class ");
            
            #line 78 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("PackageBase : DslEditorShell::ModelPackage\r\n\t{\r\n\t\t/// <summary>\r\n        /// Gets" +
                    " or sets the package controller.\r\n        /// </summary>\r\n        public ");
            
            #line 83 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("ShellPackageController PackageController\r\n        {\r\n            get;\r\n          " +
                    "  set;\r\n        }\r\n\r\n\t\t/*\r\n\t\t/// <summary>\r\n        /// Gets or sets the editor " +
                    "factory.\r\n        /// </summary>\r\n        public ");
            
            #line 93 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"EditorFactory EditorFactory
        {
            get;
            set;
        }*/

        /// <summary>
        /// Create package controller.
        /// </summary>
        protected virtual void CreatePackageController()
        {
            this.PackageController = new ");
            
            #line 104 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"ShellPackageController(this);
        }	
	
		/// <summary>
		/// Initialization method called by the package base class when this package is loaded.
		/// </summary>
		protected override void Initialize()
		{
			base.Initialize();

		    // Register the editor factory used to create the DSL editor.
            this.EditorFactory = new ");
            
            #line 115 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"EditorFactory(this);
            this.RegisterEditorFactory(this.EditorFactory);

            // Create package controller.
            this.CreatePackageController();

			// Initialize Extension Registars
			// this is a partial method call
			this.InitializeExtensions();

			// Add dynamic toolbox items
			this.SetupDynamicToolbox();
		}

		/// <summary>
		/// Partial method to initialize ExtensionRegistrars (if any) in the DslPackage
		/// </summary>
		partial void InitializeExtensions();
				
		#region Methods
        /// <summary>
        /// Gets the editor type id.
        /// </summary>
        public override System.Guid EditorTypeId
        {
            get
			{
				return new System.Guid(Constants.");
            
            #line 142 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"EditorFactoryId);
			}
        }

        /// <summary>
        /// Returns a list of guids identifying the tool windows contained in this package.
        /// </summary>
        /// <returns>List of guid of tool windows in this package.</returns>
        public override System.Collections.Generic.List<System.Guid> GetToolWindowIdList()
		{
			System.Collections.Generic.List<System.Guid> lst = new System.Collections.Generic.List<System.Guid>();
");
            
            #line 153 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	if( this.MetaModel.View.CreateModelTree )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tlst.Add(new System.Guid(\"");
            
            #line 157 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.View.ModelTreeId));
            
            #line default
            #line hidden
            this.Write("\"));\t// ModelTree\r\n");
            
            #line 158 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreatePropertyGrid )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tlst.Add(new System.Guid(\"");
            
            #line 163 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.View.PropertyGridId));
            
            #line default
            #line hidden
            this.Write("\"));\t// PropertyGrid\r\n");
            
            #line 164 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreateErrorList )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tlst.Add(new System.Guid(\"");
            
            #line 169 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.View.ErrorListId));
            
            #line default
            #line hidden
            this.Write("\"));\t// ErrorList\r\n");
            
            #line 170 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreateDependenciesView )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tlst.Add(new System.Guid(\"");
            
            #line 175 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.View.DependenciesViewId));
            
            #line default
            #line hidden
            this.Write("\"));\t// DependenciesView\r\n");
            
            #line 176 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	foreach(DiagramClass diagramClass in this.MetaModel.AllDiagramClasses)
	{
		if( !CodeGenerationUtilities.IsDiagramGenerated(diagramClass) )
			continue;

            
            #line default
            #line hidden
            this.Write("\t\t\tlst.Add(new System.Guid(\"");
            
            #line 183 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(diagramClass.Id));
            
            #line default
            #line hidden
            this.Write("\"));\t// ");
            
            #line 183 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(diagramClass.Name));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 184 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t\t\tlst.Add(new System.Guid(\"");
            
            #line 187 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.View.SearchId));
            
            #line default
            #line hidden
            this.Write("\"));\t// Search\r\n\t\t\tlst.Add(new System.Guid(\"");
            
            #line 188 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.View.SearchResultId));
            
            #line default
            #line hidden
            this.Write("\"));\t// SearchResult\t\r\n\t\t\t\r\n\t\t\t//lst.Add(new System.Guid(\"");
            
            #line 190 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.View.PluginWindowId));
            
            #line default
            #line hidden
            this.Write(@"""));	// Plugins			
			return lst;
		}

        /// <summary>
        /// Gets the tool window type for the given view model type if possible. Throws NotSupportedException otherwise.
        /// </summary>
        /// <param name=""vmType""></param>
        /// <returns></returns>
        public override System.Type GetToolWindowType(System.Type vmType)
		{
");
            
            #line 201 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	MetaModel dm = this.MetaModel;
	if( this.MetaModel.View.CreateModelTree )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tif( vmType == typeof(");
            
            #line 206 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 206 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("ModelTreeViewModel) )\r\n\t\t\t\treturn typeof(");
            
            #line 207 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("ModelTreeToolWindow);\r\n");
            
            #line 208 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreatePropertyGrid )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tif( vmType == typeof(");
            
            #line 213 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 213 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("PropertyGridViewModel) )\r\n\t\t\t\treturn typeof(");
            
            #line 214 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("PropertyGridToolWindow);\r\n");
            
            #line 215 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreateErrorList )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tif( vmType == typeof(");
            
            #line 220 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 220 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("ErrorListViewModel) )\r\n\t\t\t\treturn typeof(");
            
            #line 221 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("ErrorListToolWindow);\r\n");
            
            #line 222 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	if( this.MetaModel.View.CreateDependenciesView )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tif( vmType == typeof(");
            
            #line 227 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 227 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("DependenciesViewModel) )\r\n\t\t\t\treturn typeof(");
            
            #line 228 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("DependenciesToolWindow);\r\n");
            
            #line 229 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}
	foreach(DiagramClass diagramClass in this.MetaModel.AllDiagramClasses)
	{
		if( !CodeGenerationUtilities.IsDiagramGenerated(diagramClass) )
			continue;

            
            #line default
            #line hidden
            this.Write("\t\t\tif( vmType == typeof(");
            
            #line 236 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 236 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            
            #line 236 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(diagramClass.Name));
            
            #line default
            #line hidden
            this.Write("SurfaceViewModel) )\r\n\t\t\t\treturn typeof(");
            
            #line 237 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            
            #line 237 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(diagramClass.Name));
            
            #line default
            #line hidden
            this.Write("ToolWindow);\r\n");
            
            #line 238 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t\t\tif( vmType == typeof(");
            
            #line 241 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 241 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("SearchViewModel) )\r\n\t\t\t\treturn typeof(");
            
            #line 242 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("SearchToolWindow);\t\t\t\t\r\n\t\t\telse if( vmType == typeof(");
            
            #line 243 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 243 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("SearchResultViewModel) )\r\n\t\t\t\treturn typeof(");
            
            #line 244 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write("SearchResultToolWindow);\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t//return typeof(");
            
            #line 246 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Name));
            
            #line default
            #line hidden
            this.Write(@"PluginsVMToolWindow);
			throw new System.NotSupportedException(""GetToolWindowType for type: "" + vmType.FullName);
		}
		
		/// <summary>
        /// Dispose.
        /// </summary>
        /// <param name=""disposing""></param>
        protected override void Dispose(bool disposing)
        {
            if (disposing)
                this.PackageController.Dispose();
            base.Dispose(disposing);
        }
		#endregion		
	}
}

//
// Package attributes which may need to change are placed on the partial class below, rather than in the main include file.
//
namespace ");
            
            #line 267 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\t/// <summary>\r\n\t/// Double-derived class to allow easier code customization" +
                    ".\r\n\t/// </summary>\r\n\t[VSShell::ProvideMenuResource(\"1000.ctmenu\", 1)]\r\n\t[VSShell" +
                    "::ProvideToolboxItems(1)]\r\n\t[VSTextTemplatingHost::ProvideDirectiveProcessor(typ" +
                    "eof(global::");
            
            #line 274 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 274 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(directiveName));
            
            #line default
            #line hidden
            this.Write("DirectiveProcessor), global::");
            
            #line 274 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 274 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(directiveName));
            
            #line default
            #line hidden
            this.Write("DirectiveProcessor.");
            
            #line 274 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(directiveName));
            
            #line default
            #line hidden
            this.Write("DirectiveProcessorName, \"A directive processor that provides access to ");
            
            #line 274 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(directiveName));
            
            #line default
            #line hidden
            this.Write(" files\")]\r\n\t[global::System.Runtime.InteropServices.Guid(Constants.");
            
            #line 275 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("PackageId)]\r\n\tinternal sealed partial class ");
            
            #line 276 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("Package : ");
            
            #line 276 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\PackageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("PackageBase\r\n\t{\r\n\t}\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
