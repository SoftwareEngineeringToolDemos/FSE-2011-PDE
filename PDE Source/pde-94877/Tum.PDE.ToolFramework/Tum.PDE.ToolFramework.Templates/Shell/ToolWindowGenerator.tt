<#@ template language="C#" inherits="BaseTemplate"#> 
<#@ import namespace="Tum.PDE.LanguageDSL"#>
<#@ import namespace="Microsoft.VisualStudio.Modeling" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Collections.ObjectModel" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#
	string dslName = this.MetaModel.Name;
	string directiveName = this.MetaModel.Name;
	string dslFullName = this.MetaModel.GetFullName(true);
#>
using VSShellInterop = global::Microsoft.VisualStudio.Shell.Interop;
using VSShell = global::Microsoft.VisualStudio.Shell;
using VSTextTemplatingHost = global::Microsoft.VisualStudio.TextTemplating.VSHost;

using DslShell = global::Microsoft.VisualStudio.Modeling.Shell;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslModeling = global::Microsoft.VisualStudio.Modeling;

using DslEditorShell = global::Tum.PDE.ToolFramework.Modeling.Shell;

namespace <#= this.MetaModel.Namespace #>
{
<#
	MetaModel dm = this.MetaModel;
	if( this.MetaModel.View.CreateModelTree )
	{
#>
	#region ModelTree
	/// <summary>
	/// This class represents the model tree tool window of the <#= dm.ApplicationName #>.
	/// 
	/// Double-derived class to allow easier code customization.
	/// </summary>
    [System.Runtime.InteropServices.Guid("<#= this.MetaModel.View.ModelTreeId #>")]	
	public partial class <#= dm.Name #>ModelTreeToolWindow: <#= dm.Name #>ModelTreeToolWindowBase
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        public <#= dm.Name #>ModelTreeToolWindow()
            : base()
        {
        }
		#endregion
	}
	
	/// <summary>
	/// This class represents the model tree tool window  of the <#= dm.ApplicationName #>.
	/// 
	/// This is the abstract base class.
	/// </summary>
	public abstract class <#= dm.Name #>ModelTreeToolWindowBase : DslEditorShell::ModelToolWindowPane
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        protected <#= dm.Name #>ModelTreeToolWindowBase()
            : base()
        {
        }
		#endregion
	
		/// <summary>
        /// Returns the control that should be used to display this pane's content.
        /// </summary>
        /// <returns></returns>
	    public override System.Windows.FrameworkElement CreateControl()
        {
            return new Tum.PDE.ToolFramework.Modeling.Visualization.Shell.Controls.DefaultView();
        }
		
		/// <summary>
        /// Initialize.
        /// </summary>
        protected override void Initialize()
        {
            base.Initialize();

            this.BitmapResourceID = 301;
            this.BitmapIndex = 0;
        }
	}
	#endregion
<#
	}
	if( this.MetaModel.View.CreatePropertyGrid )
	{
#>

	#region PropertyGrid
	/// <summary>
	/// This class represents the property grid tool window of the <#= dm.ApplicationName #>.
	/// 
	/// Double-derived class to allow easier code customization.
	/// </summary>
    [System.Runtime.InteropServices.Guid("<#= this.MetaModel.View.PropertyGridId #>")]	
	public partial class <#= dm.Name #>PropertyGridToolWindow: <#= dm.Name #>PropertyGridToolWindowBase
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        public <#= dm.Name #>PropertyGridToolWindow()
            : base()
        {
        }
		#endregion
	}
	
	/// <summary>
	/// This class represents the property grid tool window of the <#= dm.ApplicationName #>.
	/// 
	/// This is the abstract base class.
	/// </summary>
	public abstract class <#= dm.Name #>PropertyGridToolWindowBase : DslEditorShell::ModelToolWindowPane
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        protected <#= dm.Name #>PropertyGridToolWindowBase()
            : base()
        {
        }
		#endregion
	
		/// <summary>
        /// Returns the control that should be used to display this pane's content.
        /// </summary>
        /// <returns></returns>
	    public override System.Windows.FrameworkElement CreateControl()
        {
            return new Tum.PDE.ToolFramework.Modeling.Visualization.Shell.Controls.DefaultView();
        }
		
		/// <summary>
        /// Initialize.
        /// </summary>
        protected override void Initialize()
        {
            base.Initialize();

            this.BitmapResourceID = 302;
            this.BitmapIndex = 0;
        }		
	}	
	#endregion
<#
	}
	if( this.MetaModel.View.CreateErrorList )
	{
#>

	#region ErrorList
	/// <summary>
	/// This class represents the error list tool window of the <#= dm.ApplicationName #>.
	/// 
	/// Double-derived class to allow easier code customization.
	/// </summary>
    [System.Runtime.InteropServices.Guid("<#= this.MetaModel.View.ErrorListId #>")]	
	public partial class <#= dm.Name #>ErrorListToolWindow: <#= dm.Name #>ErrorListToolWindowBase
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        public <#= dm.Name #>ErrorListToolWindow()
            : base()
        {
        }
		#endregion
	}
	
	/// <summary>
	/// This class represents the error list tool window  of the <#= dm.ApplicationName #>.
	/// 
	/// This is the abstract base class.
	/// </summary>
	public abstract class <#= dm.Name #>ErrorListToolWindowBase : DslEditorShell::ModelToolWindowPane
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        protected <#= dm.Name #>ErrorListToolWindowBase()
            : base()
        {
        }
		#endregion
	
		/// <summary>
        /// Returns the control that should be used to display this pane's content.
        /// </summary>
        /// <returns></returns>
	    public override System.Windows.FrameworkElement CreateControl()
        {
            return new Tum.PDE.ToolFramework.Modeling.Visualization.Shell.Controls.DefaultView();
        }
		
		/// <summary>
        /// Initialize.
        /// </summary>
        protected override void Initialize()
        {
            base.Initialize();

            this.BitmapResourceID = 303;
            this.BitmapIndex = 0;
        }		
	}
	#endregion
<#
	}
	if( this.MetaModel.View.CreateDependenciesView )
	{
#>

	#region Dependencies
	/// <summary>
	/// This class represents the dependencies tool window of the <#= dm.ApplicationName #>.
	/// 
	/// Double-derived class to allow easier code customization.
	/// </summary>
    [System.Runtime.InteropServices.Guid("<#= this.MetaModel.View.DependenciesViewId #>")]	
	public partial class <#= dm.Name #>DependenciesToolWindow: <#= dm.Name #>DependenciesToolWindowBase
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        public <#= dm.Name #>DependenciesToolWindow()
            : base()
        {
        }
		#endregion
	}
	
	/// <summary>
	/// This class represents the dependencies tool window  of the <#= dm.ApplicationName #>.
	/// 
	/// This is the abstract base class.
	/// </summary>
	public abstract class <#= dm.Name #>DependenciesToolWindowBase : DslEditorShell::ModelToolWindowPane
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        protected <#= dm.Name #>DependenciesToolWindowBase()
            : base()
        {
        }
		#endregion
	
		/// <summary>
        /// Returns the control that should be used to display this pane's content.
        /// </summary>
        /// <returns></returns>
	    public override System.Windows.FrameworkElement CreateControl()
        {
            return new Tum.PDE.ToolFramework.Modeling.Visualization.Shell.Controls.DefaultView();
        }
		
		/// <summary>
        /// Initialize.
        /// </summary>
        protected override void Initialize()
        {
            base.Initialize();

            this.BitmapResourceID = 304;
            this.BitmapIndex = 0;
        }		
	}	
	#endregion
<#
	}
#>

	#region Search
	/// <summary>
	/// This class represents the search tool window of the <#= dm.ApplicationName #>.
	/// 
	/// Double-derived class to allow easier code customization.
	/// </summary>
    [System.Runtime.InteropServices.Guid("<#= this.MetaModel.View.SearchId #>")]	
	public partial class <#= dm.Name #>SearchToolWindow: <#= dm.Name #>SearchToolWindowBase
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        public <#= dm.Name #>SearchToolWindow()
            : base()
        {
        }
		#endregion
	}
	
	/// <summary>
	/// This class represents the search tool window  of the <#= dm.ApplicationName #>.
	/// 
	/// This is the abstract base class.
	/// </summary>
	public abstract class <#= dm.Name #>SearchToolWindowBase : DslEditorShell::ModelToolWindowPane
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        protected <#= dm.Name #>SearchToolWindowBase()
            : base()
        {
        }
		#endregion
	
		/// <summary>
        /// Returns the control that should be used to display this pane's content.
        /// </summary>
        /// <returns></returns>
	    public override System.Windows.FrameworkElement CreateControl()
        {
            return new Tum.PDE.ToolFramework.Modeling.Visualization.Shell.Controls.DefaultView();
        }
		
		/// <summary>
        /// Initialize.
        /// </summary>
        protected override void Initialize()
        {
            base.Initialize();

            this.BitmapResourceID = 306;
            this.BitmapIndex = 0;
        }		
	}		
	
	/// <summary>
	/// This class represents the search result tool window of the <#= dm.ApplicationName #>.
	/// 
	/// Double-derived class to allow easier code customization.
	/// </summary>
    [System.Runtime.InteropServices.Guid("<#= this.MetaModel.View.SearchResultId #>")]	
	public partial class <#= dm.Name #>SearchResultToolWindow: <#= dm.Name #>SearchResultToolWindowBase
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        public <#= dm.Name #>SearchResultToolWindow()
            : base()
        {
        }
		#endregion
	}
	
	/// <summary>
	/// This class represents the search result tool window  of the <#= dm.ApplicationName #>.
	/// 
	/// This is the abstract base class.
	/// </summary>
	public abstract class <#= dm.Name #>SearchResultToolWindowBase : DslEditorShell::ModelToolWindowPane
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        protected <#= dm.Name #>SearchResultToolWindowBase()
            : base()
        {
        }
		#endregion
	
		/// <summary>
        /// Returns the control that should be used to display this pane's content.
        /// </summary>
        /// <returns></returns>
	    public override System.Windows.FrameworkElement CreateControl()
        {
            return new Tum.PDE.ToolFramework.Modeling.Visualization.Shell.Controls.DefaultView();
        }
		
		/// <summary>
        /// Initialize.
        /// </summary>
        protected override void Initialize()
        {
            base.Initialize();

            this.BitmapResourceID = 305;
            this.BitmapIndex = 0;
        }		
	}		
	#endregion
<#
	foreach(DiagramClass diagramClass in this.MetaModel.AllDiagramClasses)
	{
		if( !CodeGenerationUtilities.IsDiagramGenerated(diagramClass) )
			continue;
#>

	/// <summary>
	/// This class represents the <#= diagramClass.Name #> tool window of the <#= dm.ApplicationName #>.
	/// 
	/// Double-derived class to allow easier code customization.
	/// </summary>
    [System.Runtime.InteropServices.Guid("<#= diagramClass.Id #>")]	
	public partial class <#= dm.Name #><#= diagramClass.Name #>ToolWindow: <#= dm.Name #><#= diagramClass.Name #>ToolWindowBase
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        public <#= dm.Name #><#= diagramClass.Name #>ToolWindow()
            : base()
        {
        }
		#endregion
	}
	
	/// <summary>
	/// This class represents the <#= diagramClass.Name #> tool window  of the <#= dm.ApplicationName #>.
	/// 
	/// This is the abstract base class.
	/// </summary>
	public abstract class <#= dm.Name #><#= diagramClass.Name #>ToolWindowBase : DslEditorShell::ModelToolWindowPane
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        protected <#= dm.Name #><#= diagramClass.Name #>ToolWindowBase()
            : base()
        {
        }
		#endregion
	
		/// <summary>
        /// Returns the control that should be used to display this pane's content.
        /// </summary>
        /// <returns></returns>
	    public override System.Windows.FrameworkElement CreateControl()
        {
            return new Tum.PDE.ToolFramework.Modeling.Visualization.Shell.Controls.DefaultView();
        }
	}
<#
	}
#>

	/*
	#region Plugin
	/// <summary>
	/// This class represents the tool window of the <#= dm.ApplicationName #> that is used for plugins.
	/// 
	/// Double-derived class to allow easier code customization.
	/// </summary>
    [System.Runtime.InteropServices.Guid("<#= this.MetaModel.View.PluginWindowId #>")]	
	public partial class <#= dm.Name #>PluginsVMToolWindow: <#= dm.Name #>PluginsVMToolWindowBase
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        public <#= dm.Name #>PluginsVMToolWindow()
            : base()
        {
        }
		#endregion
	}
	
	/// <summary>
	/// This class represents the tool window of the <#= dm.ApplicationName #> that is used for plugins.
	/// 
	/// This is the abstract base class.
	/// </summary>
	public abstract class <#= dm.Name #>PluginsVMToolWindowBase : DslEditorShell::ModelToolWindowPane
	{
		#region Constructor
		/// <summary>
        /// Constuctor.
        /// </summary>
        protected <#= dm.Name #>PluginsVMToolWindowBase()
            : base()
        {
        }
		#endregion
	
		/// <summary>
        /// Returns the control that should be used to display this pane's content.
        /// </summary>
        /// <returns></returns>
	    public override System.Windows.FrameworkElement CreateControl()
        {
            return new Tum.PDE.ToolFramework.Modeling.Visualization.Shell.Controls.DefaultView();
        }
	}	
	#endregion
	*/
	
}