// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tum.PDE.ToolFramework.Templates.Shell
{
    using Tum.PDE.LanguageDSL;
    using Microsoft.VisualStudio.Modeling;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System;
    
    
    #line 1 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class DocViewGenerator : BaseTemplate
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public override string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write(" \r\n");
            
            #line 9 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"

	string dslName = this.MetaModel.Name;
	string dslFullName = this.MetaModel.GetFullName(true);

            
            #line default
            #line hidden
            this.Write("using DslModeling = global::Microsoft.VisualStudio.Modeling;\r\nusing DslShell = gl" +
                    "obal::Microsoft.VisualStudio.Modeling.Shell;\r\n\r\nusing DslEditorShell = global::T" +
                    "um.PDE.ToolFramework.Modeling.Shell;\r\n\r\nnamespace ");
            
            #line 18 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\t/// <summary>\r\n\t/// Double-derived class to allow easier code customization" +
                    ".\r\n\t/// </summary>\r\n\t[global::System.ComponentModel.ToolboxItemFilterAttribute(");
            
            #line 23 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslFullName));
            
            #line default
            #line hidden
            this.Write("ToolboxHelperBase.ToolboxFilterString, global::System.ComponentModel.ToolboxItemF" +
                    "ilterType.Require)]\r\n\tinternal partial class ");
            
            #line 24 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocView : ");
            
            #line 24 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocViewBase\r\n\t{\r\n\t\t/// <summary>\r\n\t\t/// Constructs a new ");
            
            #line 27 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocView.\r\n\t\t/// </summary>\r\n\t\tpublic ");
            
            #line 29 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"DocView(DslEditorShell::ModelShellData docData, global::System.IServiceProvider serviceProvider)
			: base(docData, serviceProvider)
		{
		}
	}

	/// <summary>
	/// Class that hosts the diagram surface in the Visual Studio document area.
	/// </summary>
	internal abstract class ");
            
            #line 38 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocViewBase : DslEditorShell::ModelDocView\r\n\t{\r\n\t\t/// <summary>\r\n\t\t/// Constructs" +
                    " a new ");
            
            #line 41 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocView.\r\n\t\t/// </summary>\r\n\t\tprotected ");
            
            #line 43 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocViewBase(DslEditorShell::ModelShellData docData, global::System.IServiceProvid" +
                    "er serviceProvider) \r\n\t\t\t: base(docData, serviceProvider)\r\n\t\t{\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t" +
                    "/// <summary>\r\n\t\t/// Gets or sets the main view model.\r\n\t\t/// </summary>\r\n\t\tpubl" +
                    "ic ");
            
            #line 52 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 52 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"MainViewModel ViewModel
		{
			get;
			set;
		}
		
		/// <summary>
		/// Gets or sets the main ui control.
		/// </summary>
		public global::System.Windows.FrameworkElement ViewControl
		{
			get;
			set;
		}
		
		#region Methods
		/// <summary>
		/// This methods creates the WPF control that will represent the model
		/// </summary>
		/// <returns></returns>
		protected override global::System.Windows.FrameworkElement CreateControl()
		{
            this.ViewControl = new MainViewControl();
            this.CreateViewModel();

			// Delay initialization of the ui until other tool windows have also 
			// had a chance to be initialized
			this.ViewControl.Dispatcher.BeginInvoke((System.Action)delegate
            {
                // Populate the list view
                this.SetViewModel();
            });

			// add to main shell vm
            (this.Package as ");
            
            #line 86 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("Package).PackageController.AddShellViewModel(this.ViewModel, this.DocData.FullFil" +
                    "eName);\r\n\t\t\t(this.Package as ");
            
            #line 87 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"Package).PackageController.SetCurrentShellViewModel(this.ViewModel);

            return this.ViewControl;
		}
		
		/// <summary>
		/// Creates the main view model.
		/// </summary>
		/// <returns></returns>
		protected virtual void CreateViewModel()
		{
            ");
            
            #line 98 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocData docData = this.DocData as ");
            
            #line 98 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("DocData;\r\n\t\t\tthis.ViewModel = new ");
            
            #line 99 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.MetaModel.Namespace));
            
            #line default
            #line hidden
            this.Write(".ViewModel.");
            
            #line 99 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write("MainViewModel(docData.ModelData, this.Package as ");
            
            #line 99 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"Package);
			this.ViewModel.FullFileName = this.DocData.FullFileName;
		}			
		
		/// <summary>
		/// Set the vm to the data context of the view.
		/// </summary>
		/// <returns></returns>
		protected virtual void SetViewModel()
		{
			(this.ViewControl as MainViewControl).SetViewModel(this.ViewModel);
		}		
		
        /// <summary>
        /// Clean up.
        /// </summary>
        protected override void OnClose()
        {
			//(this.Package as ");
            
            #line 117 "J:\Uni\CC Processes\Werkzeuge\PDE 2\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\Shell\DocViewGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dslName));
            
            #line default
            #line hidden
            this.Write(@"Package).PackageController.RemoveShellViewModel(this.ViewModel);		
		
			this.DocData.CloseDocument();
					
            (this.ViewControl as MainViewControl).Dispose();
			this.ViewModel.Dispose();
            
            this.ViewModel = null;
            this.ViewControl = null;
			
            base.OnClose();			
        }		
		#endregion
	}	
}
");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
