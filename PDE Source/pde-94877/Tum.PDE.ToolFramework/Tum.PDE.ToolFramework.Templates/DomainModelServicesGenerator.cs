// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tum.PDE.ToolFramework.Templates
{
    using Tum.PDE.LanguageDSL;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System;
    
    
    #line 1 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class DomainModelServicesGenerator : BaseTemplate
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public override string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write(" \r\n");
            this.Write("using DslModeling = global::Microsoft.VisualStudio.Modeling;\r\nusing DslEditorMode" +
                    "ling = global::Tum.PDE.ToolFramework.Modeling;\r\nusing DslEditorDiagrams = global" +
                    "::Tum.PDE.ToolFramework.Modeling.Diagrams;\r\n\r\n");
            
            #line 12 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	MetaModel dm = this.MetaModel;

            
            #line default
            #line hidden
            this.Write("namespace ");
            
            #line 15 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\t/// <summary>\r\n    /// Domain model services specific to ");
            
            #line 18 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n    /// </summary>\r\n\tpublic partial class ");
            
            #line 20 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelServices : DslEditorModeling::DomainModelServices\r\n\t{\r\n\t\t#region Singl" +
                    "eton Instance\r\n\t\tprivate static ");
            
            #line 23 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"DomainModelServices dmainModelServices = null;
		
        /// <summary>
        /// Singleton instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)] // Will trigger creation otherwise.
        public static ");
            
            #line 29 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelServices Instance\r\n        {\r\n            [global::System.Diagnostics." +
                    "DebuggerStepThrough]\r\n            get\r\n            {\r\n                if( dmainM" +
                    "odelServices == null )\r\n\t\t\t\t{\r\n\t\t\t\t\tdmainModelServices = new ");
            
            #line 36 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelServices();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn dmainModelServices;\r\n            " +
                    "}\r\n        }\r\n\t\t\r\n\t\tprivate ");
            
            #line 43 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"DomainModelServices()
		{
		}
        #endregion
		
		#region Properties
        /// <summary>
        /// Gets the extension services.
        /// </summary>
		public override DslEditorModeling::IDomainModelExtensionServices ExtensionServices
		{
			get
			{
				return ");
            
            #line 56 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"DomainModelExtensionServices.Instance;
			}
		}
		
		/// <summary>
        /// Gets the element id provider for domain model elements.
        /// </summary>
        public override DslEditorModeling::IModelElementIdProvider ElementIdProvider
		{
			get
			{
				return ");
            
            #line 67 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"DomainModelIdProvider.Instance;
			}
		}
		
		/// <summary>
        /// Gets the element name provider for domain model elements.
        /// </summary>
        public override DslEditorModeling::IModelElementNameProvider ElementNameProvider 
		{ 
			get
			{
				return ");
            
            #line 78 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementNameProvider.Instance;
			}
		}

        /// <summary>
        /// Gets the element type provider for domain model elments.
        /// </summary>
        public override DslEditorModeling::IModelElementTypeProvider ElementTypeProvider 
		{ 
			get
			{
				return ");
            
            #line 89 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementTypeProvider.Instance;
			}
		}
		
		/// <summary>
        /// Gets the element shape provider for domain model elments.
        /// </summary>
        public override DslEditorModeling::IModelElementShapeProvider ShapeProvider
		{ 
			get
			{
				return ");
            
            #line 100 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementShapeProvider.Instance;
			}
		}

		/// <summary>
        /// Gets the element parent provider for domain model elments.
        /// </summary>
        public override DslEditorModeling::IModelElementParentProvider ElementParentProvider
		{ 
			get
			{
				return ");
            
            #line 111 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementParentProvider.Instance;
			}
		}
		
		/// <summary>
        /// Gets the element children provider for domain model elments.
        /// </summary>
        public override DslEditorModeling::IModelElementChildrenProvider ElementChildrenProvider
		{ 
			get
			{
				return ");
            
            #line 122 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementChildrenProvider.Instance;
			}
		}
		
		/// <summary>
        /// Gets the dependency items provider for domain model elments.
        /// </summary>
        public override DslEditorModeling::IDependenciesItemsProvider DependenciesItemsProvider
		{ 
			get
			{
				return ");
            
            #line 133 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DependenciesItemsProvider.Instance;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/// <summary>\r\n        /// " +
                    "Gets the model data options.\r\n        /// </summary>\r\n        public override Ds" +
                    "lEditorModeling::IModelDataOptions ModelDataOptions \r\n\t\t{ \r\n\t\t\tget\r\n\t\t\t{\r\n\t\t\t\tre" +
                    "turn ");
            
            #line 144 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ModelDataOptions.Instance;
			} 
		}
		
		/// <summary>
        /// Gets the search processor for domain model elments.
        /// </summary>
        public override DslEditorModeling::IModelElementSearchProcessor SearchProcessor 
		{ 
			get
			{
				return ");
            
            #line 155 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"SearchProcessor.Instance;
			}
		}

		/// <summary>
        /// Gets the search processor for domain model elments.
        /// </summary>
        public override DslEditorModeling::ModelValidationController ValidationController 
		{ 
			get
			{
				return ");
            
            #line 166 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ValidationController.Instance;\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t#endregion\r\n\t}\r\n\r\n\t/// <summary>\r\n " +
                    "   /// Domain model extension services specific to ");
            
            #line 173 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n\t///\r\n\t/// Double derived to allow for easier customization.\r\n    /// </summar" +
                    "y>\r\n\tpublic partial class ");
            
            #line 177 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelExtensionServices : ");
            
            #line 177 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelExtensionServicesBase\r\n\t{\t\r\n\t\t#region Singleton Instance\r\n\t\tprivate st" +
                    "atic ");
            
            #line 180 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"DomainModelExtensionServices dmainModelServices = null;
        private static object domainModelServicesLock = new object();
		
        /// <summary>
        /// Singleton instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)] // Will trigger creation otherwise.
        public static ");
            
            #line 187 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"DomainModelExtensionServices Instance
        {
            [global::System.Diagnostics.DebuggerStepThrough]
            get
            {
			 	lock (domainModelServicesLock)
                {
                    if (dmainModelServices == null)
                        dmainModelServices = new ");
            
            #line 195 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelExtensionServices();\r\n                }\r\n\t\t\t\t\r\n\t\t\t\treturn dmainModelSe" +
                    "rvices;\r\n            }\r\n        }\r\n\t\t\r\n\t\tprivate ");
            
            #line 202 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelExtensionServices() : base()\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\r\n        #endregion\t\r\n\t}" +
                    "\r\n\t\r\n\t/// <summary>\r\n    /// Domain model extension services specific to ");
            
            #line 211 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n\t///\r\n\t/// This is the base abstract class.\r\n    /// </summary>\r\n\tpublic abstr" +
                    "act class ");
            
            #line 215 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelExtensionServicesBase : DslEditorModeling::DomainModelExtensionService" +
                    "s\r\n\t{\r\n\t\t#region Constructor\r\n        /// <summary>\r\n        /// Constructor.\r\n " +
                    "       /// </summary>\t\t\r\n\t\tprotected ");
            
            #line 221 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelExtensionServicesBase() : base(");
            
            #line 221 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Namespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 221 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"DomainModelServices.Instance)
		{			
			Intialize();
		}
		#endregion
		
		#region Methods
        private bool isInitialized = false;
        /// <summary>
        /// Initialized known extern services.
        /// </summary>
        public override void Intialize()
		{
			if( isInitialized )
				return;
				
			isInitialized = true;
");
            
            #line 238 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

		
		foreach(MetaModelLibrary lib in dm.MetaModelLibraries)
			if( lib.ImportedLibrary != null )
			{
				MetaModel m = lib.ImportedLibrary as MetaModel;

            
            #line default
            #line hidden
            this.Write("\t\t\tthis.AddExternModelService(");
            
            #line 245 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.Namespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 245 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelServices.Instance);\r\n\t\t\t");
            
            #line 246 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.Namespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 246 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelExtensionServices.Instance.AddExternModelService(");
            
            #line 246 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("DomainModelServices.Instance);\r\n");
            
            #line 247 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

			}			

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t// set top most service\r\n\t\t\tthis.SetTopMostService(");
            
            #line 252 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Namespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 252 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"DomainModelServices.Instance);
		}	

		#endregion
	}

	/// <summary>
	/// Class which provides names and display names for domain classes as well as methods to create names for new domain classes.
	///
	/// Double derived to allow for easier customization.
    /// </summary>
	public partial class ");
            
            #line 263 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementNameProvider : DslEditorModeling::ModelElementNameProvider\r\n\t{\r\n\t\t#region " +
                    "Singleton Instance\r\n\t\tprivate static ");
            
            #line 266 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementNameProvider elementNameProvider = null;
		
        /// <summary>
        /// Singleton instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)] // Will trigger creation otherwise.
        public static ");
            
            #line 272 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementNameProvider Instance\r\n        {\r\n            [global::System.Diagnostics." +
                    "DebuggerStepThrough]\r\n            get\r\n            {\r\n                if( elemen" +
                    "tNameProvider == null )\r\n\t\t\t\t{\r\n\t\t\t\t\telementNameProvider = new ");
            
            #line 279 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementNameProvider();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn elementNameProvider;\r\n           " +
                    " }\r\n        }\r\n\t\t\r\n\t\tprivate ");
            
            #line 286 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementNameProvider() : base()
		{
		}
        #endregion
	}
	
	/// <summary>
	/// Class which provides type names and type display names for domain classes.
	///
	/// Double derived to allow for easier customization.
    /// </summary>
	public partial class ");
            
            #line 297 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementTypeProvider : DslEditorModeling::ModelElementTypeProvider\r\n    {\r\n\t\t#regi" +
                    "on Singleton Instance\r\n\t\tprivate static ");
            
            #line 300 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementTypeProvider elementTypeProvider = null;
		
        /// <summary>
        /// Singleton instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)] // Will trigger creation otherwise.
        public static ");
            
            #line 306 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementTypeProvider Instance\r\n        {\r\n            [global::System.Diagnostics." +
                    "DebuggerStepThrough]\r\n            get\r\n            {\r\n                if( elemen" +
                    "tTypeProvider == null )\r\n\t\t\t\t{\r\n\t\t\t\t\telementTypeProvider = new ");
            
            #line 313 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementTypeProvider();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn elementTypeProvider;\r\n           " +
                    " }\r\n        }\r\n\t\t\r\n\t\tprivate ");
            
            #line 320 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementTypeProvider() : base()\r\n\t\t{\r\n\t\t}\r\n        #endregion\r\n\t}\r\n\r\n\t/// <summary" +
                    ">\r\n\t/// Class which retrieves parent elements for domain classes.\r\n\t///\r\n\t/// Do" +
                    "uble derived to allow for easier customization.\r\n    /// </summary>\r\n\tpublic par" +
                    "tial class ");
            
            #line 331 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementParentProvider : DslEditorModeling::ModelElementParentProvider\r\n    {\r\n\t\t#" +
                    "region Singleton Instance\r\n\t\tprivate static ");
            
            #line 334 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementParentProvider elementParentProvider = null;
		
        /// <summary>
        /// Singleton instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)] // Will trigger creation otherwise.
        public static ");
            
            #line 340 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementParentProvider Instance\r\n        {\r\n            [global::System.Diagnostic" +
                    "s.DebuggerStepThrough]\r\n            get\r\n            {\r\n                if( elem" +
                    "entParentProvider == null )\r\n\t\t\t\t{\r\n\t\t\t\t\telementParentProvider = new ");
            
            #line 347 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementParentProvider();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn elementParentProvider;\r\n       " +
                    "     }\r\n        }\r\n\t\r\n\t\t/// <summary>\r\n        /// Constructor.\r\n        /// </s" +
                    "ummary>\r\n\t\tprivate ");
            
            #line 357 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementParentProvider() : base()\r\n\t\t{\r\n\t\t}\r\n        #endregion\r\n\t}\r\n\t\r\n\t/// <summ" +
                    "ary>\r\n\t/// Class which retrieves children elements domain classes.\r\n    /// </su" +
                    "mmary>\r\n\tpublic partial class ");
            
            #line 366 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementChildrenProvider : DslEditorModeling::ModelElementChildrenProvider\r\n    {\r" +
                    "\n\t\t#region Singleton Instance\r\n\t\tprivate static ");
            
            #line 369 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementChildrenProvider elementChildrenProvider = null;
		
        /// <summary>
        /// Singleton instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)] // Will trigger creation otherwise.
        public static ");
            
            #line 375 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementChildrenProvider Instance\r\n        {\r\n            [global::System.Diagnost" +
                    "ics.DebuggerStepThrough]\r\n            get\r\n            {\r\n                if( el" +
                    "ementChildrenProvider == null )\r\n\t\t\t\t{\r\n\t\t\t\t\telementChildrenProvider = new ");
            
            #line 382 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementChildrenProvider();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn elementChildrenProvider;\r\n   " +
                    "         }\r\n        }\r\n\t\t\r\n\t\tprivate ");
            
            #line 389 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementChildrenProvider() : base()\r\n\t\t{\r\n\t\t}\r\n        #endregion\r\n\t}\t\r\n\t\r\n\t/// <s" +
                    "ummary>\r\n\t/// Class which retrieves parent shape for domain classes.\r\n\t///\r\n\t///" +
                    " Double derived to allow for easier customization.\r\n    /// </summary>\r\n\tpublic " +
                    "partial class ");
            
            #line 400 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementShapeProvider : ");
            
            #line 400 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementShapeProviderBase\r\n    {\r\n\t\t#region Singleton Instance\r\n\t\tprivate static ");
            
            #line 403 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ElementShapeProvider elementShapeProvider = null;
		
        /// <summary>
        /// Singleton instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)] // Will trigger creation otherwise.
        public static ");
            
            #line 409 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementShapeProvider Instance\r\n        {\r\n            [global::System.Diagnostics" +
                    ".DebuggerStepThrough]\r\n            get\r\n            {\r\n                if( eleme" +
                    "ntShapeProvider == null )\r\n\t\t\t\t{\r\n\t\t\t\t\telementShapeProvider = new ");
            
            #line 416 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementShapeProvider();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn elementShapeProvider;\r\n         " +
                    "   }\r\n        }\r\n\t\r\n\t\t/// <summary>\r\n        /// Constructor.\r\n        /// </sum" +
                    "mary>\r\n\t\tprivate ");
            
            #line 426 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementShapeProvider() : base()\r\n\t\t{\r\n\t\t}\r\n        #endregion\r\n\t}\r\n\t\r\n\t/// <summa" +
                    "ry>\r\n\t/// Class which retrieves shape elements for domain classes.\r\n\t///\r\n\t/// T" +
                    "his is the base abstract class.\r\n    /// </summary>\r\n\tpublic partial class ");
            
            #line 437 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementShapeProviderBase : DslEditorModeling::ModelElementShapeProvider\r\n    {\t\r\n" +
                    "\t\t#region Constructor\r\n        /// <summary>\r\n        /// Constructor.\r\n        " +
                    "/// </summary>\t\t\r\n\t\tprotected ");
            
            #line 443 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ElementShapeProviderBase()\r\n\t\t{\r\n\t\t\t\r\n\t\t}\r\n\t\t#endregion\t\r\n");
            
            #line 448 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

		
		List<ShapeClass> presentationshapeClasses = new List<ShapeClass>();
		ReadOnlyCollection<ShapeClass> shapeClasses = dm.Store.ElementDirectory.FindElements<ShapeClass>();
		foreach(ShapeClass shapeClass in shapeClasses)
		{
			if( shapeClass.DomainClass != null )
				presentationshapeClasses.Add(shapeClass);
		}
		
		List<PresentationElementClass> rsShapeClasses = new List<PresentationElementClass>();
		ReadOnlyCollection<PresentationElementClass> peClasses = dm.Store.ElementDirectory.FindElements<PresentationElementClass>();
		foreach(PresentationElementClass pe in peClasses)
		{
			if( pe is MappingRelationshipShapeClass)
				if( (pe as MappingRelationshipShapeClass).DomainClass == null ||
					(pe as MappingRelationshipShapeClass).Source == null ||
					(pe as MappingRelationshipShapeClass).Target == null)
					continue;
						
			if( pe is RelationshipShapeClass )
				if( (pe as RelationshipShapeClass).ReferenceRelationship == null )
					continue;
				
			if( pe is ShapeClass )
				continue;
			
			rsShapeClasses.Add(pe);
		}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t#region Methods\r\n");
            
            #line 480 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	if( presentationshapeClasses.Count > 0 )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\tprivate static global::System.Collections.Generic.Dictionary<global::System" +
                    ".Guid, int> createShapeMap;\r\n\t\t\r\n");
            
            #line 486 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	}

            
            #line default
            #line hidden
            this.Write(@"        /// <summary>
        /// Create a shape of the given type for the given element type.
        /// </summary>
        /// <param name=""modelElement"">Model element.</param>
        /// <param name=""shapeTypeId"">Shape type id.</param>
        /// <param name=""assignments"">Properties for the shape.</param>
        /// <returns>Shape if one could be created. Null otherwise.</returns>
        public override DslModeling.ModelElement CreateShapeForElement(System.Guid shapeTypeId, DslModeling::ModelElement modelElement, params DslModeling::PropertyAssignment[] assignments)
        {
");
            
            #line 498 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	if( presentationshapeClasses.Count > 0 )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tDslEditorDiagrams::NodeShape nodeShape = null;\t\r\n\t\t\r\n\t\t\tif( createShapeMap == " +
                    "null )\r\n\t\t\t{\r\n\t\t\t\tcreateShapeMap = new global::System.Collections.Generic.Dictio" +
                    "nary<global::System.Guid, int>(");
            
            #line 506 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(presentationshapeClasses.Count));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 507 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

		int counter = 0;
		foreach(ShapeClass p in presentationshapeClasses )
		{

            
            #line default
            #line hidden
            this.Write("\t\t\t\tcreateShapeMap.Add(");
            
            #line 512 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.GetFullName(true)));
            
            #line default
            #line hidden
            this.Write(".DomainClassId, ");
            
            #line 512 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(counter));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 513 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

			counter++;
		}

            
            #line default
            #line hidden
            this.Write("\t\t\t}\r\n\t\t\tint index;\r\n\t\t\tif (!createShapeMap.TryGetValue(shapeTypeId, out index))\r" +
                    "\n\t\t\t\tthrow new global::System.ArgumentException(\"Unrecognized shape type \" + sha" +
                    "peTypeId.ToString());\r\n\t\t\tswitch (index)\r\n\t\t\t{\r\n");
            
            #line 523 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

		counter = 0;
		foreach(ShapeClass p in presentationshapeClasses )
		{

            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 528 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(counter));
            
            #line default
            #line hidden
            this.Write(": nodeShape = new ");
            
            #line 528 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.GetFullName(true)));
            
            #line default
            #line hidden
            this.Write("(modelElement.Store, assignments); break;\r\n");
            
            #line 529 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

			counter++;
		}

            
            #line default
            #line hidden
            this.Write(@"				
			}

			if( nodeShape == null )
				throw new System.InvalidOperationException(""Couldn't create shape of type "" + shapeTypeId.ToString() + "" for model element "" + modelElement.ToString());
			
			nodeShape.Element = modelElement;
			
			return nodeShape;
");
            
            #line 541 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	}
	else
	{

            
            #line default
            #line hidden
            this.Write("\t\t\treturn null;\r\n");
            
            #line 547 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n        }\r\n\t\t\r\n");
            
            #line 552 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	if( rsShapeClasses.Count > 0 )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\tprivate static global::System.Collections.Generic.Dictionary<global::System" +
                    ".Guid, int> createRSShapeMap;\r\n\t\t\r\n");
            
            #line 558 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\r\n\t\t/// <summary>\r\n        /// Create a shape of the given link shape type.\r\n" +
                    "        /// </summary>\r\n        /// <param name=\"shapeTypeId\">Shape type id.</pa" +
                    "ram>\r\n        /// <param name=\"modelElement\">Model element.</param>\r\n        ///" +
                    " <param name=\"sourceShape\">Source shape.</param>\r\n        /// <param name=\"targe" +
                    "tShape\">Target shape.</param>\r\n\t\t/// <param name=\"assignments\">Properties for th" +
                    "e shape.</param>\r\n        /// <returns>Shape if one could be created. Null other" +
                    "wise.</returns>\r\n        public override DslModeling::ModelElement CreateShapeFo" +
                    "rElementLink(System.Guid shapeTypeId, DslModeling::ModelElement modelElement, Ds" +
                    "lModeling::ModelElement sourceShape, DslModeling::ModelElement targetShape, para" +
                    "ms DslModeling::PropertyAssignment[] assignments)\r\n\t\t{\r\n\t\t\tif( !(sourceShape is " +
                    "DslEditorDiagrams::NodeShape) ||\r\n\t\t\t\t!(targetShape is DslEditorDiagrams::NodeSh" +
                    "ape) )\r\n\t\t\t\treturn null;\r\n\t\t\t\t\r\n\t\t\tDslEditorDiagrams::LinkShape nodeShape = Crea" +
                    "teShapeForElementLink(shapeTypeId, modelElement, assignments) as DslEditorDiagra" +
                    "ms::LinkShape;\r\n\t\t\tif( nodeShape == null )\r\n\t\t\t\treturn nodeShape;\r\n\r\n\t\t\tnodeShap" +
                    "e.SourceAnchor = new DslEditorDiagrams::SourceAnchor(modelElement.Store); \r\n\t\t\tn" +
                    "odeShape.SourceAnchor.FromShape = sourceShape as DslEditorDiagrams::NodeShape;\r\n" +
                    "\t\t\tnodeShape.TargetAnchor = new DslEditorDiagrams::TargetAnchor(modelElement.Sto" +
                    "re); \r\n        \tnodeShape.TargetAnchor.ToShape = targetShape as DslEditorDiagram" +
                    "s::NodeShape;\r\n\r\n\t\t\treturn nodeShape;\r\n\t\t}\r\n\r\n        /// <summary>\r\n        ///" +
                    " Create a shape of the given link shape type.\r\n        /// </summary>\r\n        /" +
                    "// <param name=\"shapeTypeId\">Shape type id.</param>\r\n        /// <param name=\"mo" +
                    "delElement\">Model element.</param>\r\n\t\t/// <param name=\"assignments\">Properties f" +
                    "or the shape.</param>\r\n        /// <returns>Shape if one could be created. Null " +
                    "otherwise.</returns>\r\n        public override DslModeling::ModelElement CreateSh" +
                    "apeForElementLink(System.Guid shapeTypeId, DslModeling::ModelElement modelElemen" +
                    "t, params DslModeling::PropertyAssignment[] assignments)\r\n\t\t{\r\n\t\t\t\r\n");
            
            #line 599 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	if( rsShapeClasses.Count > 0 )
	{

            
            #line default
            #line hidden
            this.Write("\t\t\tDslEditorDiagrams::LinkShape nodeShape = null;\t\r\n\t\t\r\n\t\t\tif( createRSShapeMap =" +
                    "= null )\r\n\t\t\t{\r\n\t\t\t\tcreateRSShapeMap = new global::System.Collections.Generic.Di" +
                    "ctionary<global::System.Guid, int>(");
            
            #line 607 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rsShapeClasses.Count));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 608 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

		int counter = 0;
		foreach(PresentationElementClass p in rsShapeClasses )
		{

            
            #line default
            #line hidden
            this.Write("\t\t\t\tcreateRSShapeMap.Add(");
            
            #line 613 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.GetFullName(true)));
            
            #line default
            #line hidden
            this.Write(".DomainClassId, ");
            
            #line 613 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(counter));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 614 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

			counter++;
		}

            
            #line default
            #line hidden
            this.Write("\t\t\t}\r\n\t\t\tint index;\r\n\t\t\tif (!createRSShapeMap.TryGetValue(shapeTypeId, out index)" +
                    ")\r\n\t\t\t\tthrow new global::System.ArgumentException(\"Unrecognized shape type \" + s" +
                    "hapeTypeId.ToString());\r\n\t\t\tswitch (index)\r\n\t\t\t{\r\n");
            
            #line 624 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

		counter = 0;
		foreach(PresentationElementClass p in rsShapeClasses )
		{

            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 629 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(counter));
            
            #line default
            #line hidden
            this.Write(": nodeShape = new ");
            
            #line 629 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p.GetFullName(true)));
            
            #line default
            #line hidden
            this.Write("(modelElement.Store, assignments); break;\r\n");
            
            #line 630 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

			counter++;
		}

            
            #line default
            #line hidden
            this.Write(@"				
			}

			if( nodeShape == null )
				throw new System.InvalidOperationException(""Couldn't create shape of type "" + shapeTypeId.ToString() + "" for element link "" + modelElement.ToString());
			
			nodeShape.Element = modelElement;
								
			return nodeShape;
");
            
            #line 642 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	}
	else
	{

            
            #line default
            #line hidden
            this.Write("\t\t\treturn null;\r\n");
            
            #line 648 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

	}

            
            #line default
            #line hidden
            this.Write(@"		
        }
		
		/// <summary>
        /// Create a dependency shape for the given element type.
        /// </summary>
        /// <param name=""modelElementTypeId"">Model element type.</param>
        /// <param name=""modelElement"">Model element.</param>
        /// <param name=""assignments"">Properties for the shape.</param>
        /// <returns>Shape if one could be created. Null otherwise.</returns>
        public override DslModeling::ModelElement CreateDependenciesShapeForElement(System.Guid modelElementTypeId, DslModeling::ModelElement modelElement, params DslModeling::PropertyAssignment[] assignments)
		{
			System.Guid id;
            if((modelElement as DslEditorModeling::DomainModelElement).Store.DomainDataAdvDirectory.ResolveExtensionDirectory<DslEditorDiagrams::DiagramDomainDataDirectory>().ClassShapesDependenciesMapping.TryGetValue(modelElementTypeId, out id))
                return CreateShapeForElement(id, modelElement, assignments);

            return null;
		}
		#endregion
	}
	
	/// <summary>
	/// This class is used to store common options. Double-derived class to allow easier code customization.
	/// </summary>
	public partial class ");
            
            #line 674 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ModelDataOptions : ");
            
            #line 674 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ModelDataOptionsBase\r\n\t{\r\n\t\t#region Singleton Instance\r\n\t\tprivate static ");
            
            #line 677 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ModelDataOptions modelDataOptions = null;
		
        /// <summary>
        /// Singleton instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)] // Will trigger creation otherwise.
        public static DslEditorModeling::IModelDataOptions Instance
        {
            [global::System.Diagnostics.DebuggerStepThrough]
            get
            {
                if( modelDataOptions == null )
				{
					modelDataOptions = new ");
            
            #line 690 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ModelDataOptions();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn modelDataOptions;\r\n            }\r\n  " +
                    "      }\r\n\t\t\r\n\t\tprivate ");
            
            #line 697 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ModelDataOptions() : base()\r\n\t\t{\r\n\t\t}\r\n        #endregion\r\n\t}\r\n\t\r\n\t/// <summary>\r" +
                    "\n    /// This class is used to store common options. \r\n    /// </summary>\r\n\tpubl" +
                    "ic abstract partial class ");
            
            #line 706 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ModelDataOptionsBase : DslEditorModeling::IModelDataOptions\r\n\t{\r\n\t\t#region Constr" +
                    "uctor\r\n\t\t/// <summary>\r\n\t\t/// Constructs a new ");
            
            #line 710 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write("ModelDataOptionsBase.\r\n\t\t/// </summary>\t\r\n\t\tprotected ");
            
            #line 712 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.Name));
            
            #line default
            #line hidden
            this.Write(@"ModelDataOptionsBase()
		{
		}
		#endregion
		
		#region Properties
		/// <summary>
        /// Gets the name of the current editor.
        /// </summary>
        public virtual string AppName
        {
            get
            {
                return """);
            
            #line 725 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.ApplicationName));
            
            #line default
            #line hidden
            this.Write("\";\r\n            }\r\n        }\r\n\t\t\r\n\t\t/// <summary>\r\n        /// Gets the name of t" +
                    "he company providing this editor.\r\n        /// </summary>\r\n        public virtua" +
                    "l string Company\r\n\t\t{\r\n\t        get\r\n    \t    {\r\n        \t    return \"");
            
            #line 736 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dm.CompanyName));
            
            #line default
            #line hidden
            this.Write("\";\r\n        \t}\t\r\n\t\t}\r\n\t\t\r\n\t\t/// <summary>\r\n        /// Gets the version of the ed" +
                    "itor.\r\n        /// </summary>\r\n        public virtual string Version\r\n        {\r" +
                    "\n            get\r\n            {\r\n");
            
            #line 747 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"

			string version = "";
			if( !String.IsNullOrEmpty(dm.MajorVersion) && !String.IsNullOrWhiteSpace(dm.MajorVersion))
			{
				version = dm.MajorVersion;
				if( !String.IsNullOrEmpty(dm.MinorVersion) && !String.IsNullOrWhiteSpace(dm.MinorVersion))
				{
					version += "." + dm.MinorVersion;
					if( !String.IsNullOrEmpty(dm.Build) && !String.IsNullOrWhiteSpace(dm.Build))
					{
						version += "." + dm.Build;
						if( !String.IsNullOrEmpty(dm.Revision) && !String.IsNullOrWhiteSpace(dm.Revision))
						{
							version += "." + dm.Revision;
						}
					}					
				}				
			}

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n                return \"");
            
            #line 766 "J:\Temp\!!!!!TESTS_PDE_IMPL3\Tum.PDE.ToolFramework\Tum.PDE.ToolFramework.Templates\DomainModelServicesGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(version));
            
            #line default
            #line hidden
            this.Write(@""";
            }
        }
		
		private string appDataDirectory = null;
		/// <summary>
        /// Gets the application data directory for the current editor.
        /// </summary>
		public virtual string AppDataDirectory
		{
			get
			{
				if( appDataDirectory == null )
				{
					appDataDirectory = System.Environment.GetFolderPath(System.Environment.SpecialFolder.ApplicationData) 
										+ System.IO.Path.DirectorySeparatorChar 
										+ Company
										+ System.IO.Path.DirectorySeparatorChar
										+  AppName;
					
					if( !System.String.IsNullOrEmpty(Version) && !System.String.IsNullOrWhiteSpace(Version) )
						appDataDirectory += "" "" + Version;
					
	                if (!System.IO.Directory.Exists(appDataDirectory))
    	                System.IO.Directory.CreateDirectory(appDataDirectory);
				}
                return appDataDirectory;
			}
		}
		#endregion
	}	
}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
